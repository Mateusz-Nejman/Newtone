¬
4D:\Projekty\CS\Newtone\Newtone.Mobile.UI\App.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
{ 
public 

partial 
class 
App 
: 
Application *
{		 
public 
static 
App 
Instance "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
App 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
Instance 
= 
this 
; 
if 
( 
Global 
. 
Permissions "
." #
IsValid# *
(* +
)+ ,
&&- /
File0 4
.4 5
Exists5 ;
(; <

GlobalData< F
.F G
CurrentG N
.N O
DataPathO W
+X Y
$strZ j
)j k
)k l
{ 
if 
( 
Global 
. 
TV 
) 
{ 
MainPage 
= 
new "
Views# (
.( )
TV) +
.+ ,

NormalPage, 6
(6 7
)7 8
;8 9
} 
else 
{ 
MainPage 
= 
new "

NormalPage# -
(- .
). /
;/ 0
} 
} 
else 
{ 
if 
( 
Global 
. 
TV 
) 
{   
MainPage!! 
=!! 
new!! "
Views!!# (
.!!( )
TV!!) +
.!!+ ,
LanguageSelectPage!!, >
(!!> ?
)!!? @
;!!@ A
}"" 
else## 
{$$ 
MainPage%% 
=%% 
new%% "
LanguageSelectPage%%# 5
(%%5 6
)%%6 7
;%%7 8
}&& 
}'' 
}(( 	
}** 
}++ þ
8D:\Projekty\CS\Newtone\Newtone.Mobile.UI\AssemblyInfo.cs
[ 
assembly 	
:	 

XamlCompilation 
( "
XamlCompilationOptions 1
.1 2
Compile2 9
)9 :
]: ;Ë
2D:\Projekty\CS\Newtone\Newtone.Mobile.UI\Colors.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
{ 
public 

static 
class 
Colors 
{ 
public 
static 
Color 
ColorPrimary (
=>) +
Color, 1
.1 2
FromHex2 9
(9 :
$str: C
)C D
;D E
public

 
static

 
Color

 
ColorSecondary

 *
=>

+ -
Color

. 3
.

3 4
FromHex

4 ;
(

; <
$str

< E
)

E F
;

F G
public 
static 
Color 
ColorThirdary )
=>* ,
Color- 2
.2 3
FromHex3 :
(: ;
$str; D
)D E
;E F
public 
static 
Color 
	TextColor %
=>& (
Color) .
.. /
FromHex/ 6
(6 7
$str7 @
)@ A
;A B
public 
static 
Color 

BadgeColor &
=>' )
Color* /
./ 0
FromHex0 7
(7 8
$str8 A
)A B
;B C
public 
static 
Color 
ProgressBarColor ,
=>- /
Color0 5
.5 6
FromHex6 =
(= >
$str> G
)G H
;H I
} 
} Ç2
ED:\Projekty\CS\Newtone\Newtone.Mobile.UI\FocusLibrary\FocusContext.cs
	namespace 	
Nejman
 
. 
Xamarin 
. 
FocusLibrary %
{ 
public 

static 
class 
FocusContext $
{ 
private 
static 
readonly 
List  $
<$ %
INFocusElement% 3
>3 4
elements5 =
=> ?
new@ C
ListD H
<H I
INFocusElementI W
>W X
(X Y
)Y Z
;Z [
public 
static 
bool 
	FocusLeft $
($ %
INFocusElement% 3
element4 ;
); <
{		 	
return

 
ChangeFocus

 
(

 
element

 &
,

& '
element

( /
.

/ 0
NextFocusLeft

0 =
)

= >
;

> ?
} 	
public 
static 
bool 

FocusRight %
(% &
INFocusElement& 4
element5 <
)< =
{ 	
return 
ChangeFocus 
( 
element &
,& '
element( /
./ 0
NextFocusRight0 >
)> ?
;? @
} 	
public 
static 
bool 
FocusUp "
(" #
INFocusElement# 1
element2 9
)9 :
{ 	
return 
ChangeFocus 
( 
element &
,& '
element( /
./ 0
NextFocusUp0 ;
); <
;< =
} 	
public 
static 
bool 
	FocusDown $
($ %
INFocusElement% 3
element4 ;
); <
{ 	
return 
ChangeFocus 
( 
element &
,& '
element( /
./ 0
NextFocusDown0 =
)= >
;> ?
} 	
public 
static 
void 
Register #
(# $
INFocusElement$ 2
element3 :
): ;
{ 	
if 
( 
! 
elements 
. 
Contains "
(" #
element# *
)* +
)+ ,
elements 
. 
Add 
( 
element $
)$ %
;% &
}   	
public"" 
static"" 
void"" 

Unregister"" %
(""% &
INFocusElement""& 4
element""5 <
)""< =
{## 	
if$$ 
($$ 
elements$$ 
.$$ 
Contains$$ !
($$! "
element$$" )
)$$) *
)$$* +
elements%% 
.%% 
Remove%% 
(%%  
element%%  '
)%%' (
;%%( )
}&& 	
public(( 
static(( 
INFocusElement(( $
GetFocusElement((% 4
(((4 5
)((5 6
{)) 	
INFocusElement** 
focusElement** '
=**( )
null*** .
;**. /
foreach++ 
(++ 
var++ 
element++ 
in++  "
elements++# +
)+++ ,
{,, 
if-- 
(-- 
element-- 
.-- 

IsNFocused-- &
)--& '
focusElement..  
=..! "
element..# *
;..* +
}// 
if11 
(11 
focusElement11 
!=11 
null11  $
)11$ %
return22 
focusElement22 #
;22# $
if44 
(44 
elements44 
.44 
Count44 
>44  
$num44! "
)44" #
{55 
elements66 
[66 
$num66 
]66 
.66 

IsNFocused66 &
=66' (
true66) -
;66- .
return77 
elements77 
[77  
$num77  !
]77! "
;77" #
}88 
return:: 
null:: 
;:: 
};; 	
public== 
static== 
bool== 
ChangeFocus== &
(==& '
INFocusElement==' 5

oldElement==6 @
,==@ A
INFocusElement==B P

newElement==Q [
)==[ \
{>> 	
if?? 
(?? 

oldElement?? 
!=?? 
null?? !
)??! "

oldElement@@ 
.@@ 

IsNFocused@@ %
=@@& '
true@@( ,
;@@, -
ifAA 
(AA 

newElementAA 
!=AA 
nullAA "
)AA" #
SystemBB 
.BB 
DiagnosticsBB "
.BB" #
DebugBB# (
.BB( )
	WriteLineBB) 2
(BB2 3

newElementBB3 =
.BB= >
GetTypeBB> E
(BBE F
)BBF G
)BBG H
;BBH I
ifDD 
(DD 

oldElementDD 
==DD 

newElementDD (
)DD( )
{EE 
returnFF 
falseFF 
;FF 
}GG 
ifII 
(II 

newElementII 
!=II 
nullII "
)II" #
{JJ 
ifKK 
(KK 

oldElementKK 
!=KK !
nullKK" &
)KK& '
{LL 

oldElementMM 
.MM 

IsNFocusedMM )
=MM* +
falseMM, 1
;MM1 2
}NN 

UnfocusAllOO 
(OO 
)OO 
;OO 

newElementPP 
.PP 

IsNFocusedPP %
=PP& '
truePP( ,
;PP, -
returnQQ 
trueQQ 
;QQ 
}RR 
returnTT 
falseTT 
;TT 
}UU 	
publicWW 
staticWW 
voidWW 

UnfocusAllWW %
(WW% &
)WW& '
{XX 	
foreachYY 
(YY 
varYY 
elementYY  
inYY! #
elementsYY$ ,
)YY, -
{ZZ 
element[[ 
.[[ 

IsNFocused[[ "
=[[# $
false[[% *
;[[* +
}\\ 
}]] 	
}^^ 
}__ å
GD:\Projekty\CS\Newtone\Newtone.Mobile.UI\FocusLibrary\INFocusContent.cs
	namespace 	
Nejman
 
. 
Xamarin 
. 
FocusLibrary %
{ 
public 

	interface 
INFocusContent #
{ 
INFocusElement 

TopElement !
{" #
get$ '
;' (
set) ,
;, -
}. /
INFocusElement 
BottomElement $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} È
GD:\Projekty\CS\Newtone\Newtone.Mobile.UI\FocusLibrary\INFocusElement.cs
	namespace 	
Nejman
 
. 
Xamarin 
. 
FocusLibrary %
{ 
public 

	interface 
INFocusElement #
{ 
INFocusElement 
NextFocusLeft $
{% &
get' *
;* +
set, /
;/ 0
}1 2
INFocusElement 
NextFocusRight %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
INFocusElement 
NextFocusUp "
{# $
get% (
;( )
set* -
;- .
}/ 0
INFocusElement 
NextFocusDown $
{% &
get' *
;* +
set, /
;/ 0
}1 2
bool		 

IsNFocused		 
{		 
get		 
;		 
set		 "
;		" #
}		$ %
void 
	FocusLeft 
( 
) 
; 
void 

FocusRight 
( 
) 
; 
void 
FocusUp 
( 
) 
; 
void 
	FocusDown 
( 
) 
; 
void 
FocusAction 
( 
) 
; 
} 
} òN
@D:\Projekty\CS\Newtone\Newtone.Mobile.UI\FocusLibrary\NButton.cs
	namespace 	
Nejman
 
. 
Xamarin 
. 
FocusLibrary %
{ 
public 

class 
NButton 
: 
Button !
,! "
INFocusElement# 1
{ 
public		 
static		 
readonly		 
BindableProperty		 /
IsNFocusedProperty		0 B
=		C D
BindableProperty

 
.

 
Create

 #
(

# $
$str

$ 0
,

0 1
typeof

2 8
(

8 9
bool

9 =
)

= >
,

> ?
typeof

@ F
(

F G
NButton

G N
)

N O
,

O P
false

Q V
,

V W
propertyChanged

X g
:

g h
OnIsNFocusedChanged

i |
)

| }
;

} ~
public 
static 
readonly 
BindableProperty /
NFocusColorProperty0 C
=D E
BindableProperty 
. 
Create #
(# $
$str$ 1
,1 2
typeof3 9
(9 :
Color: ?
)? @
,@ A
typeofB H
(H I
NButtonI P
)P Q
,Q R
ColorS X
.X Y
WhiteY ^
)^ _
;_ `
public 
static 
readonly 
BindableProperty /!
NextFocusLeftProperty0 E
=F G
BindableProperty 
. 
Create #
(# $
$str$ 3
,3 4
typeof5 ;
(; <
INFocusElement< J
)J K
,K L
typeofM S
(S T
NButtonT [
)[ \
)\ ]
;] ^
public 
static 
readonly 
BindableProperty /"
NextFocusRightProperty0 F
=G H
BindableProperty 
. 
Create #
(# $
$str$ 4
,4 5
typeof6 <
(< =
INFocusElement= K
)K L
,L M
typeofN T
(T U
NButtonU \
)\ ]
)] ^
;^ _
public 
static 
readonly 
BindableProperty /
NextFocusUpProperty0 C
=D E
BindableProperty 
. 
Create #
(# $
$str$ 1
,1 2
typeof3 9
(9 :
INFocusElement: H
)H I
,I J
typeofK Q
(Q R
NButtonR Y
)Y Z
)Z [
;[ \
public 
static 
readonly 
BindableProperty /!
NextFocusDownProperty0 E
=F G
BindableProperty 
. 
Create #
(# $
$str$ 3
,3 4
typeof5 ;
(; <
INFocusElement< J
)J K
,K L
typeofM S
(S T
NButtonT [
)[ \
)\ ]
;] ^
public 
static 
readonly 
BindableProperty /
NCommandProperty0 @
=A B
BindableProperty 
. 
Create #
(# $
$str$ .
,. /
typeof0 6
(6 7
ICommand7 ?
)? @
,@ A
typeofB H
(H I
NButtonI P
)P Q
)Q R
;R S
public 
bool 

IsNFocused 
{ 	
set 
{ 
SetValue 
( 
IsNFocusedProperty -
,- .
value/ 4
)4 5
;5 6
}7 8
get 
{ 
return 
( 
bool 
) 
GetValue '
(' (
IsNFocusedProperty( :
): ;
;; <
}= >
} 	
public 
Color 
NFocusColor  
{   	
set!! 
{!! 
SetValue!! 
(!! 
NFocusColorProperty!! .
,!!. /
value!!0 5
)!!5 6
;!!6 7
}!!8 9
get"" 
{"" 
return"" 
("" 
Color"" 
)""  
GetValue""  (
(""( )
NFocusColorProperty"") <
)""< =
;""= >
}""? @
}## 	
public%% 
INFocusElement%% 
NextFocusLeft%% +
{&& 	
set'' 
{'' 
SetValue'' 
('' !
NextFocusLeftProperty'' 0
,''0 1
value''2 7
)''7 8
;''8 9
}'': ;
get(( 
{(( 
return(( 
((( 
INFocusElement(( (
)((( )
GetValue(() 1
(((1 2!
NextFocusLeftProperty((2 G
)((G H
;((H I
}((J K
})) 	
public++ 
INFocusElement++ 
NextFocusRight++ ,
{,, 	
set-- 
{-- 
SetValue-- 
(-- "
NextFocusRightProperty-- 1
,--1 2
value--3 8
)--8 9
;--9 :
}--; <
get.. 
{.. 
return.. 
(.. 
INFocusElement.. (
)..( )
GetValue..) 1
(..1 2"
NextFocusRightProperty..2 H
)..H I
;..I J
}..K L
}// 	
public11 
INFocusElement11 
NextFocusUp11 )
{22 	
set33 
{33 
SetValue33 
(33 
NextFocusUpProperty33 .
,33. /
value330 5
)335 6
;336 7
}338 9
get44 
{44 
return44 
(44 
INFocusElement44 (
)44( )
GetValue44) 1
(441 2
NextFocusUpProperty442 E
)44E F
;44F G
}44H I
}55 	
public77 
INFocusElement77 
NextFocusDown77 +
{88 	
set99 
{99 
SetValue99 
(99 !
NextFocusDownProperty99 0
,990 1
value992 7
)997 8
;998 9
}99: ;
get:: 
{:: 
return:: 
(:: 
INFocusElement:: (
)::( )
GetValue::) 1
(::1 2!
NextFocusDownProperty::2 G
)::G H
;::H I
}::J K
};; 	
public== 
ICommand== 
NCommand==  
{>> 	
set?? 
{?? 
SetValue?? 
(?? 
NCommandProperty?? +
,??+ ,
value??- 2
)??2 3
;??3 4
}??5 6
get@@ 
{@@ 
return@@ 
(@@ 
ICommand@@ "
)@@" #
GetValue@@# +
(@@+ ,
NCommandProperty@@, <
)@@< =
;@@= >
}@@? @
}AA 	
publicDD 
NButtonDD 
(DD 
)DD 
{EE 	
FocusContextFF 
.FF 
RegisterFF !
(FF! "
thisFF" &
)FF& '
;FF' (
thisGG 
.GG 
BorderWidthGG 
=GG 
$numGG  
;GG  !
}HH 	
~JJ 	
NButtonJJ	 
(JJ 
)JJ 
{KK 	
FocusContextLL 
.LL 

UnregisterLL #
(LL# $
thisLL$ (
)LL( )
;LL) *
}MM 	
privatePP 
staticPP 
voidPP 
OnIsNFocusedChangedPP /
(PP/ 0
BindableObjectPP0 >
bindablePP? G
,PPG H
objectPPI O
oldValuePPP X
,PPX Y
objectPPZ `
newValuePPa i
)PPi j
{QQ 	
NButtonRR 
focusButtonRR 
=RR  !
(RR" #
NButtonRR# *
)RR* +
bindableRR+ 3
;RR3 4
boolSS 
	isFocusedSS 
=SS 
(SS 
boolSS "
)SS" #
newValueSS# +
;SS+ ,
focusButtonTT 
.TT 
BorderColorTT #
=TT$ %
	isFocusedTT& /
?TT0 1
focusButtonTT2 =
.TT= >
NFocusColorTT> I
:TTJ K
ColorTTL Q
.TTQ R
TransparentTTR ]
;TT] ^
}UU 	
publicXX 
voidXX 
	FocusLeftXX 
(XX 
)XX 
{YY 	
FocusContextZZ 
.ZZ 
	FocusLeftZZ "
(ZZ" #
thisZZ# '
)ZZ' (
;ZZ( )
}[[ 	
public]] 
void]] 

FocusRight]] 
(]] 
)]]  
{^^ 	
FocusContext__ 
.__ 

FocusRight__ #
(__# $
this__$ (
)__( )
;__) *
}`` 	
publicbb 
voidbb 
FocusUpbb 
(bb 
)bb 
{cc 	
FocusContextdd 
.dd 
FocusUpdd  
(dd  !
thisdd! %
)dd% &
;dd& '
}ee 	
publicgg 
voidgg 
	FocusDowngg 
(gg 
)gg 
{hh 	
FocusContextii 
.ii 
	FocusDownii "
(ii" #
thisii# '
)ii' (
;ii( )
}jj 	
publicll 
voidll 
FocusActionll 
(ll  
)ll  !
{mm 	
ifnn 
(nn 
NCommandnn 
?nn 
.nn 

CanExecutenn $
(nn$ %
CommandParameternn% 5
)nn5 6
==nn7 9
truenn: >
)nn> ?
NCommandoo 
.oo 
Executeoo  
(oo  !
CommandParameteroo! 1
)oo1 2
;oo2 3
}pp 	
}rr 
}ss ûE
?D:\Projekty\CS\Newtone\Newtone.Mobile.UI\FocusLibrary\NEntry.cs
	namespace 	
Nejman
 
. 
Xamarin 
. 
FocusLibrary %
{ 
public 

class 
NEntry 
: 
Entry 
,  
INFocusElement! /
{ 
public 
static 
readonly 
BindableProperty /
IsNFocusedProperty0 B
=C D
BindableProperty		 
.		 
Create		 #
(		# $
$str		$ 0
,		0 1
typeof		2 8
(		8 9
bool		9 =
)		= >
,		> ?
typeof		@ F
(		F G
NEntry		G M
)		M N
,		N O
false		P U
,		U V
propertyChanged		W f
:		f g
OnIsNFocusedChanged		h {
)		{ |
;		| }
public

 
static

 
readonly

 
BindableProperty

 /
NFocusColorProperty

0 C
=

D E
BindableProperty 
. 
Create #
(# $
$str$ 1
,1 2
typeof3 9
(9 :
Color: ?
)? @
,@ A
typeofB H
(H I
NEntryI O
)O P
,P Q
ColorR W
.W X
FromRgbaX `
(` a
$numa d
,d e
$numf i
,i j
$numk n
,n o
$nump r
)r s
)s t
;t u
public 
static 
readonly 
BindableProperty /!
NextFocusLeftProperty0 E
=F G
BindableProperty 
. 
Create #
(# $
$str$ 3
,3 4
typeof5 ;
(; <
INFocusElement< J
)J K
,K L
typeofM S
(S T
NEntryT Z
)Z [
)[ \
;\ ]
public 
static 
readonly 
BindableProperty /"
NextFocusRightProperty0 F
=G H
BindableProperty 
. 
Create #
(# $
$str$ 4
,4 5
typeof6 <
(< =
INFocusElement= K
)K L
,L M
typeofN T
(T U
NEntryU [
)[ \
)\ ]
;] ^
public 
static 
readonly 
BindableProperty /
NextFocusUpProperty0 C
=D E
BindableProperty 
. 
Create #
(# $
$str$ 1
,1 2
typeof3 9
(9 :
INFocusElement: H
)H I
,I J
typeofK Q
(Q R
NEntryR X
)X Y
)Y Z
;Z [
public 
static 
readonly 
BindableProperty /!
NextFocusDownProperty0 E
=F G
BindableProperty 
. 
Create #
(# $
$str$ 3
,3 4
typeof5 ;
(; <
INFocusElement< J
)J K
,K L
typeofM S
(S T
NEntryT Z
)Z [
)[ \
;\ ]
public 
bool 

IsNFocused 
{ 	
set 
{ 
SetValue 
( 
IsNFocusedProperty -
,- .
value/ 4
)4 5
;5 6
}7 8
get 
{ 
return 
( 
bool 
) 
GetValue '
(' (
IsNFocusedProperty( :
): ;
;; <
}= >
} 	
public 
Color 
NFocusColor  
{ 	
set 
{ 
SetValue 
( 
NFocusColorProperty .
,. /
value0 5
)5 6
;6 7
}8 9
get 
{ 
return 
( 
Color 
)  
GetValue  (
(( )
NFocusColorProperty) <
)< =
;= >
}? @
}   	
public"" 
INFocusElement"" 
NextFocusLeft"" +
{## 	
set$$ 
{$$ 
SetValue$$ 
($$ !
NextFocusLeftProperty$$ 0
,$$0 1
value$$2 7
)$$7 8
;$$8 9
}$$: ;
get%% 
{%% 
return%% 
(%% 
INFocusElement%% (
)%%( )
GetValue%%) 1
(%%1 2!
NextFocusLeftProperty%%2 G
)%%G H
;%%H I
}%%J K
}&& 	
public(( 
INFocusElement(( 
NextFocusRight(( ,
{)) 	
set** 
{** 
SetValue** 
(** "
NextFocusRightProperty** 1
,**1 2
value**3 8
)**8 9
;**9 :
}**; <
get++ 
{++ 
return++ 
(++ 
INFocusElement++ (
)++( )
GetValue++) 1
(++1 2"
NextFocusRightProperty++2 H
)++H I
;++I J
}++K L
},, 	
public.. 
INFocusElement.. 
NextFocusUp.. )
{// 	
set00 
{00 
SetValue00 
(00 
NextFocusUpProperty00 .
,00. /
value000 5
)005 6
;006 7
}008 9
get11 
{11 
return11 
(11 
INFocusElement11 (
)11( )
GetValue11) 1
(111 2
NextFocusUpProperty112 E
)11E F
;11F G
}11H I
}22 	
public44 
INFocusElement44 
NextFocusDown44 +
{55 	
set66 
{66 
SetValue66 
(66 !
NextFocusDownProperty66 0
,660 1
value662 7
)667 8
;668 9
}66: ;
get77 
{77 
return77 
(77 
INFocusElement77 (
)77( )
GetValue77) 1
(771 2!
NextFocusDownProperty772 G
)77G H
;77H I
}77J K
}88 	
public;; 
NEntry;; 
(;; 
);; 
{<< 	
FocusContext== 
.== 
Register== !
(==! "
this==" &
)==& '
;==' (
}>> 	
~@@ 	
NEntry@@	 
(@@ 
)@@ 
{AA 	
FocusContextBB 
.BB 

UnregisterBB #
(BB# $
thisBB$ (
)BB( )
;BB) *
}CC 	
privateFF 
staticFF 
voidFF 
OnIsNFocusedChangedFF /
(FF/ 0
BindableObjectFF0 >
bindableFF? G
,FFG H
objectFFI O
oldValueFFP X
,FFX Y
objectFFZ `
newValueFFa i
)FFi j
{GG 	
NEntryHH 
focusButtonHH 
=HH  
(HH! "
NEntryHH" (
)HH( )
bindableHH) 1
;HH1 2
boolII 
	isFocusedII 
=II 
(II 
boolII "
)II" #
newValueII# +
;II+ ,
focusButtonKK 
.KK 
BackgroundColorKK '
=KK( )
	isFocusedKK* 3
?KK4 5
focusButtonKK6 A
.KKA B
NFocusColorKKB M
:KKN O
ColorKKP U
.KKU V
TransparentKKV a
;KKa b
}LL 	
publicOO 
voidOO 
	FocusLeftOO 
(OO 
)OO 
{PP 	
FocusContextQQ 
.QQ 
	FocusLeftQQ "
(QQ" #
thisQQ# '
)QQ' (
;QQ( )
}RR 	
publicTT 
voidTT 

FocusRightTT 
(TT 
)TT  
{UU 	
FocusContextVV 
.VV 

FocusRightVV #
(VV# $
thisVV$ (
)VV( )
;VV) *
}WW 	
publicYY 
voidYY 
FocusUpYY 
(YY 
)YY 
{ZZ 	
FocusContext[[ 
.[[ 
FocusUp[[  
([[  !
this[[! %
)[[% &
;[[& '
}\\ 	
public^^ 
void^^ 
	FocusDown^^ 
(^^ 
)^^ 
{__ 	
FocusContext`` 
.`` 
	FocusDown`` "
(``" #
this``# '
)``' (
;``( )
}aa 	
publiccc 
voidcc 
FocusActioncc 
(cc  
)cc  !
{dd 	
baseee 
.ee 
Focusee 
(ee 
)ee 
;ee 
}ff 	
}hh 
}ii ½O
ED:\Projekty\CS\Newtone\Newtone.Mobile.UI\FocusLibrary\NImageButton.cs
	namespace 	
Nejman
 
. 
Xamarin 
. 
FocusLibrary %
{ 
public 

class 
NImageButton 
: 
ImageButton  +
,+ ,
INFocusElement- ;
{ 
public		 
static		 
readonly		 
BindableProperty		 /
IsNFocusedProperty		0 B
=		C D
BindableProperty

 
.

 
Create

 #
(

# $
$str

$ 0
,

0 1
typeof

2 8
(

8 9
bool

9 =
)

= >
,

> ?
typeof

@ F
(

F G
NImageButton

G S
)

S T
,

T U
false

V [
,

[ \
propertyChanged

] l
:

l m 
OnIsNFocusedChanged	

n 
)


 
;


 
public 
static 
readonly 
BindableProperty /
NFocusColorProperty0 C
=D E
BindableProperty 
. 
Create #
(# $
$str$ 1
,1 2
typeof3 9
(9 :
Color: ?
)? @
,@ A
typeofB H
(H I
NImageButtonI U
)U V
,V W
ColorX ]
.] ^
White^ c
)c d
;d e
public 
static 
readonly 
BindableProperty /!
NextFocusLeftProperty0 E
=F G
BindableProperty 
. 
Create #
(# $
$str$ 3
,3 4
typeof5 ;
(; <
INFocusElement< J
)J K
,K L
typeofM S
(S T
NImageButtonT `
)` a
)a b
;b c
public 
static 
readonly 
BindableProperty /"
NextFocusRightProperty0 F
=G H
BindableProperty 
. 
Create #
(# $
$str$ 4
,4 5
typeof6 <
(< =
INFocusElement= K
)K L
,L M
typeofN T
(T U
NImageButtonU a
)a b
)b c
;c d
public 
static 
readonly 
BindableProperty /
NextFocusUpProperty0 C
=D E
BindableProperty 
. 
Create #
(# $
$str$ 1
,1 2
typeof3 9
(9 :
INFocusElement: H
)H I
,I J
typeofK Q
(Q R
NImageButtonR ^
)^ _
)_ `
;` a
public 
static 
readonly 
BindableProperty /!
NextFocusDownProperty0 E
=F G
BindableProperty 
. 
Create #
(# $
$str$ 3
,3 4
typeof5 ;
(; <
INFocusElement< J
)J K
,K L
typeofM S
(S T
NImageButtonT `
)` a
)a b
;b c
public 
static 
readonly 
BindableProperty /
NCommandProperty0 @
=A B
BindableProperty 
. 
Create #
(# $
$str$ .
,. /
typeof0 6
(6 7
ICommand7 ?
)? @
,@ A
typeofB H
(H I
NImageButtonI U
)U V
)V W
;W X
public 
bool 

IsNFocused 
{ 	
set 
{ 
SetValue 
( 
IsNFocusedProperty -
,- .
value/ 4
)4 5
;5 6
}7 8
get 
{ 
return 
( 
bool 
) 
GetValue '
(' (
IsNFocusedProperty( :
): ;
;; <
}= >
} 	
public 
Color 
NFocusColor  
{   	
set!! 
{!! 
SetValue!! 
(!! 
NFocusColorProperty!! .
,!!. /
value!!0 5
)!!5 6
;!!6 7
}!!8 9
get"" 
{"" 
return"" 
("" 
Color"" 
)""  
GetValue""  (
(""( )
NFocusColorProperty"") <
)""< =
;""= >
}""? @
}## 	
public%% 
INFocusElement%% 
NextFocusLeft%% +
{&& 	
set'' 
{'' 
SetValue'' 
('' !
NextFocusLeftProperty'' 0
,''0 1
value''2 7
)''7 8
;''8 9
}'': ;
get(( 
{(( 
return(( 
((( 
INFocusElement(( (
)((( )
GetValue(() 1
(((1 2!
NextFocusLeftProperty((2 G
)((G H
;((H I
}((J K
})) 	
public++ 
INFocusElement++ 
NextFocusRight++ ,
{,, 	
set-- 
{-- 
SetValue-- 
(-- "
NextFocusRightProperty-- 1
,--1 2
value--3 8
)--8 9
;--9 :
}--; <
get.. 
{.. 
return.. 
(.. 
INFocusElement.. (
)..( )
GetValue..) 1
(..1 2"
NextFocusRightProperty..2 H
)..H I
;..I J
}..K L
}// 	
public11 
INFocusElement11 
NextFocusUp11 )
{22 	
set33 
{33 
SetValue33 
(33 
NextFocusUpProperty33 .
,33. /
value330 5
)335 6
;336 7
}338 9
get44 
{44 
return44 
(44 
INFocusElement44 (
)44( )
GetValue44) 1
(441 2
NextFocusUpProperty442 E
)44E F
;44F G
}44H I
}55 	
public77 
INFocusElement77 
NextFocusDown77 +
{88 	
set99 
{99 
SetValue99 
(99 !
NextFocusDownProperty99 0
,990 1
value992 7
)997 8
;998 9
}99: ;
get:: 
{:: 
return:: 
(:: 
INFocusElement:: (
)::( )
GetValue::) 1
(::1 2!
NextFocusDownProperty::2 G
)::G H
;::H I
}::J K
};; 	
public== 
ICommand== 
NCommand==  
{>> 	
set?? 
{?? 
SetValue?? 
(?? 
NCommandProperty?? +
,??+ ,
value??- 2
)??2 3
;??3 4
}??5 6
get@@ 
{@@ 
return@@ 
(@@ 
ICommand@@ "
)@@" #
GetValue@@# +
(@@+ ,
NCommandProperty@@, <
)@@< =
;@@= >
}@@? @
}AA 	
publicDD 
NImageButtonDD 
(DD 
)DD 
{EE 	
FocusContextFF 
.FF 
RegisterFF !
(FF! "
thisFF" &
)FF& '
;FF' (
thisGG 
.GG 
BorderWidthGG 
=GG 
$numGG  
;GG  !
}HH 	
~JJ 	
NImageButtonJJ	 
(JJ 
)JJ 
{KK 	
FocusContextLL 
.LL 

UnregisterLL #
(LL# $
thisLL$ (
)LL( )
;LL) *
}MM 	
privatePP 
staticPP 
voidPP 
OnIsNFocusedChangedPP /
(PP/ 0
BindableObjectPP0 >
bindablePP? G
,PPG H
objectPPI O
oldValuePPP X
,PPX Y
objectPPZ `
newValuePPa i
)PPi j
{QQ 	
NImageButtonRR 
focusButtonRR $
=RR% &
(RR' (
NImageButtonRR( 4
)RR4 5
bindableRR5 =
;RR= >
boolSS 
	isFocusedSS 
=SS 
(SS 
boolSS "
)SS" #
newValueSS# +
;SS+ ,
focusButtonUU 
.UU 
BorderColorUU #
=UU$ %
	isFocusedUU& /
?UU0 1
focusButtonUU2 =
.UU= >
NFocusColorUU> I
:UUJ K
ColorUUL Q
.UUQ R
TransparentUUR ]
;UU] ^
}VV 	
publicYY 
voidYY 
	FocusLeftYY 
(YY 
)YY 
{ZZ 	
FocusContext[[ 
.[[ 
	FocusLeft[[ "
([[" #
this[[# '
)[[' (
;[[( )
}\\ 	
public^^ 
void^^ 

FocusRight^^ 
(^^ 
)^^  
{__ 	
FocusContext`` 
.`` 

FocusRight`` #
(``# $
this``$ (
)``( )
;``) *
}aa 	
publiccc 
voidcc 
FocusUpcc 
(cc 
)cc 
{dd 	
FocusContextee 
.ee 
FocusUpee  
(ee  !
thisee! %
)ee% &
;ee& '
}ff 	
publichh 
voidhh 
	FocusDownhh 
(hh 
)hh 
{ii 	
FocusContextjj 
.jj 
	FocusDownjj "
(jj" #
thisjj# '
)jj' (
;jj( )
}kk 	
publicmm 
voidmm 
FocusActionmm 
(mm  
)mm  !
{nn 	
ifoo 
(oo 
NCommandoo 
?oo 
.oo 

CanExecuteoo $
(oo$ %
CommandParameteroo% 5
)oo5 6
==oo7 9
trueoo: >
)oo> ?
NCommandpp 
.pp 
Executepp  
(pp  !
CommandParameterpp! 1
)pp1 2
;pp2 3
}qq 	
}ss 
}tt ÚH
FD:\Projekty\CS\Newtone\Newtone.Mobile.UI\FocusLibrary\NListViewItem.cs
	namespace 	
Nejman
 
. 
Xamarin 
. 
FocusLibrary %
{		 
public

 

abstract

 
class

 
NListViewItem

 '
:

( )
INFocusElement

* 8
,

8 9
IPropertyChangeBase

: M
{ 
public 
event '
PropertyChangedEventHandler 0
PropertyChanged1 @
;@ A
private 
Frame 
frame 
; 
private 
bool 

isNFocused 
=  !
false" '
;' (
public 
bool 

IsNFocused 
{ 	
get 
=> 

isNFocused 
; 
set 
{ 

isNFocused 
= 
value "
;" #
OnIsNFocusedChanged #
(# $
)$ %
;% &
} 
} 	
public 
Color 
NFocusColor  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
Color1 6
.6 7
White7 <
;< =
public   
INFocusElement   
NextFocusLeft   +
{  , -
get  . 1
;  1 2
set  3 6
;  6 7
}  8 9
public"" 
INFocusElement"" 
NextFocusRight"" ,
{""- .
get""/ 2
;""2 3
set""4 7
;""7 8
}""9 :
public$$ 
INFocusElement$$ 
NextFocusUp$$ )
{$$* +
get$$, /
;$$/ 0
set$$1 4
;$$4 5
}$$6 7
public&& 
INFocusElement&& 
NextFocusDown&& +
{&&, -
get&&. 1
;&&1 2
set&&3 6
;&&6 7
}&&8 9
public(( 
NUntouchedListView(( !
ParentListView((" 0
{((1 2
get((3 6
;((6 7
set((8 ;
;((; <
}((= >
	protected++ 
NListViewItem++ 
(++  
)++  !
{,, 	
FocusContext-- 
.-- 
Register-- !
(--! "
this--" &
)--& '
;--' (
}.. 	
~00 	
NListViewItem00	 
(00 
)00 
{11 	
FocusContext22 
.22 

Unregister22 #
(22# $
this22$ (
)22( )
;22) *
}33 	
private66 
void66 
OnIsNFocusedChanged66 (
(66( )
)66) *
{77 	
if88 
(88 
frame88 
!=88 
null88 
)88 
{99 
frame:: 
.:: 
BorderColor:: !
=::" #

IsNFocused::$ .
?::/ 0
NFocusColor::1 <
:::= >
Color::? D
.::D E
Transparent::E P
;::P Q
};; 
if== 
(== 

IsNFocused== 
&&== 
ParentListView== +
.==+ ,
NItemAppearing==, :
?==: ;
.==; <

CanExecute==< F
(==F G
ParentListView==G U
.==U V
NFocusedIndex==V c
)==c d
====e g
true==h l
)==l m
{>> 
ParentListView?? 
.?? 
NItemAppearing?? -
???- .
.??. /
Execute??/ 6
(??6 7
ParentListView??7 E
.??E F
NFocusedIndex??F S
)??S T
;??T U
}@@ 
}AA 	
publicDD 
voidDD 
	FocusLeftDD 
(DD 
)DD 
{EE 	
ifFF 
(FF 
ParentListViewFF 
.FF 
NOrientationFF +
==FF, .
ScrollOrientationFF/ @
.FF@ A

HorizontalFFA K
)FFK L
{GG 
SystemHH 
.HH 
DiagnosticsHH "
.HH" #
DebugHH# (
.HH( )
	WriteLineHH) 2
(HH2 3
$strHH3 ?
)HH? @
;HH@ A
ParentListViewII 
.II 
	FocusLeftII (
(II( )
)II) *
;II* +
}JJ 
elseKK 
{LL 
ifMM 
(MM 
FocusContextMM 
.MM  
	FocusLeftMM  )
(MM) *
thisMM* .
)MM. /
)MM/ 0
{NN 
ParentListViewOO "
.OO" #
	SetActiveOO# ,
(OO, -
falseOO- 2
)OO2 3
;OO3 4
}PP 
}QQ 
}RR 	
publicTT 
voidTT 

FocusRightTT 
(TT 
)TT  
{UU 	
ifVV 
(VV 
ParentListViewVV 
.VV 
NOrientationVV +
==VV, .
ScrollOrientationVV/ @
.VV@ A

HorizontalVVA K
)VVK L
{WW 
ParentListViewXX 
.XX 

FocusRightXX )
(XX) *
)XX* +
;XX+ ,
}ZZ 
else[[ 
{\\ 
if]] 
(]] 
FocusContext]] 
.]]  

FocusRight]]  *
(]]* +
this]]+ /
)]]/ 0
)]]0 1
{^^ 
ParentListView__ "
.__" #
	SetActive__# ,
(__, -
false__- 2
)__2 3
;__3 4
}`` 
}aa 
}bb 	
publicdd 
voiddd 
FocusUpdd 
(dd 
)dd 
{ee 	
ifff 
(ff 
ParentListViewff 
.ff 
NOrientationff +
==ff, .
ScrollOrientationff/ @
.ff@ A
VerticalffA I
)ffI J
{gg 
ParentListViewhh 
.hh 
FocusUphh &
(hh& '
)hh' (
;hh( )
}ii 
elsejj 
{kk 
ifll 
(ll 
FocusContextll  
.ll  !
FocusUpll! (
(ll( )
thisll) -
)ll- .
)ll. /
{mm 
ParentListViewnn "
.nn" #
	SetActivenn# ,
(nn, -
falsenn- 2
)nn2 3
;nn3 4
}oo 
}pp 
}qq 	
publicss 
voidss 
	FocusDownss 
(ss 
)ss 
{tt 	
ifuu 
(uu 
ParentListViewuu 
.uu 
NOrientationuu +
==uu, .
ScrollOrientationuu/ @
.uu@ A
VerticaluuA I
)uuI J
{vv 
ParentListViewww 
.ww 
	FocusDownww (
(ww( )
)ww) *
;ww* +
}xx 
elseyy 
{zz 
if{{ 
({{ 
FocusContext{{  
.{{  !
	FocusDown{{! *
({{* +
this{{+ /
){{/ 0
){{0 1
{|| 
ParentListView}} "
.}}" #
	SetActive}}# ,
(}}, -
false}}- 2
)}}2 3
;}}3 4
}~~ 
} 
}
 	
public
 
virtual
 
void
 
FocusAction
 '
(
' (
)
( )
{
 	
}
 	
public
 
virtual
 
void
 
LongFocusAction
 +
(
+ ,
)
, -
{
 	
}
 	
public
 
void
 
SetFrame
 
(
 
Frame
 "
frame
# (
)
( )
{
 	
this
 
.
 
frame
 
=
 
frame
 
;
 
}
 	
public
 
void
 
OnPropertyChanged
 %
<
% &
T
& '
>
' (
(
( )

Expression
) 3
<
3 4
Func
4 8
<
8 9
T
9 :
>
: ;
>
; <
property
= E
)
E F
{
 	
PropertyChanged
 
?
 
.
 
Invoke
 #
(
# $
this
$ (
,
( )
new
* -&
PropertyChangedEventArgs
. F
(
F G
(
G H
property
H P
.
P Q
Body
Q U
as
V X
MemberExpression
Y i
)
i j
.
j k
Member
k q
.
q r
Name
r v
)
v w
)
w x
;
x y
}
 	
public
 
void
 
OnPropertyChanged
 %
(
% &
[
& '
CallerMemberName
' 7
]
7 8
string
9 ?
propertyName
@ L
=
M N
null
O S
)
S T
{
 	
PropertyChanged
 
?
 
.
 
Invoke
 #
(
# $
this
$ (
,
( )
new
* -&
PropertyChangedEventArgs
. F
(
F G
propertyName
G S
)
S T
)
T U
;
U V
}
 	
}
 
} ªm
JD:\Projekty\CS\Newtone\Newtone.Mobile.UI\FocusLibrary\NPressGestureMask.cs
	namespace 	
Nejman
 
. 
Xamarin 
. 
FocusLibrary %
{ 
public 

class 
NPressGestureMask "
:# $
Frame% *
,* +
INFocusElement, :
{ 
public		 
static		 
readonly		 
BindableProperty		 /
IsNFocusedProperty		0 B
=		C D
BindableProperty

 
.

 
Create

 #
(

# $
$str

$ 0
,

0 1
typeof

2 8
(

8 9
bool

9 =
)

= >
,

> ?
typeof

@ F
(

F G
NPressGestureMask

G X
)

X Y
,

Y Z
false

[ `
,

` a
propertyChanged

b q
:

q r 
OnIsNFocusedChanged	

s 
)


 
;


 
public 
static 
readonly 
BindableProperty /
NFocusColorProperty0 C
=D E
BindableProperty 
. 
Create #
(# $
$str$ 1
,1 2
typeof3 9
(9 :
Color: ?
)? @
,@ A
typeofB H
(H I
NPressGestureMaskI Z
)Z [
,[ \
Color] b
.b c
FromRgbac k
(k l
$numl o
,o p
$nump s
,s t
$numt w
,w x
$numx z
)z {
){ |
;| }
public 
static 
readonly 
BindableProperty /!
NextFocusLeftProperty0 E
=F G
BindableProperty 
. 
Create #
(# $
$str$ 3
,3 4
typeof5 ;
(; <
INFocusElement< J
)J K
,K L
typeofM S
(S T
NPressGestureMaskT e
)e f
)f g
;g h
public 
static 
readonly 
BindableProperty /"
NextFocusRightProperty0 F
=G H
BindableProperty 
. 
Create #
(# $
$str$ 4
,4 5
typeof6 <
(< =
INFocusElement= K
)K L
,L M
typeofN T
(T U
NPressGestureMaskU f
)f g
)g h
;h i
public 
static 
readonly 
BindableProperty /
NextFocusUpProperty0 C
=D E
BindableProperty 
. 
Create #
(# $
$str$ 1
,1 2
typeof3 9
(9 :
INFocusElement: H
)H I
,I J
typeofK Q
(Q R
NPressGestureMaskR c
)c d
)d e
;e f
public 
static 
readonly 
BindableProperty /!
NextFocusDownProperty0 E
=F G
BindableProperty 
. 
Create #
(# $
$str$ 3
,3 4
typeof5 ;
(; <
INFocusElement< J
)J K
,K L
typeofM S
(S T
NPressGestureMaskT e
)e f
)f g
;g h
public 
static 
readonly 
BindableProperty /
CommandProperty0 ?
=@ A
BindableProperty 
. 
Create #
(# $
$str$ -
,- .
typeof/ 5
(5 6
ICommand6 >
)> ?
,? @
typeofA G
(G H
NPressGestureMaskH Y
)Y Z
)Z [
;[ \
public 
static 
readonly 
BindableProperty /
LongCommandProperty0 C
=D E
BindableProperty 
. 
Create #
(# $
$str$ 1
,1 2
typeof3 9
(9 :
ICommand: B
)B C
,C D
typeofE K
(K L
NPressGestureMaskL ]
)] ^
)^ _
;_ `
public 
static 
readonly 
BindableProperty /$
CommandParameterProperty0 H
=I J
BindableProperty 
. 
Create #
(# $
$str$ 6
,6 7
typeof8 >
(> ?
object? E
)E F
,F G
typeofH N
(N O
NPressGestureMaskO `
)` a
)a b
;b c
public 
static 
readonly 
BindableProperty /(
LongCommandParameterProperty0 L
=M N
BindableProperty 
. 
Create #
(# $
$str$ :
,: ;
typeof< B
(B C
objectC I
)I J
,J K
typeofL R
(R S
NPressGestureMaskS d
)d e
)e f
;f g
public!! 
bool!! 

IsNFocused!! 
{"" 	
set## 
{## 
SetValue## 
(## 
IsNFocusedProperty## -
,##- .
value##/ 4
)##4 5
;##5 6
}##7 8
get$$ 
{$$ 
return$$ 
($$ 
bool$$ 
)$$ 
GetValue$$ '
($$' (
IsNFocusedProperty$$( :
)$$: ;
;$$; <
}$$= >
}%% 	
public'' 
Color'' 
NFocusColor''  
{(( 	
set)) 
{)) 
SetValue)) 
()) 
NFocusColorProperty)) .
,)). /
value))0 5
)))5 6
;))6 7
}))8 9
get** 
{** 
return** 
(** 
Color** 
)**  
GetValue**  (
(**( )
NFocusColorProperty**) <
)**< =
;**= >
}**? @
}++ 	
public-- 
INFocusElement-- 
NextFocusLeft-- +
{.. 	
set// 
{// 
SetValue// 
(// !
NextFocusLeftProperty// 0
,//0 1
value//2 7
)//7 8
;//8 9
}//: ;
get00 
{00 
return00 
(00 
INFocusElement00 (
)00( )
GetValue00) 1
(001 2!
NextFocusLeftProperty002 G
)00G H
;00H I
}00J K
}11 	
public33 
INFocusElement33 
NextFocusRight33 ,
{44 	
set55 
{55 
SetValue55 
(55 "
NextFocusRightProperty55 1
,551 2
value553 8
)558 9
;559 :
}55; <
get66 
{66 
return66 
(66 
INFocusElement66 (
)66( )
GetValue66) 1
(661 2"
NextFocusRightProperty662 H
)66H I
;66I J
}66K L
}77 	
public99 
INFocusElement99 
NextFocusUp99 )
{:: 	
set;; 
{;; 
SetValue;; 
(;; 
NextFocusUpProperty;; .
,;;. /
value;;0 5
);;5 6
;;;6 7
};;8 9
get<< 
{<< 
return<< 
(<< 
INFocusElement<< (
)<<( )
GetValue<<) 1
(<<1 2
NextFocusUpProperty<<2 E
)<<E F
;<<F G
}<<H I
}== 	
public?? 
INFocusElement?? 
NextFocusDown?? +
{@@ 	
setAA 
{AA 
SetValueAA 
(AA !
NextFocusDownPropertyAA 0
,AA0 1
valueAA2 7
)AA7 8
;AA8 9
}AA: ;
getBB 
{BB 
returnBB 
(BB 
INFocusElementBB (
)BB( )
GetValueBB) 1
(BB1 2!
NextFocusDownPropertyBB2 G
)BBG H
;BBH I
}BBJ K
}CC 	
publicEE 
ICommandEE 
CommandEE 
{FF 	
setGG 
{GG 
SetValueGG 
(GG 
CommandPropertyGG *
,GG* +
valueGG, 1
)GG1 2
;GG2 3
}GG4 5
getHH 
{HH 
returnHH 
(HH 
ICommandHH "
)HH" #
GetValueHH# +
(HH+ ,
CommandPropertyHH, ;
)HH; <
;HH< =
}HH> ?
}II 	
publicKK 
ICommandKK 
LongCommandKK #
{LL 	
setMM 
{MM 
SetValueMM 
(MM 
LongCommandPropertyMM .
,MM. /
valueMM0 5
)MM5 6
;MM6 7
}MM8 9
getNN 
{NN 
returnNN 
(NN 
ICommandNN "
)NN" #
GetValueNN# +
(NN+ ,
LongCommandPropertyNN, ?
)NN? @
;NN@ A
}NNB C
}OO 	
publicQQ 
objectQQ 
CommandParameterQQ &
{RR 	
setSS 
{SS 
SetValueSS 
(SS $
CommandParameterPropertySS 3
,SS3 4
valueSS5 :
)SS: ;
;SS; <
}SS= >
getTT 
{TT 
returnTT 
GetValueTT !
(TT! "$
CommandParameterPropertyTT" :
)TT: ;
;TT; <
}TT= >
}UU 	
publicWW 
objectWW  
LongCommandParameterWW *
{XX 	
setYY 
{YY 
SetValueYY 
(YY (
LongCommandParameterPropertyYY 7
,YY7 8
valueYY9 >
)YY> ?
;YY? @
}YYA B
getZZ 
{ZZ 
returnZZ 
GetValueZZ !
(ZZ! "(
LongCommandParameterPropertyZZ" >
)ZZ> ?
;ZZ? @
}ZZA B
}[[ 	
public^^ 
NPressGestureMask^^  
(^^  !
)^^! "
{__ 	
FocusContext`` 
.`` 
Register`` !
(``! "
this``" &
)``& '
;``' (
thisaa 
.aa 
BackgroundColoraa  
=aa! "
Coloraa# (
.aa( )
Transparentaa) 4
;aa4 5
thisbb 
.bb 
BorderColorbb 
=bb 
Colorbb $
.bb$ %
Transparentbb% 0
;bb0 1
}cc 	
~ee 	
NPressGestureMaskee	 
(ee 
)ee 
{ff 	
FocusContextgg 
.gg 

Unregistergg #
(gg# $
thisgg$ (
)gg( )
;gg) *
}hh 	
privatekk 
statickk 
voidkk 
OnIsNFocusedChangedkk /
(kk/ 0
BindableObjectkk0 >
bindablekk? G
,kkG H
objectkkI O
oldValuekkP X
,kkX Y
objectkkZ `
newValuekka i
)kki j
{ll 	
NPressGestureMaskmm 

focusFramemm (
=mm) *
(mm+ ,
NPressGestureMaskmm, =
)mm= >
bindablemm> F
;mmF G
boolnn 
	isFocusednn 
=nn 
(nn 
boolnn "
)nn" #
newValuenn# +
;nn+ ,

focusFramepp 
.pp 
BackgroundColorpp &
=pp' (
	isFocusedpp) 2
?pp3 4

focusFramepp5 ?
.pp? @
NFocusColorpp@ K
:ppL M
ColorppN S
.ppS T
TransparentppT _
;pp_ `
}qq 	
publictt 
voidtt 
	FocusLefttt 
(tt 
)tt 
{uu 	
FocusContextvv 
.vv 
	FocusLeftvv "
(vv" #
thisvv# '
)vv' (
;vv( )
}ww 	
publicyy 
voidyy 

FocusRightyy 
(yy 
)yy  
{zz 	
FocusContext{{ 
.{{ 

FocusRight{{ #
({{# $
this{{$ (
){{( )
;{{) *
}|| 	
public~~ 
void~~ 
FocusUp~~ 
(~~ 
)~~ 
{ 	
FocusContext
 
.
 
FocusUp
  
(
  !
this
! %
)
% &
;
& '
}
 	
public
 
void
 
	FocusDown
 
(
 
)
 
{
 	
FocusContext
 
.
 
	FocusDown
 "
(
" #
this
# '
)
' (
;
( )
}
 	
public
 
void
 
FocusAction
 
(
  
)
  !
{
 	
if
 
(
 
Command
 
?
 
.
 

CanExecute
 #
(
# $
CommandParameter
$ 4
)
4 5
==
6 8
true
9 =
)
= >
Command
 
.
 
Execute
 
(
  
CommandParameter
  0
)
0 1
;
1 2
}
 	
public
 
void
 

LongAction
 
(
 
)
  
{
 	
if
 
(
 
LongCommand
 
?
 
.
 

CanExecute
 '
(
' ("
LongCommandParameter
( <
)
< =
==
> @
true
A E
)
E F
LongCommand
 
.
 
Execute
 #
(
# $"
LongCommandParameter
$ 8
)
8 9
;
9 :
}
 	
}
 
} î
HD:\Projekty\CS\Newtone\Newtone.Mobile.UI\FocusLibrary\NScreenKeyboard.cs
	namespace 	
Nejman
 
. 
Xamarin 
. 
FocusLibrary %
{ 
public		 

class		 
NScreenKeyboard		  
:		! "
Grid		# '
,		' (
INFocusElement		) 7
{

 
public 
event 
KeyboardClicked $
OnKeyboardClicked% 6
;6 7
public 
delegate 
void 
KeyboardClicked ,
(, -
string- 3
clickedButton4 A
)A B
;B C
public 
const 
string 
EnterButton '
=( )
$str* .
;. /
public 
const 
string 
RemoveButton (
=) *
$str+ /
;/ 0
private 
readonly 
char 
[ 
, 
]  
letters! (
=) *
new+ .
char/ 3
[3 4
$num4 5
,5 6
$num7 8
]8 9
{ 	
{ 
$char 
, 
$char 
, 
$char 
, 
$char 
, 
$char  
,  !
$char! $
,$ %
$char% (
}) *
,* +
{ 
$char 
, 
$char 
, 
$char 
, 
$char 
, 
$char  
,  !
$char! $
,$ %
$char% (
}) *
,* +
{ 
$char 
, 
$char 
, 
$char 
, 
$char 
, 
$char  
,  !
$char! $
,$ %
$char% (
}) *
,* +
{ 
$char 
, 
$char 
, 
$char 
, 
$char 
, 
$char  
,  !
$char! $
,$ %
$char% )
}* +
} 	
;	 

private 
readonly 
char 
[ 
, 
]  
variantLetters! /
=0 1
new2 5
char6 :
[: ;
$num; <
,< =
$num> ?
]? @
{ 	
{ 
$char 
, 
$char 
, 
$char 
, 
$char 
, 
$char  
,  !
$char! $
,$ %
$char% (
}) *
,* +
{ 
$char 
, 
$char 
, 
$char 
, 
$char 
, 
$char  
,  !
$char" %
,% &
$char& )
}* +
,+ ,
{ 
$char 
, 
$char 
, 
$char 
, 
$char 
, 
$char  
,  !
$char" %
,% &
$char& )
}* +
,+ ,
{ 
$char 
, 
$char 
, 
$char 
, 
$char 
, 
$char  
,  !
$char" %
,% &
$char& )
}* +
}   	
;  	 

private"" 
readonly"" 
char"" 
["" 
,"" 
]""  
numbers""! (
="") *
new""+ .
char""/ 3
[""3 4
$num""4 5
,""5 6
$num""7 8
]""8 9
{## 	
{$$ 
$char$$ 
,$$ 
$char$$ 
,$$ 
$char$$ 
,$$ 
$char$$ 
,$$ 
$char$$  
,$$  !
$char$$! $
,$$$ %
$char$$% (
}$$) *
,$$* +
{%% 
$char%% 
,%% 
$char%% 
,%% 
$char%% 
,%% 
$char%% 
,%% 
$char%%  
,%%  !
$char%%! $
,%%$ %
$char%%% (
}%%) *
,%%* +
{&& 
$char&& 
,&& 
$char&& 
,&& 
$char&& 
,&& 
$char&& 
,&& 
$char&&  
,&&  !
$char&&! $
,&&$ %
$char&&% (
}&&) *
,&&* +
{'' 
$char'' 
,'' 
$char'' 
,'' 
$char'' 
,'' 
$char'' 
,'' 
$char'' !
,''! "
$char''" %
,''% &
$char''& )
}''* +
}(( 	
;((	 

private** 
int** 
keyboardPage**  
=**! "
$num**# $
;**$ %
private++ 
readonly++ 

Dictionary++ #
<++# $
int++$ '
,++' (
int++) ,
[++, -
]++- .
>++. /
indexes++0 7
=++8 9
new++: =

Dictionary++> H
<++H I
int++I L
,++L M
int++N Q
[++Q R
]++R S
>++S T
(++T U
)++U V
;++V W
public.. 
static.. 
readonly.. 
BindableProperty.. /
IsNFocusedProperty..0 B
=..C D
BindableProperty// 
.// 
Create// #
(//# $
$str//$ 0
,//0 1
typeof//2 8
(//8 9
bool//9 =
)//= >
,//> ?
typeof//@ F
(//F G
NScreenKeyboard//G V
)//V W
,//W X
false//Y ^
,//^ _
propertyChanged//` o
://o p 
OnIsNFocusedChanged	//q 
)
// 
;
// 
public00 
static00 
readonly00 
BindableProperty00 /
NFocusColorProperty000 C
=00D E
BindableProperty11 
.11 
Create11 #
(11# $
$str11$ 1
,111 2
typeof113 9
(119 :
Color11: ?
)11? @
,11@ A
typeof11B H
(11H I
NScreenKeyboard11I X
)11X Y
,11Y Z
Color11[ `
.11` a
White11a f
,11f g
propertyChanged11h w
:11w x 
OnFocusColorChanged	11y 
)
11 
;
11 
public33 
static33 
readonly33 
BindableProperty33 /!
NextFocusLeftProperty330 E
=33F G
BindableProperty44 
.44 
Create44 #
(44# $
$str44$ 3
,443 4
typeof445 ;
(44; <
INFocusElement44< J
)44J K
,44K L
typeof44M S
(44S T
NScreenKeyboard44T c
)44c d
,44d e
propertyChanged44f u
:44u v
OnElementChanged	44w 
)
44 
;
44 
public55 
static55 
readonly55 
BindableProperty55 /"
NextFocusRightProperty550 F
=55G H
BindableProperty66 
.66 
Create66 #
(66# $
$str66$ 4
,664 5
typeof666 <
(66< =
INFocusElement66= K
)66K L
,66L M
typeof66N T
(66T U
NScreenKeyboard66U d
)66d e
,66e f
propertyChanged66g v
:66v w
OnElementChanged	66x 
)
66 
;
66 
public77 
static77 
readonly77 
BindableProperty77 /
NextFocusUpProperty770 C
=77D E
BindableProperty88 
.88 
Create88 #
(88# $
$str88$ 1
,881 2
typeof883 9
(889 :
INFocusElement88: H
)88H I
,88I J
typeof88K Q
(88Q R
NScreenKeyboard88R a
)88a b
,88b c
propertyChanged88d s
:88s t
OnElementChanged	88u 
)
88 
;
88 
public99 
static99 
readonly99 
BindableProperty99 /!
NextFocusDownProperty990 E
=99F G
BindableProperty:: 
.:: 
Create:: #
(::# $
$str::$ 3
,::3 4
typeof::5 ;
(::; <
INFocusElement::< J
)::J K
,::K L
typeof::M S
(::S T
NScreenKeyboard::T c
)::c d
,::d e
propertyChanged::f u
:::u v
OnElementChanged	::w 
)
:: 
;
:: 
public<< 
static<< 
readonly<< 
BindableProperty<< /
NBackColorProperty<<0 B
=<<C D
BindableProperty== 
.== 
Create== #
(==# $
$str==$ 0
,==0 1
typeof==2 8
(==8 9
Color==9 >
)==> ?
,==? @
typeof==A G
(==G H
NScreenKeyboard==H W
)==W X
,==X Y
Color==Z _
.==_ `
White==` e
,==e f
propertyChanged==g v
:==v w
OnBackColorChanged	==x 
)
== 
;
== 
public>> 
static>> 
readonly>> 
BindableProperty>> /
NFontColorProperty>>0 B
=>>C D
BindableProperty?? 
.?? 
Create?? #
(??# $
$str??$ 0
,??0 1
typeof??2 8
(??8 9
Color??9 >
)??> ?
,??? @
typeof??A G
(??G H
NScreenKeyboard??H W
)??W X
,??X Y
Color??Z _
.??_ `
Black??` e
,??e f
propertyChanged??g v
:??v w
OnFontColorChanged	??x 
)
?? 
;
?? 
publicAA 
boolAA 

IsNFocusedAA 
{BB 	
setCC 
{CC 
SetValueCC 
(CC 
IsNFocusedPropertyCC -
,CC- .
valueCC/ 4
)CC4 5
;CC5 6
}CC7 8
getDD 
{DD 
returnDD 
(DD 
boolDD 
)DD 
GetValueDD '
(DD' (
IsNFocusedPropertyDD( :
)DD: ;
;DD; <
}DD= >
}EE 	
publicGG 
ColorGG 
NFocusColorGG  
{HH 	
setII 
{II 
SetValueII 
(II 
NFocusColorPropertyII .
,II. /
valueII0 5
)II5 6
;II6 7
}II8 9
getJJ 
{JJ 
returnJJ 
(JJ 
ColorJJ 
)JJ  
GetValueJJ  (
(JJ( )
NFocusColorPropertyJJ) <
)JJ< =
;JJ= >
}JJ? @
}KK 	
publicMM 
ColorMM 

NBackColorMM 
{NN 	
setOO 
{OO 
SetValueOO 
(OO 
NBackColorPropertyOO -
,OO- .
valueOO/ 4
)OO4 5
;OO5 6
}OO7 8
getPP 
{PP 
returnPP 
(PP 
ColorPP 
)PP  
GetValuePP  (
(PP( )
NBackColorPropertyPP) ;
)PP; <
;PP< =
}PP> ?
}QQ 	
publicSS 
ColorSS 

NFontColorSS 
{TT 	
setUU 
{UU 
SetValueUU 
(UU 
NFontColorPropertyUU -
,UU- .
valueUU/ 4
)UU4 5
;UU5 6
}UU7 8
getVV 
{VV 
returnVV 
(VV 
ColorVV 
)VV  
GetValueVV  (
(VV( )
NFontColorPropertyVV) ;
)VV; <
;VV< =
}VV> ?
}WW 	
publicYY 
INFocusElementYY 
NextFocusLeftYY +
{ZZ 	
set[[ 
{[[ 
SetValue[[ 
([[ !
NextFocusLeftProperty[[ 0
,[[0 1
value[[2 7
)[[7 8
;[[8 9
}[[: ;
get\\ 
{\\ 
return\\ 
(\\ 
INFocusElement\\ (
)\\( )
GetValue\\) 1
(\\1 2!
NextFocusLeftProperty\\2 G
)\\G H
;\\H I
}\\J K
}]] 	
public__ 
INFocusElement__ 
NextFocusRight__ ,
{`` 	
setaa 
{aa 
SetValueaa 
(aa "
NextFocusRightPropertyaa 1
,aa1 2
valueaa3 8
)aa8 9
;aa9 :
}aa; <
getbb 
{bb 
returnbb 
(bb 
INFocusElementbb (
)bb( )
GetValuebb) 1
(bb1 2"
NextFocusRightPropertybb2 H
)bbH I
;bbI J
}bbK L
}cc 	
publicee 
INFocusElementee 
NextFocusUpee )
{ff 	
setgg 
{gg 
SetValuegg 
(gg 
NextFocusUpPropertygg .
,gg. /
valuegg0 5
)gg5 6
;gg6 7
}gg8 9
gethh 
{hh 
returnhh 
(hh 
INFocusElementhh (
)hh( )
GetValuehh) 1
(hh1 2
NextFocusUpPropertyhh2 E
)hhE F
;hhF G
}hhH I
}ii 	
publickk 
INFocusElementkk 
NextFocusDownkk +
{ll 	
setmm 
{mm 
SetValuemm 
(mm !
NextFocusDownPropertymm 0
,mm0 1
valuemm2 7
)mm7 8
;mm8 9
}mm: ;
getnn 
{nn 
returnnn 
(nn 
INFocusElementnn (
)nn( )
GetValuenn) 1
(nn1 2!
NextFocusDownPropertynn2 G
)nnG H
;nnH I
}nnJ K
}oo 	
privaterr 
ICommandrr 
ButtonCommandrr &
=>rr' )
newrr* -
ActionCommandrr. ;
(rr; <
	parameterrr< E
=>rrF H
{ss 	
stringtt 
clickedtt 
=tt 
	parametertt &
.tt& '
ToStringtt' /
(tt/ 0
)tt0 1
;tt1 2
ifuu 
(uu 
clickeduu 
.uu 
Lengthuu 
<=uu !
$numuu" #
)uu# $
OnKeyboardClickedvv !
?vv! "
.vv" #
Invokevv# )
(vv) *
clickedvv* 1
)vv1 2
;vv2 3
elseww 
{xx 
ifyy 
(yy 
clickedyy 
==yy 
$stryy ,
)yy, -
{zz 
if{{ 
({{ 
keyboardPage{{ $
!={{% '
$num{{( )
){{) *
{|| 
for}} 
(}} 
int}}  
x}}! "
=}}# $
$num}}% &
;}}& '
x}}( )
<}}* +
$num}}, -
;}}- .
x}}/ 0
++}}0 2
)}}2 3
{~~ 
for 
(  !
int! $
y% &
=' (
$num) *
;* +
y, -
<. /
$num0 1
;1 2
y3 4
++4 6
)6 7
{
 
var
  #
kp
$ &
=
' (
indexes
) 0
.
0 1
First
1 6
(
6 7
keypair
7 >
=>
? A
keypair
B I
.
I J
Value
J O
[
O P
$num
P Q
]
Q R
==
S U
x
V W
&&
X Z
keypair
[ b
.
b c
Value
c h
[
h i
$num
i j
]
j k
==
l n
y
o p
)
p q
;
q r
(
  !
Children
! )
[
) *
kp
* ,
.
, -
Key
- 0
]
0 1
as
2 4
NButton
5 <
)
< =
.
= >
Text
> B
=
C D
variantLetters
E S
[
S T
y
T U
,
U V
x
W X
]
X Y
.
Y Z
ToString
Z b
(
b c
)
c d
;
d e
(
  !
Children
! )
[
) *
kp
* ,
.
, -
Key
- 0
]
0 1
as
2 4
NButton
5 <
)
< =
.
= >
CommandParameter
> N
=
O P
variantLetters
Q _
[
_ `
y
` a
,
a b
x
c d
]
d e
.
e f
ToString
f n
(
n o
)
o p
;
p q
}
 
}
 
keyboardPage
 $
=
% &
$num
' (
;
( )
}
 
else
 
{
 
for
 
(
 
int
  
x
! "
=
# $
$num
% &
;
& '
x
( )
<
* +
$num
, -
;
- .
x
/ 0
++
0 2
)
2 3
{
 
for
 
(
  !
int
! $
y
% &
=
' (
$num
) *
;
* +
y
, -
<
. /
$num
0 1
;
1 2
y
3 4
++
4 6
)
6 7
{
 
var
  #
kp
$ &
=
' (
indexes
) 0
.
0 1
First
1 6
(
6 7
keypair
7 >
=>
? A
keypair
B I
.
I J
Value
J O
[
O P
$num
P Q
]
Q R
==
S U
x
V W
&&
X Z
keypair
[ b
.
b c
Value
c h
[
h i
$num
i j
]
j k
==
l n
y
o p
)
p q
;
q r
(
  !
Children
! )
[
) *
kp
* ,
.
, -
Key
- 0
]
0 1
as
2 4
NButton
5 <
)
< =
.
= >
Text
> B
=
C D
letters
E L
[
L M
y
M N
,
N O
x
P Q
]
Q R
.
R S
ToString
S [
(
[ \
)
\ ]
;
] ^
(
  !
Children
! )
[
) *
kp
* ,
.
, -
Key
- 0
]
0 1
as
2 4
NButton
5 <
)
< =
.
= >
CommandParameter
> N
=
O P
letters
Q X
[
X Y
y
Y Z
,
Z [
x
\ ]
]
] ^
.
^ _
ToString
_ g
(
g h
)
h i
;
i j
}
 
}
 
keyboardPage
 $
=
% &
$num
' (
;
( )
}
 
}
 
else
 
if
 
(
 
clicked
  
==
! #
$str
$ /
)
/ 0
{
 
if
 
(
 
keyboardPage
 $
!=
% '
$num
( )
)
) *
{
 
for
 
(
 
int
  
x
! "
=
# $
$num
% &
;
& '
x
( )
<
* +
$num
, -
;
- .
x
/ 0
++
0 2
)
2 3
{
 
for
 
(
  !
int
! $
y
% &
=
' (
$num
) *
;
* +
y
, -
<
. /
$num
0 1
;
1 2
y
3 4
++
4 6
)
6 7
{
 
var
    #
kp
  $ &
=
  ' (
indexes
  ) 0
.
  0 1
First
  1 6
(
  6 7
keypair
  7 >
=>
  ? A
keypair
  B I
.
  I J
Value
  J O
[
  O P
$num
  P Q
]
  Q R
==
  S U
x
  V W
&&
  X Z
keypair
  [ b
.
  b c
Value
  c h
[
  h i
$num
  i j
]
  j k
==
  l n
y
  o p
)
  p q
;
  q r
(
¢¢  !
Children
¢¢! )
[
¢¢) *
kp
¢¢* ,
.
¢¢, -
Key
¢¢- 0
]
¢¢0 1
as
¢¢2 4
NButton
¢¢5 <
)
¢¢< =
.
¢¢= >
Text
¢¢> B
=
¢¢C D
numbers
¢¢E L
[
¢¢L M
y
¢¢M N
,
¢¢N O
x
¢¢P Q
]
¢¢Q R
.
¢¢R S
ToString
¢¢S [
(
¢¢[ \
)
¢¢\ ]
;
¢¢] ^
(
££  !
Children
££! )
[
££) *
kp
££* ,
.
££, -
Key
££- 0
]
££0 1
as
££2 4
NButton
££5 <
)
££< =
.
££= >
CommandParameter
££> N
=
££O P
numbers
££Q X
[
££X Y
y
££Y Z
,
££Z [
x
££\ ]
]
££] ^
.
££^ _
ToString
££_ g
(
££g h
)
££h i
;
££i j
}
¤¤ 
}
¥¥ 
keyboardPage
¦¦ $
=
¦¦% &
$num
¦¦' (
;
¦¦( )
}
§§ 
else
¨¨ 
{
©© 
for
ªª 
(
ªª 
int
ªª  
x
ªª! "
=
ªª# $
$num
ªª% &
;
ªª& '
x
ªª( )
<
ªª* +
$num
ªª, -
;
ªª- .
x
ªª/ 0
++
ªª0 2
)
ªª2 3
{
«« 
for
¬¬ 
(
¬¬  !
int
¬¬! $
y
¬¬% &
=
¬¬' (
$num
¬¬) *
;
¬¬* +
y
¬¬, -
<
¬¬. /
$num
¬¬0 1
;
¬¬1 2
y
¬¬3 4
++
¬¬4 6
)
¬¬6 7
{
­­ 
var
®®  #
kp
®®$ &
=
®®' (
indexes
®®) 0
.
®®0 1
First
®®1 6
(
®®6 7
keypair
®®7 >
=>
®®? A
keypair
®®B I
.
®®I J
Value
®®J O
[
®®O P
$num
®®P Q
]
®®Q R
==
®®S U
x
®®V W
&&
®®X Z
keypair
®®[ b
.
®®b c
Value
®®c h
[
®®h i
$num
®®i j
]
®®j k
==
®®l n
y
®®o p
)
®®p q
;
®®q r
(
°°  !
Children
°°! )
[
°°) *
kp
°°* ,
.
°°, -
Key
°°- 0
]
°°0 1
as
°°2 4
NButton
°°5 <
)
°°< =
.
°°= >
Text
°°> B
=
°°C D
letters
°°E L
[
°°L M
y
°°M N
,
°°N O
x
°°P Q
]
°°Q R
.
°°R S
ToString
°°S [
(
°°[ \
)
°°\ ]
;
°°] ^
(
±±  !
Children
±±! )
[
±±) *
kp
±±* ,
.
±±, -
Key
±±- 0
]
±±0 1
as
±±2 4
NButton
±±5 <
)
±±< =
.
±±= >
CommandParameter
±±> N
=
±±O P
letters
±±Q X
[
±±X Y
y
±±Y Z
,
±±Z [
x
±±\ ]
]
±±] ^
.
±±^ _
ToString
±±_ g
(
±±g h
)
±±h i
;
±±i j
}
²² 
}
³³ 
keyboardPage
´´ $
=
´´% &
$num
´´' (
;
´´( )
}
µµ 
}
¶¶ 
}
·· 
}
¸¸ 	
)
¸¸	 

;
¸¸
 
public
»» 
NScreenKeyboard
»» 
(
»» 
)
»»  
{
¼¼ 	
FocusContext
½½ 
.
½½ 
Register
½½ !
(
½½! "
this
½½" &
)
½½& '
;
½½' (
RowDefinitions
¾¾ 
=
¾¾ 
new
¾¾  %
RowDefinitionCollection
¾¾! 8
(
¾¾8 9
)
¾¾9 :
{
¿¿ 
new
ÀÀ 
RowDefinition
ÀÀ !
(
ÀÀ! "
)
ÀÀ" #
{
ÀÀ$ %
Height
ÀÀ& ,
=
ÀÀ- .

GridLength
ÀÀ/ 9
.
ÀÀ9 :
Star
ÀÀ: >
}
ÀÀ? @
,
ÀÀ@ A
new
ÁÁ 
RowDefinition
ÁÁ !
(
ÁÁ! "
)
ÁÁ" #
{
ÁÁ$ %
Height
ÁÁ& ,
=
ÁÁ- .

GridLength
ÁÁ/ 9
.
ÁÁ9 :
Star
ÁÁ: >
}
ÁÁ? @
,
ÁÁ@ A
new
ÂÂ 
RowDefinition
ÂÂ !
(
ÂÂ! "
)
ÂÂ" #
{
ÂÂ$ %
Height
ÂÂ& ,
=
ÂÂ- .

GridLength
ÂÂ/ 9
.
ÂÂ9 :
Star
ÂÂ: >
}
ÂÂ? @
,
ÂÂ@ A
new
ÃÃ 
RowDefinition
ÃÃ !
(
ÃÃ! "
)
ÃÃ" #
{
ÃÃ$ %
Height
ÃÃ& ,
=
ÃÃ- .

GridLength
ÃÃ/ 9
.
ÃÃ9 :
Star
ÃÃ: >
}
ÃÃ? @
,
ÃÃ@ A
new
ÄÄ 
RowDefinition
ÄÄ !
(
ÄÄ! "
)
ÄÄ" #
{
ÄÄ$ %
Height
ÄÄ& ,
=
ÄÄ- .

GridLength
ÄÄ/ 9
.
ÄÄ9 :
Star
ÄÄ: >
}
ÄÄ? @
}
ÅÅ 
;
ÅÅ 
ColumnDefinitions
ÆÆ 
=
ÆÆ 
new
ÆÆ  #(
ColumnDefinitionCollection
ÆÆ$ >
(
ÆÆ> ?
)
ÆÆ? @
{
ÇÇ 
new
ÈÈ 
ColumnDefinition
ÈÈ $
(
ÈÈ$ %
)
ÈÈ% &
{
ÈÈ& '
Width
ÈÈ' ,
=
ÈÈ- .

GridLength
ÈÈ/ 9
.
ÈÈ9 :
Star
ÈÈ: >
}
ÈÈ> ?
,
ÈÈ? @
new
ÉÉ 
ColumnDefinition
ÉÉ $
(
ÉÉ$ %
)
ÉÉ% &
{
ÉÉ& '
Width
ÉÉ' ,
=
ÉÉ- .

GridLength
ÉÉ/ 9
.
ÉÉ9 :
Star
ÉÉ: >
}
ÉÉ> ?
,
ÉÉ? @
new
ÊÊ 
ColumnDefinition
ÊÊ $
(
ÊÊ$ %
)
ÊÊ% &
{
ÊÊ& '
Width
ÊÊ' ,
=
ÊÊ- .

GridLength
ÊÊ/ 9
.
ÊÊ9 :
Star
ÊÊ: >
}
ÊÊ> ?
,
ÊÊ? @
new
ËË 
ColumnDefinition
ËË $
(
ËË$ %
)
ËË% &
{
ËË& '
Width
ËË' ,
=
ËË- .

GridLength
ËË/ 9
.
ËË9 :
Star
ËË: >
}
ËË> ?
,
ËË? @
new
ÌÌ 
ColumnDefinition
ÌÌ $
(
ÌÌ$ %
)
ÌÌ% &
{
ÌÌ& '
Width
ÌÌ' ,
=
ÌÌ- .

GridLength
ÌÌ/ 9
.
ÌÌ9 :
Star
ÌÌ: >
}
ÌÌ> ?
,
ÌÌ? @
new
ÍÍ 
ColumnDefinition
ÍÍ $
(
ÍÍ$ %
)
ÍÍ% &
{
ÍÍ& '
Width
ÍÍ' ,
=
ÍÍ- .

GridLength
ÍÍ/ 9
.
ÍÍ9 :
Star
ÍÍ: >
}
ÍÍ> ?
,
ÍÍ? @
new
ÎÎ 
ColumnDefinition
ÎÎ $
(
ÎÎ$ %
)
ÎÎ% &
{
ÎÎ& '
Width
ÎÎ' ,
=
ÎÎ- .

GridLength
ÎÎ/ 9
.
ÎÎ9 :
Star
ÎÎ: >
}
ÎÎ> ?
,
ÎÎ? @
new
ÏÏ 
ColumnDefinition
ÏÏ $
(
ÏÏ$ %
)
ÏÏ% &
{
ÏÏ& '
Width
ÏÏ' ,
=
ÏÏ- .
new
ÏÏ/ 2

GridLength
ÏÏ3 =
(
ÏÏ= >
$num
ÏÏ> A
,
ÏÏA B
GridUnitType
ÏÏC O
.
ÏÏO P
Star
ÏÏP T
)
ÏÏT U
}
ÏÏU V
,
ÏÏV W
}
ÐÐ 
;
ÐÐ 
this
ÑÑ 
.
ÑÑ 
ColumnSpacing
ÑÑ 
=
ÑÑ  
$num
ÑÑ! "
;
ÑÑ" #
this
ÒÒ 
.
ÒÒ 

RowSpacing
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ  
BuildKeyboard
ÓÓ 
(
ÓÓ 
)
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
~
ÖÖ 	
NScreenKeyboard
ÖÖ	 
(
ÖÖ 
)
ÖÖ 
{
×× 	
FocusContext
ØØ 
.
ØØ 

Unregister
ØØ #
(
ØØ# $
this
ØØ$ (
)
ØØ( )
;
ØØ) *
}
ÙÙ 	
private
ÜÜ 
void
ÜÜ 
BuildKeyboard
ÜÜ "
(
ÜÜ" #
)
ÜÜ# $
{
ÝÝ 	
this
ÞÞ 
.
ÞÞ 
Children
ÞÞ 
.
ÞÞ 
Clear
ÞÞ 
(
ÞÞ  
)
ÞÞ  !
;
ÞÞ! "
indexes
ßß 
.
ßß 
Clear
ßß 
(
ßß 
)
ßß 
;
ßß 
char
áá 
[
áá 
,
áá 
]
áá 
currentPage
áá 
=
áá  !
null
áá" &
;
áá& '
if
ãã 
(
ãã 
keyboardPage
ãã 
==
ãã 
$num
ãã  !
)
ãã! "
currentPage
ää 
=
ää 
variantLetters
ää ,
;
ää, -
else
åå 
if
åå 
(
åå 
keyboardPage
åå !
==
åå" $
$num
åå% &
)
åå& '
currentPage
ææ 
=
ææ 
numbers
ææ %
;
ææ% &
else
çç 
currentPage
èè 
=
èè 
letters
èè %
;
èè% &
for
êê 
(
êê 
int
êê 
x
êê 
=
êê 
$num
êê 
;
êê 
x
êê 
<
êê 
$num
êê  !
;
êê! "
x
êê# $
++
êê$ &
)
êê& '
{
ëë 
for
ìì 
(
ìì 
int
ìì 
y
ìì 
=
ìì 
$num
ìì 
;
ìì 
y
ìì  !
<
ìì" #
$num
ìì$ %
;
ìì% &
y
ìì' (
++
ìì( *
)
ìì* +
{
íí 
this
îî 
.
îî 
Children
îî !
.
îî! "
Add
îî" %
(
îî% &
new
îî& )
NButton
îî* 1
(
îî1 2
)
îî2 3
{
îî4 5
Text
îî6 :
=
îî; <
currentPage
îî= H
[
îîH I
y
îîI J
,
îîJ K
x
îîL M
]
îîM N
.
îîN O
ToString
îîO W
(
îîW X
)
îîX Y
,
îîY Z
BackgroundColor
îî[ j
=
îîk l

NBackColor
îîm w
,
îîw x
	TextColorîîy 
=îî 

NFontColorîî 
,îî 
NFocusColorîî 
=îî 
NFocusColorîî ª
,îîª «
NCommandîî¬ ´
=îîµ ¶
ButtonCommandîî· Ä
,îîÄ Å 
CommandParameterîîÆ Ö
=îî× Ø
currentPageîîÙ ä
[îîä å
yîîå æ
,îîæ ç
xîîè é
]îîé ê
.îîê ë
ToStringîîë ó
(îîó ô
)îîô õ
,îîõ ö
Marginîî÷ ý
=îîþ ÿ
$numîî 
,îî 
Paddingîî 
=îî 
$numîî 
}îî 
,îî 
xîî 
,îî 
yîî 
)îî 
;îî 
indexes
ïï 
.
ïï 
Add
ïï 
(
ïï  
this
ïï  $
.
ïï$ %
Children
ïï% -
.
ïï- .
Count
ïï. 3
-
ïï4 5
$num
ïï6 7
,
ïï7 8
new
ïï9 <
int
ïï= @
[
ïï@ A
]
ïïA B
{
ïïC D
x
ïïE F
,
ïïF G
y
ïïH I
}
ïïJ K
)
ïïK L
;
ïïL M
}
ðð 
}
ññ 
this
óó 
.
óó 
Children
óó 
.
óó 
Add
óó 
(
óó 
new
óó !
NButton
óó" )
(
óó) *
)
óó* +
{
óó, -
Text
óó. 2
=
óó3 4
$str
óó5 <
,
óó< =
BackgroundColor
óó> M
=
óóN O

NBackColor
óóP Z
,
óóZ [
	TextColor
óó\ e
=
óóf g

NFontColor
óóh r
,
óór s
NFocusColor
óót 
=óó 
NFocusColoróó 
,óó 
NCommandóó 
=óó 
ButtonCommandóó §
,óó§ ¨ 
CommandParameteróó© ¹
=óóº »
RemoveButtonóó¼ È
}óóÉ Ê
,óóÊ Ë
$numóóÌ Í
,óóÍ Î
$numóóÏ Ð
,óóÐ Ñ
$numóóÒ Ó
,óóÓ Ô
$numóóÕ Ö
)óóÖ ×
;óó× Ø
indexes
ôô 
.
ôô 
Add
ôô 
(
ôô 
this
ôô 
.
ôô 
Children
ôô %
.
ôô% &
Count
ôô& +
-
ôô, -
$num
ôô. /
,
ôô/ 0
new
ôô1 4
int
ôô5 8
[
ôô8 9
]
ôô9 :
{
ôô; <
$num
ôô= >
,
ôô> ?
$num
ôô@ A
}
ôôB C
)
ôôC D
;
ôôD E
this
õõ 
.
õõ 
Children
õõ 
.
õõ 
Add
õõ 
(
õõ 
new
õõ !
NButton
õõ" )
(
õõ) *
)
õõ* +
{
õõ, -
Text
õõ. 2
=
õõ3 4
$str
õõ5 :
,
õõ: ;
BackgroundColor
õõ< K
=
õõL M

NBackColor
õõN X
,
õõX Y
	TextColor
õõZ c
=
õõd e

NFontColor
õõf p
,
õõp q
NFocusColor
õõr }
=
õõ~ 
NFocusColorõõ 
,õõ 
NCommandõõ 
=õõ 
ButtonCommandõõ ¥
,õõ¥ ¦ 
CommandParameterõõ§ ·
=õõ¸ ¹
$strõõº Ç
}õõÈ É
,õõÉ Ê
$numõõË Ì
,õõÌ Í
$numõõÎ Ï
,õõÏ Ð
$numõõÑ Ò
,õõÒ Ó
$numõõÔ Õ
)õõÕ Ö
;õõÖ ×
indexes
öö 
.
öö 
Add
öö 
(
öö 
this
öö 
.
öö 
Children
öö %
.
öö% &
Count
öö& +
-
öö, -
$num
öö. /
,
öö/ 0
new
öö1 4
int
öö5 8
[
öö8 9
]
öö9 :
{
öö; <
$num
öö= >
,
öö> ?
$num
öö@ A
}
ööB C
)
ööC D
;
ööD E
this
÷÷ 
.
÷÷ 
Children
÷÷ 
.
÷÷ 
Add
÷÷ 
(
÷÷ 
new
÷÷ !
NButton
÷÷" )
(
÷÷) *
)
÷÷* +
{
÷÷, -
Text
÷÷. 2
=
÷÷3 4
$str
÷÷5 :
,
÷÷: ;
BackgroundColor
÷÷< K
=
÷÷L M

NBackColor
÷÷N X
,
÷÷X Y
	TextColor
÷÷Z c
=
÷÷d e

NFontColor
÷÷f p
,
÷÷p q
NFocusColor
÷÷r }
=
÷÷~ 
NFocusColor÷÷ 
,÷÷ 
NCommand÷÷ 
=÷÷ 
ButtonCommand÷÷ ¥
,÷÷¥ ¦ 
CommandParameter÷÷§ ·
=÷÷¸ ¹
$str÷÷º Å
}÷÷Æ Ç
,÷÷Ç È
$num÷÷É Ê
,÷÷Ê Ë
$num÷÷Ì Í
,÷÷Í Î
$num÷÷Ï Ð
,÷÷Ð Ñ
$num÷÷Ò Ó
)÷÷Ó Ô
;÷÷Ô Õ
indexes
øø 
.
øø 
Add
øø 
(
øø 
this
øø 
.
øø 
Children
øø %
.
øø% &
Count
øø& +
-
øø, -
$num
øø. /
,
øø/ 0
new
øø1 4
int
øø5 8
[
øø8 9
]
øø9 :
{
øø; <
$num
øø= >
,
øø> ?
$num
øø@ A
}
øøB C
)
øøC D
;
øøD E
this
ùù 
.
ùù 
Children
ùù 
.
ùù 
Add
ùù 
(
ùù 
new
ùù !
NButton
ùù" )
(
ùù) *
)
ùù* +
{
ùù, -
Text
ùù. 2
=
ùù3 4
$str
ùù5 <
,
ùù< =
BackgroundColor
ùù> M
=
ùùN O

NBackColor
ùùP Z
,
ùùZ [
	TextColor
ùù\ e
=
ùùf g

NFontColor
ùùh r
,
ùùr s
NFocusColor
ùùt 
=ùù 
NFocusColorùù 
,ùù 
NCommandùù 
=ùù 
ButtonCommandùù §
,ùù§ ¨ 
CommandParameterùù© ¹
=ùùº »
EnterButtonùù¼ Ç
}ùùÈ É
,ùùÉ Ê
$numùùË Ì
,ùùÌ Í
$numùùÎ Ï
,ùùÏ Ð
$numùùÑ Ò
,ùùÒ Ó
$numùùÔ Õ
)ùùÕ Ö
;ùùÖ ×
indexes
úú 
.
úú 
Add
úú 
(
úú 
this
úú 
.
úú 
Children
úú %
.
úú% &
Count
úú& +
-
úú, -
$num
úú. /
,
úú/ 0
new
úú1 4
int
úú5 8
[
úú8 9
]
úú9 :
{
úú; <
$num
úú= >
,
úú> ?
$num
úú@ A
}
úúB C
)
úúC D
;
úúD E
this
ûû 
.
ûû 
Children
ûû 
.
ûû 
Add
ûû 
(
ûû 
new
ûû !
NButton
ûû" )
(
ûû) *
)
ûû* +
{
ûû, -
Text
ûû. 2
=
ûû3 4
$str
ûû5 <
,
ûû< =
BackgroundColor
ûû> M
=
ûûN O

NBackColor
ûûP Z
,
ûûZ [
	TextColor
ûû\ e
=
ûûf g

NFontColor
ûûh r
,
ûûr s
NFocusColor
ûût 
=ûû 
NFocusColorûû 
,ûû 
NCommandûû 
=ûû 
ButtonCommandûû §
,ûû§ ¨ 
CommandParameterûû© ¹
=ûûº »
$strûû¼ ¿
}ûûÀ Á
,ûûÁ Â
$numûûÃ Ä
,ûûÄ Å
$numûûÆ Ç
,ûûÇ È
$numûûÉ Ê
,ûûÊ Ë
$numûûÌ Í
)ûûÍ Î
;ûûÎ Ï
indexes
üü 
.
üü 
Add
üü 
(
üü 
this
üü 
.
üü 
Children
üü %
.
üü% &
Count
üü& +
-
üü, -
$num
üü. /
,
üü/ 0
new
üü1 4
int
üü5 8
[
üü8 9
]
üü9 :
{
üü; <
$num
üü= >
,
üü> ?
$num
üü@ A
}
üüB C
)
üüC D
;
üüD E
(
ýý 
this
ýý 
.
ýý 
Children
ýý 
[
ýý 
this
ýý 
.
ýý  
Children
ýý  (
.
ýý( )
Count
ýý) .
-
ýý/ 0
$num
ýý1 2
]
ýý2 3
as
ýý4 6
INFocusElement
ýý7 E
)
ýýE F
.
ýýF G
NextFocusDown
ýýG T
=
ýýU V
NextFocusDown
ýýW d
;
ýýd e
for
ÿÿ 
(
ÿÿ 
int
ÿÿ 
x
ÿÿ 
=
ÿÿ 
$num
ÿÿ 
;
ÿÿ 
x
ÿÿ 
<
ÿÿ 
$num
ÿÿ  !
;
ÿÿ! "
x
ÿÿ# $
++
ÿÿ$ &
)
ÿÿ& '
{
 
for
 
(
 
int
 
y
 
=
 
$num
 
;
 
y
  !
<
" #
$num
$ %
;
% &
y
' (
++
( *
)
* +
{
 
bool
 
left
 
=
 
x
  !
>
" #
$num
$ %
;
% &
bool
 
up
 
=
 
y
 
>
  !
$num
" #
;
# $
bool
 
down
 
=
 
y
  !
<
" #
$num
$ %
;
% &
bool
 
right
 
=
  
x
! "
<
# $
$num
% &
;
& '
var
 
kp
 
=
 
indexes
 $
.
$ %
First
% *
(
* +
keypair
+ 2
=>
3 5
keypair
6 =
.
= >
Value
> C
[
C D
$num
D E
]
E F
==
G I
x
J K
&&
L N
keypair
O V
.
V W
Value
W \
[
\ ]
$num
] ^
]
^ _
==
` b
y
c d
)
d e
;
e f
if
 
(
 
left
 
)
 
{
 
var
 
kpl
 
=
  !
indexes
" )
.
) *
First
* /
(
/ 0
keypair
0 7
=>
8 :
keypair
; B
.
B C
Value
C H
[
H I
$num
I J
]
J K
==
L N
x
O P
-
Q R
$num
S T
&&
U W
keypair
X _
.
_ `
Value
` e
[
e f
$num
f g
]
g h
==
i k
y
l m
)
m n
;
n o
(
 
Children
 !
[
! "
kpl
" %
.
% &
Key
& )
]
) *
as
+ -
INFocusElement
. <
)
< =
.
= >
NextFocusRight
> L
=
M N
(
O P
Children
P X
[
X Y
kp
Y [
.
[ \
Key
\ _
]
_ `
as
a c
INFocusElement
d r
)
r s
;
s t
(
 
Children
 !
[
! "
kp
" $
.
$ %
Key
% (
]
( )
as
* ,
INFocusElement
- ;
)
; <
.
< =
NextFocusLeft
= J
=
K L
(
M N
Children
N V
[
V W
kpl
W Z
.
Z [
Key
[ ^
]
^ _
as
` b
INFocusElement
c q
)
q r
;
r s
}
 
else
 
{
 
(
 
Children
 !
[
! "
kp
" $
.
$ %
Key
% (
]
( )
as
* ,
INFocusElement
- ;
)
; <
.
< =
NextFocusLeft
= J
=
K L
NextFocusLeft
M Z
;
Z [
}
 
if
 
(
 
right
 
)
 
{
 
var
 
kpr
 
=
  !
indexes
" )
.
) *
First
* /
(
/ 0
keypair
0 7
=>
8 :
keypair
; B
.
B C
Value
C H
[
H I
$num
I J
]
J K
==
L N
x
O P
+
Q R
$num
S T
&&
U W
keypair
X _
.
_ `
Value
` e
[
e f
$num
f g
]
g h
==
i k
y
l m
)
m n
;
n o
(
 
Children
 !
[
! "
kpr
" %
.
% &
Key
& )
]
) *
as
+ -
INFocusElement
. <
)
< =
.
= >
NextFocusLeft
> K
=
L M
(
N O
Children
O W
[
W X
kp
X Z
.
Z [
Key
[ ^
]
^ _
as
` b
INFocusElement
c q
)
q r
;
r s
(
 
Children
 !
[
! "
kp
" $
.
$ %
Key
% (
]
( )
as
* ,
INFocusElement
- ;
)
; <
.
< =
NextFocusRight
= K
=
L M
(
N O
Children
O W
[
W X
kpr
X [
.
[ \
Key
\ _
]
_ `
as
a c
INFocusElement
d r
)
r s
;
s t
}
 
else
 
{
 
(
 
Children
 !
[
! "
kp
" $
.
$ %
Key
% (
]
( )
as
* ,
INFocusElement
- ;
)
; <
.
< =
NextFocusRight
= K
=
L M
NextFocusRight
N \
;
\ ]
}
 
if
   
(
   
up
   
)
   
{
¡¡ 
var
¢¢ 
kpu
¢¢ 
=
¢¢  !
indexes
¢¢" )
.
¢¢) *
First
¢¢* /
(
¢¢/ 0
keypair
¢¢0 7
=>
¢¢8 :
keypair
¢¢; B
.
¢¢B C
Value
¢¢C H
[
¢¢H I
$num
¢¢I J
]
¢¢J K
==
¢¢L N
x
¢¢O P
&&
¢¢Q S
keypair
¢¢T [
.
¢¢[ \
Value
¢¢\ a
[
¢¢a b
$num
¢¢b c
]
¢¢c d
==
¢¢e g
y
¢¢h i
-
¢¢i j
$num
¢¢j k
)
¢¢k l
;
¢¢l m
(
££ 
Children
££ !
[
££! "
kpu
££" %
.
££% &
Key
££& )
]
££) *
as
££+ -
INFocusElement
££. <
)
££< =
.
££= >
NextFocusDown
££> K
=
££L M
(
££N O
Children
££O W
[
££W X
kp
££X Z
.
££Z [
Key
££[ ^
]
££^ _
as
££` b
INFocusElement
££c q
)
££q r
;
££r s
(
¤¤ 
Children
¤¤ !
[
¤¤! "
kp
¤¤" $
.
¤¤$ %
Key
¤¤% (
]
¤¤( )
as
¤¤* ,
INFocusElement
¤¤- ;
)
¤¤; <
.
¤¤< =
NextFocusUp
¤¤= H
=
¤¤I J
(
¤¤K L
Children
¤¤L T
[
¤¤T U
kpu
¤¤U X
.
¤¤X Y
Key
¤¤Y \
]
¤¤\ ]
as
¤¤^ `
INFocusElement
¤¤a o
)
¤¤o p
;
¤¤p q
}
¥¥ 
else
¦¦ 
{
§§ 
(
¨¨ 
Children
¨¨ !
[
¨¨! "
kp
¨¨" $
.
¨¨$ %
Key
¨¨% (
]
¨¨( )
as
¨¨* ,
INFocusElement
¨¨- ;
)
¨¨; <
.
¨¨< =
NextFocusUp
¨¨= H
=
¨¨I J
NextFocusUp
¨¨K V
;
¨¨V W
}
©© 
if
«« 
(
«« 
down
«« 
)
«« 
{
¬¬ 
var
­­ 
kpd
­­ 
=
­­  !
indexes
­­" )
.
­­) *
First
­­* /
(
­­/ 0
keypair
­­0 7
=>
­­8 :
keypair
­­; B
.
­­B C
Value
­­C H
[
­­H I
$num
­­I J
]
­­J K
==
­­L N
x
­­O P
&&
­­Q S
keypair
­­T [
.
­­[ \
Value
­­\ a
[
­­a b
$num
­­b c
]
­­c d
==
­­e g
y
­­h i
+
­­j k
$num
­­l m
)
­­m n
;
­­n o
(
®® 
Children
®® !
[
®®! "
kpd
®®" %
.
®®% &
Key
®®& )
]
®®) *
as
®®+ -
INFocusElement
®®. <
)
®®< =
.
®®= >
NextFocusUp
®®> I
=
®®J K
(
®®L M
Children
®®M U
[
®®U V
kp
®®V X
.
®®X Y
Key
®®Y \
]
®®\ ]
as
®®^ `
INFocusElement
®®a o
)
®®o p
;
®®p q
(
¯¯ 
Children
¯¯ !
[
¯¯! "
kp
¯¯" $
.
¯¯$ %
Key
¯¯% (
]
¯¯( )
as
¯¯* ,
INFocusElement
¯¯- ;
)
¯¯; <
.
¯¯< =
NextFocusDown
¯¯= J
=
¯¯K L
(
¯¯M N
Children
¯¯N V
[
¯¯V W
kpd
¯¯W Z
.
¯¯Z [
Key
¯¯[ ^
]
¯¯^ _
as
¯¯` b
INFocusElement
¯¯c q
)
¯¯q r
;
¯¯r s
}
°° 
else
±± 
{
²² 
var
³³ 
kpd
³³ 
=
³³  !
indexes
³³" )
.
³³) *
First
³³* /
(
³³/ 0
keypair
³³0 7
=>
³³8 :
keypair
³³; B
.
³³B C
Value
³³C H
[
³³H I
$num
³³I J
]
³³J K
==
³³L N
x
³³O P
&&
³³Q S
keypair
³³T [
.
³³[ \
Value
³³\ a
[
³³a b
$num
³³b c
]
³³c d
==
³³e g
$num
³³h i
)
³³i j
;
³³j k
(
´´ 
Children
´´ !
[
´´! "
Children
´´" *
.
´´* +
Count
´´+ 0
-
´´1 2
$num
´´3 4
]
´´4 5
as
´´6 8
INFocusElement
´´9 G
)
´´G H
.
´´H I
NextFocusUp
´´I T
=
´´U V
(
´´W X
Children
´´X `
[
´´` a
Children
´´a i
.
´´i j
Count
´´j o
-
´´p q
$num
´´r s
]
´´s t
as
´´u w
INFocusElement´´x 
)´´ 
;´´ 
(
µµ 
Children
µµ !
[
µµ! "
kpd
µµ" %
.
µµ% &
Key
µµ& )
]
µµ) *
as
µµ+ -
INFocusElement
µµ. <
)
µµ< =
.
µµ= >
NextFocusDown
µµ> K
=
µµL M
(
µµN O
Children
µµO W
[
µµW X
Children
µµX `
.
µµ` a
Count
µµa f
-
µµg h
$num
µµi j
]
µµj k
as
µµl n
INFocusElement
µµo }
)
µµ} ~
;
µµ~ 
}
¶¶ 
}
·· 
}
¸¸ 
(
ºº 
Children
ºº 
[
ºº 
$num
ºº 
]
ºº 
as
ºº 
INFocusElement
ºº *
)
ºº* +
.
ºº+ ,

IsNFocused
ºº, 6
=
ºº7 8
true
ºº9 =
;
ºº= >
}
»» 	
private
¼¼ 
static
¼¼ 
void
¼¼ !
OnIsNFocusedChanged
¼¼ /
(
¼¼/ 0
BindableObject
¼¼0 >
bindable
¼¼? G
,
¼¼G H
object
¼¼I O
oldValue
¼¼P X
,
¼¼X Y
object
¼¼Z `
newValue
¼¼a i
)
¼¼i j
{
½½ 	
NScreenKeyboard
¾¾ 
focusButton
¾¾ '
=
¾¾( )
(
¾¾* +
NScreenKeyboard
¾¾+ :
)
¾¾: ;
bindable
¾¾; C
;
¾¾C D
bool
¿¿ 
	isFocused
¿¿ 
=
¿¿ 
(
¿¿ 
bool
¿¿ "
)
¿¿" #
newValue
¿¿# +
;
¿¿+ ,
if
ÁÁ 
(
ÁÁ 
	isFocused
ÁÁ 
)
ÁÁ 
focusButton
ÂÂ 
.
ÂÂ 

FocusFirst
ÂÂ &
(
ÂÂ& '
)
ÂÂ' (
;
ÂÂ( )
}
ÃÃ 	
private
ÅÅ 
static
ÅÅ 
void
ÅÅ 
OnElementChanged
ÅÅ ,
(
ÅÅ, -
BindableObject
ÅÅ- ;
bindable
ÅÅ< D
,
ÅÅD E
object
ÅÅF L
oldValue
ÅÅM U
,
ÅÅU V
object
ÅÅW ]
newValue
ÅÅ^ f
)
ÅÅf g
{
ÆÆ 	
NScreenKeyboard
ÇÇ 
focusButton
ÇÇ '
=
ÇÇ( )
(
ÇÇ* +
NScreenKeyboard
ÇÇ+ :
)
ÇÇ: ;
bindable
ÇÇ; C
;
ÇÇC D
for
ÉÉ 
(
ÉÉ 
int
ÉÉ 
x
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
x
ÉÉ 
<
ÉÉ 
$num
ÉÉ  !
;
ÉÉ! "
x
ÉÉ# $
++
ÉÉ$ &
)
ÉÉ& '
{
ÊÊ 
for
ËË 
(
ËË 
int
ËË 
y
ËË 
=
ËË 
$num
ËË 
;
ËË 
y
ËË  !
<
ËË" #
$num
ËË$ %
;
ËË% &
y
ËË' (
++
ËË( *
)
ËË* +
{
ÌÌ 
bool
ÍÍ 
left
ÍÍ 
=
ÍÍ 
x
ÍÍ  !
>
ÍÍ" #
$num
ÍÍ$ %
;
ÍÍ% &
bool
ÎÎ 
up
ÎÎ 
=
ÎÎ 
y
ÎÎ 
>
ÎÎ  !
$num
ÎÎ" #
;
ÎÎ# $
bool
ÏÏ 
down
ÏÏ 
=
ÏÏ 
y
ÏÏ  !
<
ÏÏ" #
$num
ÏÏ$ %
;
ÏÏ% &
bool
ÐÐ 
right
ÐÐ 
=
ÐÐ  
x
ÐÐ! "
<
ÐÐ# $
$num
ÐÐ% &
;
ÐÐ& '
var
ÒÒ 
kp
ÒÒ 
=
ÒÒ 
focusButton
ÒÒ (
.
ÒÒ( )
indexes
ÒÒ) 0
.
ÒÒ0 1
First
ÒÒ1 6
(
ÒÒ6 7
keypair
ÒÒ7 >
=>
ÒÒ? A
keypair
ÒÒB I
.
ÒÒI J
Value
ÒÒJ O
[
ÒÒO P
$num
ÒÒP Q
]
ÒÒQ R
==
ÒÒS U
x
ÒÒV W
&&
ÒÒX Z
keypair
ÒÒ[ b
.
ÒÒb c
Value
ÒÒc h
[
ÒÒh i
$num
ÒÒi j
]
ÒÒj k
==
ÒÒl n
y
ÒÒo p
)
ÒÒp q
;
ÒÒq r
if
ÔÔ 
(
ÔÔ 
left
ÔÔ 
)
ÔÔ 
{
ÕÕ 
var
ÖÖ 
kpl
ÖÖ 
=
ÖÖ  !
focusButton
ÖÖ" -
.
ÖÖ- .
indexes
ÖÖ. 5
.
ÖÖ5 6
First
ÖÖ6 ;
(
ÖÖ; <
keypair
ÖÖ< C
=>
ÖÖD F
keypair
ÖÖG N
.
ÖÖN O
Value
ÖÖO T
[
ÖÖT U
$num
ÖÖU V
]
ÖÖV W
==
ÖÖX Z
x
ÖÖ[ \
-
ÖÖ] ^
$num
ÖÖ_ `
&&
ÖÖa c
keypair
ÖÖd k
.
ÖÖk l
Value
ÖÖl q
[
ÖÖq r
$num
ÖÖr s
]
ÖÖs t
==
ÖÖu w
y
ÖÖx y
)
ÖÖy z
;
ÖÖz {
(
×× 
focusButton
×× $
.
××$ %
Children
××% -
[
××- .
kpl
××. 1
.
××1 2
Key
××2 5
]
××5 6
as
××7 9
INFocusElement
××: H
)
××H I
.
××I J
NextFocusRight
××J X
=
××Y Z
(
××[ \
focusButton
××\ g
.
××g h
Children
××h p
[
××p q
kp
××q s
.
××s t
Key
××t w
]
××w x
as
××y {
INFocusElement××| 
)×× 
;×× 
(
ØØ 
focusButton
ØØ $
.
ØØ$ %
Children
ØØ% -
[
ØØ- .
kp
ØØ. 0
.
ØØ0 1
Key
ØØ1 4
]
ØØ4 5
as
ØØ6 8
INFocusElement
ØØ9 G
)
ØØG H
.
ØØH I
NextFocusLeft
ØØI V
=
ØØW X
(
ØØY Z
focusButton
ØØZ e
.
ØØe f
Children
ØØf n
[
ØØn o
kpl
ØØo r
.
ØØr s
Key
ØØs v
]
ØØv w
as
ØØx z
INFocusElementØØ{ 
)ØØ 
;ØØ 
}
ÙÙ 
else
ÚÚ 
{
ÛÛ 
(
ÜÜ 
focusButton
ÜÜ $
.
ÜÜ$ %
Children
ÜÜ% -
[
ÜÜ- .
kp
ÜÜ. 0
.
ÜÜ0 1
Key
ÜÜ1 4
]
ÜÜ4 5
as
ÜÜ6 8
INFocusElement
ÜÜ9 G
)
ÜÜG H
.
ÜÜH I
NextFocusLeft
ÜÜI V
=
ÜÜW X
focusButton
ÜÜY d
.
ÜÜd e
NextFocusLeft
ÜÜe r
;
ÜÜr s
}
ÝÝ 
if
ßß 
(
ßß 
right
ßß 
)
ßß 
{
àà 
var
áá 
kpr
áá 
=
áá  !
focusButton
áá" -
.
áá- .
indexes
áá. 5
.
áá5 6
First
áá6 ;
(
áá; <
keypair
áá< C
=>
ááD F
keypair
ááG N
.
ááN O
Value
ááO T
[
ááT U
$num
ááU V
]
ááV W
==
ááX Z
x
áá[ \
+
áá] ^
$num
áá_ `
&&
ááa c
keypair
áád k
.
áák l
Value
áál q
[
ááq r
$num
áár s
]
áás t
==
ááu w
y
ááx y
)
ááy z
;
ááz {
(
ââ 
focusButton
ââ $
.
ââ$ %
Children
ââ% -
[
ââ- .
kpr
ââ. 1
.
ââ1 2
Key
ââ2 5
]
ââ5 6
as
ââ7 9
INFocusElement
ââ: H
)
ââH I
.
ââI J
NextFocusLeft
ââJ W
=
ââX Y
(
ââZ [
focusButton
ââ[ f
.
ââf g
Children
ââg o
[
ââo p
kp
ââp r
.
ââr s
Key
ââs v
]
ââv w
as
ââx z
INFocusElementââ{ 
)ââ 
;ââ 
(
ãã 
focusButton
ãã $
.
ãã$ %
Children
ãã% -
[
ãã- .
kp
ãã. 0
.
ãã0 1
Key
ãã1 4
]
ãã4 5
as
ãã6 8
INFocusElement
ãã9 G
)
ããG H
.
ããH I
NextFocusRight
ããI W
=
ããX Y
(
ããZ [
focusButton
ãã[ f
.
ããf g
Children
ããg o
[
ãão p
kpr
ããp s
.
ããs t
Key
ããt w
]
ããw x
as
ããy {
INFocusElementãã| 
)ãã 
;ãã 
}
ää 
else
åå 
{
ææ 
(
çç 
focusButton
çç $
.
çç$ %
Children
çç% -
[
çç- .
kp
çç. 0
.
çç0 1
Key
çç1 4
]
çç4 5
as
çç6 8
INFocusElement
çç9 G
)
ççG H
.
ççH I
NextFocusRight
ççI W
=
ççX Y
focusButton
ççZ e
.
ççe f
NextFocusRight
ççf t
;
ççt u
}
èè 
if
êê 
(
êê 
up
êê 
)
êê 
{
ëë 
var
ìì 
kpu
ìì 
=
ìì  !
focusButton
ìì" -
.
ìì- .
indexes
ìì. 5
.
ìì5 6
First
ìì6 ;
(
ìì; <
keypair
ìì< C
=>
ììD F
keypair
ììG N
.
ììN O
Value
ììO T
[
ììT U
$num
ììU V
]
ììV W
==
ììX Z
x
ìì[ \
&&
ìì] _
keypair
ìì` g
.
ììg h
Value
ììh m
[
ììm n
$num
ììn o
]
ììo p
==
ììq s
y
ììt u
-
ììv w
$num
ììx y
)
ììy z
;
ììz {
(
íí 
focusButton
íí $
.
íí$ %
Children
íí% -
[
íí- .
kpu
íí. 1
.
íí1 2
Key
íí2 5
]
íí5 6
as
íí7 9
INFocusElement
íí: H
)
ííH I
.
ííI J
NextFocusDown
ííJ W
=
ííX Y
(
ííZ [
focusButton
íí[ f
.
ííf g
Children
ííg o
[
íío p
kp
ííp r
.
íír s
Key
íís v
]
íív w
as
ííx z
INFocusElementíí{ 
)íí 
;íí 
(
îî 
focusButton
îî $
.
îî$ %
Children
îî% -
[
îî- .
kp
îî. 0
.
îî0 1
Key
îî1 4
]
îî4 5
as
îî6 8
INFocusElement
îî9 G
)
îîG H
.
îîH I
NextFocusUp
îîI T
=
îîU V
(
îîW X
focusButton
îîX c
.
îîc d
Children
îîd l
[
îîl m
kpu
îîm p
.
îîp q
Key
îîq t
]
îît u
as
îîv x
INFocusElementîîy 
)îî 
;îî 
}
ïï 
else
ðð 
{
ññ 
(
òò 
focusButton
òò $
.
òò$ %
Children
òò% -
[
òò- .
kp
òò. 0
.
òò0 1
Key
òò1 4
]
òò4 5
as
òò6 8
INFocusElement
òò9 G
)
òòG H
.
òòH I
NextFocusUp
òòI T
=
òòU V
focusButton
òòW b
.
òòb c
NextFocusUp
òòc n
;
òòn o
}
óó 
if
õõ 
(
õõ 
down
õõ 
)
õõ 
{
öö 
var
÷÷ 
kpd
÷÷ 
=
÷÷  !
focusButton
÷÷" -
.
÷÷- .
indexes
÷÷. 5
.
÷÷5 6
First
÷÷6 ;
(
÷÷; <
keypair
÷÷< C
=>
÷÷D F
keypair
÷÷G N
.
÷÷N O
Value
÷÷O T
[
÷÷T U
$num
÷÷U V
]
÷÷V W
==
÷÷X Z
x
÷÷[ \
&&
÷÷] _
keypair
÷÷` g
.
÷÷g h
Value
÷÷h m
[
÷÷m n
$num
÷÷n o
]
÷÷o p
==
÷÷q s
y
÷÷t u
+
÷÷v w
$num
÷÷x y
)
÷÷y z
;
÷÷z {
(
øø 
focusButton
øø $
.
øø$ %
Children
øø% -
[
øø- .
kpd
øø. 1
.
øø1 2
Key
øø2 5
]
øø5 6
as
øø7 9
INFocusElement
øø: H
)
øøH I
.
øøI J
NextFocusUp
øøJ U
=
øøV W
(
øøX Y
focusButton
øøY d
.
øød e
Children
øøe m
[
øøm n
kp
øøn p
.
øøp q
Key
øøq t
]
øøt u
as
øøv x
INFocusElementøøy 
)øø 
;øø 
(
ùù 
focusButton
ùù $
.
ùù$ %
Children
ùù% -
[
ùù- .
kp
ùù. 0
.
ùù0 1
Key
ùù1 4
]
ùù4 5
as
ùù6 8
INFocusElement
ùù9 G
)
ùùG H
.
ùùH I
NextFocusDown
ùùI V
=
ùùW X
(
ùùY Z
focusButton
ùùZ e
.
ùùe f
Children
ùùf n
[
ùùn o
kpd
ùùo r
.
ùùr s
Key
ùùs v
]
ùùv w
as
ùùx z
INFocusElementùù{ 
)ùù 
;ùù 
}
úú 
else
ûû 
{
üü 
var
ýý 
kpd
ýý 
=
ýý  !
focusButton
ýý" -
.
ýý- .
indexes
ýý. 5
.
ýý5 6
First
ýý6 ;
(
ýý; <
keypair
ýý< C
=>
ýýD F
keypair
ýýG N
.
ýýN O
Value
ýýO T
[
ýýT U
$num
ýýU V
]
ýýV W
==
ýýX Z
x
ýý[ \
&&
ýý] _
keypair
ýý` g
.
ýýg h
Value
ýýh m
[
ýým n
$num
ýýn o
]
ýýo p
==
ýýq s
$num
ýýt u
)
ýýu v
;
ýýv w
(
þþ 
focusButton
þþ $
.
þþ$ %
Children
þþ% -
[
þþ- .
focusButton
þþ. 9
.
þþ9 :
Children
þþ: B
.
þþB C
Count
þþC H
-
þþI J
$num
þþK L
]
þþL M
as
þþN P
INFocusElement
þþQ _
)
þþ_ `
.
þþ` a
NextFocusUp
þþa l
=
þþm n
(
þþo p
focusButton
þþp {
.
þþ{ |
Childrenþþ| 
[þþ 
focusButtonþþ 
.þþ 
Childrenþþ 
.þþ 
Countþþ 
-þþ  ¡
$numþþ¢ £
]þþ£ ¤
asþþ¥ §
INFocusElementþþ¨ ¶
)þþ¶ ·
;þþ· ¸
(
ÿÿ 
focusButton
ÿÿ $
.
ÿÿ$ %
Children
ÿÿ% -
[
ÿÿ- .
kpd
ÿÿ. 1
.
ÿÿ1 2
Key
ÿÿ2 5
]
ÿÿ5 6
as
ÿÿ7 9
INFocusElement
ÿÿ: H
)
ÿÿH I
.
ÿÿI J
NextFocusDown
ÿÿJ W
=
ÿÿX Y
(
ÿÿZ [
focusButton
ÿÿ[ f
.
ÿÿf g
Children
ÿÿg o
[
ÿÿo p
focusButton
ÿÿp {
.
ÿÿ{ |
Childrenÿÿ| 
.ÿÿ 
Countÿÿ 
-ÿÿ 
$numÿÿ 
]ÿÿ 
asÿÿ 
INFocusElementÿÿ ¡
)ÿÿ¡ ¢
;ÿÿ¢ £
}
 
}
 
}
 
}
 	
private
 
static
 
void
  
OnBackColorChanged
 .
(
. /
BindableObject
/ =
bindable
> F
,
F G
object
H N
oldValue
O W
,
W X
object
Y _
newValue
` h
)
h i
{
 	
NScreenKeyboard
 
focusButton
 '
=
( )
(
* +
NScreenKeyboard
+ :
)
: ;
bindable
; C
;
C D
Color
 
newColor
 
=
 
(
 
Color
 #
)
# $
newValue
$ ,
;
, -
foreach
 
(
 
var
 
element
 
in
  "
focusButton
# .
.
. /
Children
/ 7
)
7 8
{
 
(
 
element
 
as
 
NButton
 #
)
# $
.
$ %
BackgroundColor
% 4
=
5 6
newColor
7 ?
;
? @
}
 
}
 	
private
 
static
 
void
 !
OnFocusColorChanged
 /
(
/ 0
BindableObject
0 >
bindable
? G
,
G H
object
I O
oldValue
P X
,
X Y
object
Z `
newValue
a i
)
i j
{
 	
NScreenKeyboard
 
focusButton
 '
=
( )
(
* +
NScreenKeyboard
+ :
)
: ;
bindable
; C
;
C D
Color
 
newColor
 
=
 
(
 
Color
 #
)
# $
newValue
$ ,
;
, -
foreach
 
(
 
var
 
element
  
in
! #
focusButton
$ /
.
/ 0
Children
0 8
)
8 9
{
 
(
 
element
 
as
 
NButton
 #
)
# $
.
$ %
NFocusColor
% 0
=
1 2
newColor
3 ;
;
; <
}
 
}
 	
private
 
static
 
void
  
OnFontColorChanged
 .
(
. /
BindableObject
/ =
bindable
> F
,
F G
object
H N
oldValue
O W
,
W X
object
Y _
newValue
` h
)
h i
{
 	
NScreenKeyboard
 
focusButton
 '
=
( )
(
* +
NScreenKeyboard
+ :
)
: ;
bindable
; C
;
C D
Color
 
newColor
 
=
 
(
 
Color
 #
)
# $
newValue
$ ,
;
, -
foreach
   
(
   
var
   
element
    
in
  ! #
focusButton
  $ /
.
  / 0
Children
  0 8
)
  8 9
{
¡¡ 
(
¢¢ 
element
¢¢ 
as
¢¢ 
NButton
¢¢ #
)
¢¢# $
.
¢¢$ %
	TextColor
¢¢% .
=
¢¢/ 0
newColor
¢¢1 9
;
¢¢9 :
}
££ 
}
¤¤ 	
private
¦¦ 
void
¦¦ 

FocusFirst
¦¦ 
(
¦¦  
)
¦¦  !
{
§§ 	
(
¨¨ 
Children
¨¨ 
[
¨¨ 
$num
¨¨ 
]
¨¨ 
as
¨¨ 
INFocusElement
¨¨ *
)
¨¨* +
.
¨¨+ ,

IsNFocused
¨¨, 6
=
¨¨7 8
true
¨¨9 =
;
¨¨= >
}
©© 	
public
¬¬ 
void
¬¬ 
	FocusLeft
¬¬ 
(
¬¬ 
)
¬¬ 
{
­­ 	
FocusContext
®® 
.
®® 
	FocusLeft
®® "
(
®®" #
this
®®# '
)
®®' (
;
®®( )
}
¯¯ 	
public
±± 
void
±± 

FocusRight
±± 
(
±± 
)
±±  
{
²² 	
FocusContext
³³ 
.
³³ 

FocusRight
³³ #
(
³³# $
this
³³$ (
)
³³( )
;
³³) *
}
´´ 	
public
¶¶ 
void
¶¶ 
FocusUp
¶¶ 
(
¶¶ 
)
¶¶ 
{
·· 	
FocusContext
¸¸ 
.
¸¸ 
FocusUp
¸¸  
(
¸¸  !
this
¸¸! %
)
¸¸% &
;
¸¸& '
}
¹¹ 	
public
»» 
void
»» 
	FocusDown
»» 
(
»» 
)
»» 
{
¼¼ 	
FocusContext
½½ 
.
½½ 
	FocusDown
½½ "
(
½½" #
this
½½# '
)
½½' (
;
½½( )
}
¾¾ 	
public
ÀÀ 
void
ÀÀ 
FocusAction
ÀÀ 
(
ÀÀ  
)
ÀÀ  !
{
ÁÁ 	
}
ÃÃ 	
}
ÅÅ 
}ÆÆ æ&
FD:\Projekty\CS\Newtone\Newtone.Mobile.UI\FocusLibrary\NToggleButton.cs
	namespace 	
Nejman
 
. 
Xamarin 
. 
FocusLibrary %
{ 
public 

class 
NToggleButton 
:  
NImageButton! -
,- .
INFocusElement/ =
{ 
public

 
event

 
EventHandler

 !
<

! "
ToggledEventArgs

" 2
>

2 3
Toggled

4 ;
;

; <
public 
static 
readonly 
BindableProperty /
IsToggledProperty0 A
=B C
BindableProperty 
. 
Create #
(# $
$str$ /
,/ 0
typeof1 7
(7 8
bool8 <
)< =
,= >
typeof? E
(E F
NToggleButtonF S
)S T
,T U
falseV [
,[ \
propertyChanged$ 3
:3 4
OnIsToggledChanged5 G
)G H
;H I
public 
bool 
	IsToggled 
{ 	
set 
{ 
SetValue 
( 
IsToggledProperty ,
,, -
value. 3
)3 4
;4 5
}6 7
get 
{ 
return 
( 
bool 
) 
GetValue '
(' (
IsToggledProperty( 9
)9 :
;: ;
}< =
} 	
public 
static 
readonly 
BindableProperty /
TagProperty0 ;
=< =
BindableProperty 
. 
Create #
(# $
$str$ )
,) *
typeof+ 1
(1 2
string2 8
)8 9
,9 :
typeof; A
(A B
NToggleButtonB O
)O P
,P Q
defaultR Y
(Y Z
stringZ `
)` a
)a b
;b c
public 
string 
Tag 
{ 	
set 
{ 
SetValue 
( 
TagProperty &
,& '
value( -
)- .
;. /
}0 1
get 
{ 
return 
( 
string  
)  !
GetValue! )
() *
TagProperty* 5
)5 6
;6 7
}8 9
} 	
public!! 
NToggleButton!! 
(!! 
)!! 
{"" 	
FocusContext## 
.## 
Register## !
(##! "
this##" &
)##& '
;##' (
this$$ 
.$$ 
BorderWidth$$ 
=$$ 
$num$$  
;$$  !
}%% 	
~'' 	
NToggleButton''	 
('' 
)'' 
{(( 	
FocusContext)) 
.)) 

Unregister)) #
())# $
this))$ (
)))( )
;))) *
}** 	
private-- 
static-- 
void-- 
OnIsToggledChanged-- .
(--. /
BindableObject--/ =
bindable--> F
,--F G
object--H N
oldValue--O W
,--W X
object--Y _
newValue--` h
)--h i
{.. 	
NToggleButton// 
toggleButton// &
=//' (
(//) *
NToggleButton//* 7
)//7 8
bindable//8 @
;//@ A
bool00 
	isToggled00 
=00 
(00 
bool00 "
)00" #
newValue00# +
;00+ ,
toggleButton33 
.33 
Toggled33  
?33  !
.33! "
Invoke33" (
(33( )
toggleButton33) 5
,335 6
new337 :
ToggledEventArgs33; K
(33K L
	isToggled33L U
)33U V
)33V W
;33W X
Debug44 
.44 
	WriteLine44 
(44 
$str44 /
+440 1
	isToggled442 ;
)44; <
;44< =
VisualStateManager66 
.66 
	GoToState66 (
(66( )
toggleButton66) 5
,665 6
	isToggled667 @
?66A B
$str66C N
:66O P
$str66Q Y
)66Y Z
;66Z [
}77 	
public:: 
new:: 
void:: 
FocusAction:: #
(::# $
)::$ %
{;; 	
base<< 
.<< 
FocusAction<< 
(<< 
)<< 
;<< 
VisualStateManager== 
.== 
	GoToState== (
(==( )
this==) -
,==- .
	IsToggled==/ 8
?==9 :
$str==; F
:==G H
$str==I Q
)==Q R
;==R S
}>> 	
}@@ 
}AA ¬
KD:\Projekty\CS\Newtone\Newtone.Mobile.UI\FocusLibrary\NUntouchedListView.cs
	namespace 	
Nejman
 
. 
Xamarin 
. 
FocusLibrary %
{ 
public		 

class		 
NUntouchedListView		 #
:		$ %

ScrollView		& 0
,		0 1
INFocusElement		2 @
{

 
	protected 
StackLayout 
	container '
;' (
private 
bool 
active 
= 
false #
;# $
public 
static 
readonly 
BindableProperty /
IsNFocusedProperty0 B
=C D
BindableProperty 
. 
Create #
(# $
$str$ 0
,0 1
typeof2 8
(8 9
bool9 =
)= >
,> ?
typeof@ F
(F G
NUntouchedListViewG Y
)Y Z
,Z [
false\ a
,a b
propertyChangedc r
:r s 
OnIsNFocusedChanged	t 
)
 
;
 
public 
static 
readonly 
BindableProperty /
NFocusColorProperty0 C
=D E
BindableProperty 
. 
Create #
(# $
$str$ 1
,1 2
typeof3 9
(9 :
Color: ?
)? @
,@ A
typeofB H
(H I
NUntouchedListViewI [
)[ \
,\ ]
Color^ c
.c d
Whited i
)i j
;j k
public 
static 
readonly 
BindableProperty /!
NextFocusLeftProperty0 E
=F G
BindableProperty 
. 
Create #
(# $
$str$ 3
,3 4
typeof5 ;
(; <
INFocusElement< J
)J K
,K L
typeofM S
(S T
NUntouchedListViewT f
)f g
)g h
;h i
public 
static 
readonly 
BindableProperty /"
NextFocusRightProperty0 F
=G H
BindableProperty 
. 
Create #
(# $
$str$ 4
,4 5
typeof6 <
(< =
INFocusElement= K
)K L
,L M
typeofN T
(T U
NUntouchedListViewU g
)g h
)h i
;i j
public 
static 
readonly 
BindableProperty /
NextFocusUpProperty0 C
=D E
BindableProperty 
. 
Create #
(# $
$str$ 1
,1 2
typeof3 9
(9 :
INFocusElement: H
)H I
,I J
typeofK Q
(Q R
NUntouchedListViewR d
)d e
)e f
;f g
public 
static 
readonly 
BindableProperty /!
NextFocusDownProperty0 E
=F G
BindableProperty 
. 
Create #
(# $
$str$ 3
,3 4
typeof5 ;
(; <
INFocusElement< J
)J K
,K L
typeofM S
(S T
NUntouchedListViewT f
)f g
)g h
;h i
public 
static 
readonly 
BindableProperty / 
NOrientationProperty0 D
=E F
BindableProperty 
. 
Create #
(# $
$str$ 2
,2 3
typeof4 :
(: ;
ScrollOrientation; L
)L M
,M N
typeofO U
(U V
NUntouchedListViewV h
)h i
,i j
propertyChangedk z
:z {
OrientationChanged	| 
)
 
;
 
public!! 
static!! 
readonly!! 
BindableProperty!! /
NItemSourceProperty!!0 C
=!!D E
BindableProperty"" 
."" 
Create"" #
(""# $
$str""$ 1
,""1 2
typeof""3 9
(""9 : 
ObservableCollection"": N
<""N O
NListViewItem""O \
>""\ ]
)""] ^
,""^ _
typeof""` f
(""f g
NUntouchedListView""g y
)""y z
,""z {
propertyChanged	""| 
:
"" 
ItemSourceChanged
"" 
)
"" 
;
""  
public$$ 
static$$ 
readonly$$ 
BindableProperty$$ /!
NItemTemplateProperty$$0 E
=$$F G
BindableProperty%% 
.%% 
Create%% #
(%%# $
$str%%$ 3
,%%3 4
typeof%%5 ;
(%%; <
Func%%< @
<%%@ A
NListViewItem%%A N
,%%N O
View%%P T
>%%T U
)%%U V
,%%V W
typeof%%X ^
(%%^ _
NUntouchedListView%%_ q
)%%q r
)%%r s
;%%s t
public'' 
static'' 
readonly'' 
BindableProperty'' /!
NFocusedIndexProperty''0 E
=''F G
BindableProperty(( 
.(( 
Create(( #
(((# $
$str(($ 3
,((3 4
typeof((5 ;
(((; <
int((< ?
)((? @
,((@ A
typeof((B H
(((H I
NUntouchedListView((I [
)(([ \
,((\ ]
-((^ _
$num((_ `
,((` a
BindingMode)) 
.)) 
TwoWay)) "
,))" #
propertyChanged))$ 3
:))3 4
null))5 9
)))9 :
;)): ;
public++ 
static++ 
readonly++ 
BindableProperty++ /
NItemWidthProperty++0 B
=++C D
BindableProperty,, 
.,, 
Create,, #
(,,# $
$str,,$ 0
,,,0 1
typeof,,2 8
(,,8 9
int,,9 <
),,< =
,,,= >
typeof,,? E
(,,E F
NUntouchedListView,,F X
),,X Y
,,,Y Z
-,,[ \
$num,,\ ]
),,] ^
;,,^ _
public-- 
static-- 
readonly-- 
BindableProperty-- /
NItemHeightProperty--0 C
=--D E
BindableProperty.. 
... 
Create.. #
(..# $
$str..$ 1
,..1 2
typeof..3 9
(..9 :
int..: =
)..= >
,..> ?
typeof..@ F
(..F G
NUntouchedListView..G Y
)..Y Z
,..Z [
-..\ ]
$num..] ^
)..^ _
;.._ `
public00 
static00 
readonly00 
BindableProperty00 /!
NItemSelectedProperty000 E
=00F G
BindableProperty11 
.11 
Create11 #
(11# $
$str11$ 3
,113 4
typeof115 ;
(11; <
ICommand11< D
)11D E
,11E F
typeof11G M
(11M N
NUntouchedListView11N `
)11` a
)11a b
;11b c
public33 
static33 
readonly33 
BindableProperty33 /"
NItemAppearingProperty330 F
=33G H
BindableProperty44 
.44 
Create44 #
(44# $
$str44$ 4
,444 5
typeof446 <
(44< =
ICommand44= E
)44E F
,44F G
typeof44H N
(44N O
NUntouchedListView44O a
)44a b
)44b c
;44c d
public66 
bool66 

IsNFocused66 
{77 	
set88 
{88 
SetValue88 
(88 
IsNFocusedProperty88 -
,88- .
value88/ 4
)884 5
;885 6
}887 8
get99 
{99 
return99 
(99 
bool99 
)99 
GetValue99 '
(99' (
IsNFocusedProperty99( :
)99: ;
;99; <
}99= >
}:: 	
public<< 
Color<< 
NFocusColor<<  
{== 	
set>> 
{>> 
SetValue>> 
(>> 
NFocusColorProperty>> .
,>>. /
value>>0 5
)>>5 6
;>>6 7
}>>8 9
get?? 
{?? 
return?? 
(?? 
Color?? 
)??  
GetValue??  (
(??( )
NFocusColorProperty??) <
)??< =
;??= >
}??? @
}@@ 	
publicBB 
INFocusElementBB 
NextFocusLeftBB +
{CC 	
setDD 
{DD 
SetValueDD 
(DD !
NextFocusLeftPropertyDD 0
,DD0 1
valueDD2 7
)DD7 8
;DD8 9
}DD: ;
getEE 
{EE 
returnEE 
(EE 
INFocusElementEE (
)EE( )
GetValueEE) 1
(EE1 2!
NextFocusLeftPropertyEE2 G
)EEG H
;EEH I
}EEJ K
}FF 	
publicHH 
INFocusElementHH 
NextFocusRightHH ,
{II 	
setJJ 
{JJ 
SetValueJJ 
(JJ "
NextFocusRightPropertyJJ 1
,JJ1 2
valueJJ3 8
)JJ8 9
;JJ9 :
}JJ; <
getKK 
{KK 
returnKK 
(KK 
INFocusElementKK (
)KK( )
GetValueKK) 1
(KK1 2"
NextFocusRightPropertyKK2 H
)KKH I
;KKI J
}KKK L
}LL 	
publicNN 
INFocusElementNN 
NextFocusUpNN )
{OO 	
setPP 
{PP 
SetValuePP 
(PP 
NextFocusUpPropertyPP .
,PP. /
valuePP0 5
)PP5 6
;PP6 7
}PP8 9
getQQ 
{QQ 
returnQQ 
(QQ 
INFocusElementQQ (
)QQ( )
GetValueQQ) 1
(QQ1 2
NextFocusUpPropertyQQ2 E
)QQE F
;QQF G
}QQH I
}RR 	
publicTT 
INFocusElementTT 
NextFocusDownTT +
{UU 	
setVV 
{VV 
SetValueVV 
(VV !
NextFocusDownPropertyVV 0
,VV0 1
valueVV2 7
)VV7 8
;VV8 9
}VV: ;
getWW 
{WW 
returnWW 
(WW 
INFocusElementWW (
)WW( )
GetValueWW) 1
(WW1 2!
NextFocusDownPropertyWW2 G
)WWG H
;WWH I
}WWJ K
}XX 	
publicZZ 
FuncZZ 
<ZZ 
NListViewItemZZ !
,ZZ! "
ViewZZ# '
>ZZ' (
NItemTemplateZZ) 6
{[[ 	
set\\ 
{\\ 
SetValue\\ 
(\\ !
NItemTemplateProperty\\ 0
,\\0 1
value\\2 7
)\\7 8
;\\8 9
}\\: ;
get]] 
{]] 
return]] 
(]] 
Func]] 
<]] 
NListViewItem]] ,
,]], -
View]]. 2
>]]2 3
)]]3 4
GetValue]]4 <
(]]< =!
NItemTemplateProperty]]= R
)]]R S
;]]S T
}]]U V
}^^ 	
public`` 
ScrollOrientation``  
NOrientation``! -
{aa 	
setbb 
{bb 
SetValuebb 
(bb  
NOrientationPropertybb /
,bb/ 0
valuebb1 6
)bb6 7
;bb7 8
}bb9 :
getcc 
{cc 
returncc 
(cc 
ScrollOrientationcc +
)cc+ ,
GetValuecc, 4
(cc4 5 
NOrientationPropertycc5 I
)ccI J
;ccJ K
}ccL M
}dd 	
publicff  
ObservableCollectionff #
<ff# $
NListViewItemff$ 1
>ff1 2
NItemSourceff3 >
{gg 	
sethh 
{hh 
SetValuehh 
(hh 
NItemSourcePropertyhh .
,hh. /
valuehh0 5
)hh5 6
;hh6 7
}hh8 9
getii 
{ii 
returnii 
(ii  
ObservableCollectionii .
<ii. /
NListViewItemii/ <
>ii< =
)ii= >
GetValueii> F
(iiF G
NItemSourcePropertyiiG Z
)iiZ [
;ii[ \
}ii] ^
}jj 	
publicll 
intll 
NFocusedIndexll  
{mm 	
setnn 
{oo 
intpp 
oldpp 
=pp 
NFocusedIndexpp '
;pp' (
SetValueqq 
(qq !
NFocusedIndexPropertyqq .
,qq. /
valueqq0 5
)qq5 6
;qq6 7
FocusSpecifiedrr 
(rr 
oldrr "
,rr" #
valuerr$ )
)rr) *
;rr* +
NItemSelectedss 
?ss 
.ss 
Executess &
(ss& '
valuess' ,
)ss, -
;ss- .
iftt 
(tt 
	containertt 
.tt 
Childrentt %
.tt% &
Counttt& +
>tt, -
valuett. 3
)tt3 4
{uu 
thisvv 
.vv 
ScrollToAsyncvv &
(vv& '
	containervv' 0
.vv0 1
Childrenvv1 9
[vv9 :
valuevv: ?
]vv? @
,vv@ A
ScrollToPositionvvB R
.vvR S
MakeVisiblevvS ^
,vv^ _
falsevv` e
)vve f
;vvf g
}ww 
}yy 
getzz 
{zz 
returnzz 
(zz 
intzz 
)zz 
GetValuezz &
(zz& '!
NFocusedIndexPropertyzz' <
)zz< =
;zz= >
}zz? @
}{{ 	
public}} 
int}} 

NItemWidth}} 
{~~ 	
set 
{ 
SetValue 
( 
NItemWidthProperty -
,- .
value/ 4
)4 5
;5 6
}7 8
get
 
{
 
return
 
(
 
int
 
)
 
GetValue
 &
(
& ' 
NItemWidthProperty
' 9
)
9 :
;
: ;
}
< =
}
 	
public
 
int
 
NItemHeight
 
{
 	
set
 
{
 
SetValue
 
(
 !
NItemHeightProperty
 .
,
. /
value
0 5
)
5 6
;
6 7
}
8 9
get
 
{
 
return
 
(
 
int
 
)
 
GetValue
 &
(
& '!
NItemHeightProperty
' :
)
: ;
;
; <
}
= >
}
 	
public
 
ICommand
 
NItemSelected
 %
{
 	
set
 
{
 
SetValue
 
(
 #
NItemSelectedProperty
 0
,
0 1
value
2 7
)
7 8
;
8 9
}
: ;
get
 
{
 
return
 
(
 
ICommand
 "
)
" #
GetValue
# +
(
+ ,#
NItemSelectedProperty
, A
)
A B
;
B C
}
D E
}
 	
public
 
ICommand
 
NItemAppearing
 &
{
 	
set
 
{
 
SetValue
 
(
 $
NItemAppearingProperty
 1
,
1 2
value
3 8
)
8 9
;
9 :
}
; <
get
 
{
 
return
 
(
 
ICommand
 "
)
" #
GetValue
# +
(
+ ,$
NItemAppearingProperty
, B
)
B C
;
C D
}
E F
}
 	
public
  
NUntouchedListView
 !
(
! "
)
" #
{
 	
FocusContext
 
.
 
Register
 !
(
! "
this
" &
)
& '
;
' (
	container
 
=
 
new
 
StackLayout
 '
{
 
Spacing
 
=
 
$num
 
}
 
;
 
Content
 
=
 
	container
 
;
  
this
 
.
 
	IsEnabled
 
=
 
false
 "
;
" #
}
   	
~
¢¢ 	 
NUntouchedListView
¢¢	 
(
¢¢ 
)
¢¢ 
{
££ 	
FocusContext
¤¤ 
.
¤¤ 

Unregister
¤¤ #
(
¤¤# $
this
¤¤$ (
)
¤¤( )
;
¤¤) *
}
¥¥ 	
private
¨¨ 
static
¨¨ 
void
¨¨ !
OnIsNFocusedChanged
¨¨ /
(
¨¨/ 0
BindableObject
¨¨0 >
bindable
¨¨? G
,
¨¨G H
object
¨¨I O
oldValue
¨¨P X
,
¨¨X Y
object
¨¨Z `
newValue
¨¨a i
)
¨¨i j
{
©© 	 
NUntouchedListView
ªª 
focusButton
ªª *
=
ªª+ ,
(
ªª- . 
NUntouchedListView
ªª. @
)
ªª@ A
bindable
ªªA I
;
ªªI J
bool
«« 
	isFocused
«« 
=
«« 
(
«« 
bool
«« "
)
««" #
newValue
««# +
;
««+ ,
if
­­ 
(
­­ 
	isFocused
­­ 
)
­­ 
{
®® 
focusButton
¯¯ 
.
¯¯ 
active
¯¯ "
=
¯¯# $
true
¯¯% )
;
¯¯) *
}
°° 
if
²² 
(
²² 
	isFocused
²² 
&&
²² 
focusButton
²² '
.
²²' (
NItemSource
²²( 3
.
²²3 4
Count
²²4 9
>
²²: ;
$num
²²< =
&&
²²> @
focusButton
²²A L
.
²²L M
NFocusedIndex
²²M Z
==
²²[ ]
-
²²^ _
$num
²²_ `
)
²²` a
{
³³ 
focusButton
´´ 
.
´´ 
NFocusedIndex
´´ )
=
´´* +
$num
´´, -
;
´´- .
focusButton
µµ 
.
µµ 
NItemSource
µµ '
[
µµ' (
$num
µµ( )
]
µµ) *
.
µµ* +

IsNFocused
µµ+ 5
=
µµ6 7
true
µµ8 <
;
µµ< =
(
¶¶ 
focusButton
¶¶ 
.
¶¶ 
	container
¶¶ &
.
¶¶& '
Children
¶¶' /
[
¶¶/ 0
$num
¶¶0 1
]
¶¶1 2
as
¶¶3 5
Frame
¶¶6 ;
)
¶¶; <
.
¶¶< =
BorderColor
¶¶= H
=
¶¶I J
focusButton
¶¶K V
.
¶¶V W
NFocusColor
¶¶W b
;
¶¶b c
}
·· 
if
¹¹ 
(
¹¹ 
	isFocused
¹¹ 
&&
¹¹ 
focusButton
¹¹ '
.
¹¹' (
NFocusedIndex
¹¹( 5
>=
¹¹6 8
$num
¹¹9 :
)
¹¹: ;
{
ºº 
focusButton
»» 
.
»» 
NItemSource
»» '
[
»»' (
focusButton
»»( 3
.
»»3 4
NFocusedIndex
»»4 A
]
»»A B
.
»»B C

IsNFocused
»»C M
=
»»N O
true
»»P T
;
»»T U
(
¼¼ 
focusButton
¼¼ 
.
¼¼ 
	container
¼¼ &
.
¼¼& '
Children
¼¼' /
[
¼¼/ 0
focusButton
¼¼0 ;
.
¼¼; <
NFocusedIndex
¼¼< I
]
¼¼I J
as
¼¼K M
Frame
¼¼N S
)
¼¼S T
.
¼¼T U
BorderColor
¼¼U `
=
¼¼a b
focusButton
¼¼c n
.
¼¼n o
NFocusColor
¼¼o z
;
¼¼z {
}
½½ 
}
¾¾ 	
private
ÀÀ 
static
ÀÀ 
void
ÀÀ  
OrientationChanged
ÀÀ .
(
ÀÀ. /
BindableObject
ÀÀ/ =
bindable
ÀÀ> F
,
ÀÀF G
object
ÀÀH N
oldValue
ÀÀO W
,
ÀÀW X
object
ÀÀY _
newValue
ÀÀ` h
)
ÀÀh i
{
ÁÁ 	
ScrollOrientation
ÂÂ 
orientation
ÂÂ )
=
ÂÂ* +
(
ÂÂ, -
ScrollOrientation
ÂÂ- >
)
ÂÂ> ?
newValue
ÂÂ? G
;
ÂÂG H 
NUntouchedListView
ÄÄ 
listView
ÄÄ '
=
ÄÄ( )
bindable
ÄÄ* 2
as
ÄÄ3 5 
NUntouchedListView
ÄÄ6 H
;
ÄÄH I
listView
ÅÅ 
.
ÅÅ 
Orientation
ÅÅ  
=
ÅÅ! "
orientation
ÅÅ# .
;
ÅÅ. /
listView
ÆÆ 
.
ÆÆ 
	container
ÆÆ 
.
ÆÆ 
Orientation
ÆÆ *
=
ÆÆ+ ,
orientation
ÆÆ- 8
==
ÆÆ9 ;
ScrollOrientation
ÆÆ< M
.
ÆÆM N

Horizontal
ÆÆN X
?
ÆÆY Z
StackOrientation
ÆÆ[ k
.
ÆÆk l

Horizontal
ÆÆl v
:
ÆÆw x
StackOrientationÆÆy 
.ÆÆ 
VerticalÆÆ 
;ÆÆ 
}
ÇÇ 	
private
ÉÉ 
static
ÉÉ 
void
ÉÉ 
ItemSourceChanged
ÉÉ -
(
ÉÉ- .
BindableObject
ÉÉ. <
bindable
ÉÉ= E
,
ÉÉE F
object
ÉÉG M
oldValue
ÉÉN V
,
ÉÉV W
object
ÉÉX ^
newValue
ÉÉ_ g
)
ÉÉg h
{
ÊÊ 	 
NUntouchedListView
ËË 
listView
ËË '
=
ËË( )
bindable
ËË* 2
as
ËË3 5 
NUntouchedListView
ËË6 H
;
ËËH I
Device
ÌÌ 
.
ÌÌ %
BeginInvokeOnMainThread
ÌÌ *
(
ÌÌ* +
listView
ÌÌ+ 3
.
ÌÌ3 4
Rerender
ÌÌ4 <
)
ÌÌ< =
;
ÌÌ= >
if
ÎÎ 
(
ÎÎ 
oldValue
ÎÎ 
is
ÎÎ "
ObservableCollection
ÎÎ 0
<
ÎÎ0 1
NListViewItem
ÎÎ1 >
>
ÎÎ> ?
oldList
ÎÎ@ G
)
ÎÎG H
{
ÏÏ 
oldList
ÐÐ 
.
ÐÐ 
CollectionChanged
ÐÐ )
-=
ÐÐ* ,
listView
ÐÐ- 5
.
ÐÐ5 6+
NItemSource_CollectionChanged
ÐÐ6 S
;
ÐÐS T
}
ÑÑ 
if
ÓÓ 
(
ÓÓ 
newValue
ÓÓ 
is
ÓÓ "
ObservableCollection
ÓÓ 0
<
ÓÓ0 1
NListViewItem
ÓÓ1 >
>
ÓÓ> ?
newList
ÓÓ@ G
)
ÓÓG H
{
ÔÔ 
listView
ÕÕ 
.
ÕÕ 
NItemSource
ÕÕ $
.
ÕÕ$ %
CollectionChanged
ÕÕ% 6
+=
ÕÕ7 9
listView
ÕÕ: B
.
ÕÕB C+
NItemSource_CollectionChanged
ÕÕC `
;
ÕÕ` a
}
ÖÖ 
}
×× 	
	protected
ÙÙ 
void
ÙÙ +
NItemSource_CollectionChanged
ÙÙ 4
(
ÙÙ4 5
object
ÙÙ5 ;
sender
ÙÙ< B
,
ÙÙB C.
 NotifyCollectionChangedEventArgs
ÙÙD d
e
ÙÙe f
)
ÙÙf g
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ 
e
ÛÛ 
.
ÛÛ 
Action
ÛÛ 
==
ÛÛ +
NotifyCollectionChangedAction
ÛÛ 8
.
ÛÛ8 9
Add
ÛÛ9 <
)
ÛÛ< =
{
ÜÜ 
	container
ÝÝ 
.
ÝÝ 
Children
ÝÝ "
.
ÝÝ" #
Insert
ÝÝ# )
(
ÝÝ) *
e
ÝÝ* +
.
ÝÝ+ ,
NewStartingIndex
ÝÝ, <
,
ÝÝ< =

CreateItem
ÝÝ> H
(
ÝÝH I
(
ÝÝI J
NListViewItem
ÝÝJ W
)
ÝÝW X
e
ÝÝX Y
.
ÝÝY Z
NewItems
ÝÝZ b
[
ÝÝb c
$num
ÝÝc d
]
ÝÝd e
)
ÝÝe f
)
ÝÝf g
;
ÝÝg h
NItemSource
ÞÞ 
[
ÞÞ 
e
ÞÞ 
.
ÞÞ 
NewStartingIndex
ÞÞ .
]
ÞÞ. /
.
ÞÞ/ 0
NFocusColor
ÞÞ0 ;
=
ÞÞ< =
NFocusColor
ÞÞ> I
;
ÞÞI J
NItemSource
ßß 
[
ßß 
e
ßß 
.
ßß 
NewStartingIndex
ßß .
]
ßß. /
.
ßß/ 0
ParentListView
ßß0 >
=
ßß? @
this
ßßA E
;
ßßE F
NItemSource
àà 
[
àà 
e
àà 
.
àà 
NewStartingIndex
àà .
]
àà. /
.
àà/ 0
SetFrame
àà0 8
(
àà8 9
	container
àà9 B
.
ààB C
Children
ààC K
[
ààK L
e
ààL M
.
ààM N
NewStartingIndex
ààN ^
]
àà^ _
as
àà` b
Frame
ààc h
)
ààh i
;
àài j
if
ââ 
(
ââ 
e
ââ 
.
ââ 
NewStartingIndex
ââ %
==
ââ& (
$num
ââ) *
&&
ââ+ -

IsNFocused
ââ. 8
)
ââ8 9
{
ãã 
NItemSource
ää 
[
ää  
$num
ää  !
]
ää! "
.
ää" #

IsNFocused
ää# -
=
ää. /
true
ää0 4
;
ää4 5
}
åå 
bool
çç 
prev
çç 
=
çç 
e
çç 
.
çç 
NewStartingIndex
çç .
>
çç/ 0
$num
çç1 2
;
çç2 3
bool
èè 
next
èè 
=
èè 
e
èè 
.
èè 
NewStartingIndex
èè .
<
èè/ 0
NItemSource
èè1 <
.
èè< =
Count
èè= B
-
èèC D
$num
èèE F
;
èèF G
if
êê 
(
êê 
NOrientation
êê  
==
êê! #
ScrollOrientation
êê$ 5
.
êê5 6

Horizontal
êê6 @
)
êê@ A
{
ëë 
if
ìì 
(
ìì 
prev
ìì 
)
ìì 
{
íí 
NItemSource
îî #
[
îî# $
e
îî$ %
.
îî% &
NewStartingIndex
îî& 6
-
îî7 8
$num
îî9 :
]
îî: ;
.
îî; <
NextFocusRight
îî< J
=
îîK L
NItemSource
îîM X
[
îîX Y
e
îîY Z
.
îîZ [
NewStartingIndex
îî[ k
]
îîk l
;
îîl m
}
ïï 
if
ññ 
(
ññ 
next
ññ 
)
ññ 
{
òò 
NItemSource
óó #
[
óó# $
e
óó$ %
.
óó% &
NewStartingIndex
óó& 6
+
óó7 8
$num
óó9 :
]
óó: ;
.
óó; <
NextFocusLeft
óó< I
=
óóJ K
NItemSource
óóL W
[
óóW X
e
óóX Y
.
óóY Z
NewStartingIndex
óóZ j
]
óój k
;
óók l
}
ôô 
NItemSource
öö 
[
öö  
e
öö  !
.
öö! "
NewStartingIndex
öö" 2
]
öö2 3
.
öö3 4
NextFocusUp
öö4 ?
=
öö@ A
NextFocusUp
ööB M
;
ööM N
NItemSource
÷÷ 
[
÷÷  
e
÷÷  !
.
÷÷! "
NewStartingIndex
÷÷" 2
]
÷÷2 3
.
÷÷3 4
NextFocusDown
÷÷4 A
=
÷÷B C
NextFocusDown
÷÷D Q
;
÷÷Q R
}
øø 
else
ùù 
{
úú 
if
ûû 
(
ûû 
prev
ûû 
)
ûû 
{
üü 
NItemSource
ýý #
[
ýý# $
e
ýý$ %
.
ýý% &
NewStartingIndex
ýý& 6
-
ýý7 8
$num
ýý9 :
]
ýý: ;
.
ýý; <
NextFocusDown
ýý< I
=
ýýJ K
NItemSource
ýýL W
[
ýýW X
e
ýýX Y
.
ýýY Z
NewStartingIndex
ýýZ j
]
ýýj k
;
ýýk l
}
þþ 
if
 
(
 
next
 
)
 
{
 
NItemSource
 #
[
# $
e
$ %
.
% &
NewStartingIndex
& 6
+
6 7
$num
7 8
]
8 9
.
9 :
NextFocusUp
: E
=
F G
NItemSource
H S
[
S T
e
T U
.
U V
NewStartingIndex
V f
]
f g
;
g h
}
 
NItemSource
 
[
  
e
  !
.
! "
NewStartingIndex
" 2
]
2 3
.
3 4
NextFocusLeft
4 A
=
B C
NextFocusLeft
D Q
;
Q R
NItemSource
 
[
  
e
  !
.
! "
NewStartingIndex
" 2
]
2 3
.
3 4
NextFocusRight
4 B
=
C D
NextFocusRight
E S
;
S T
}
 
}
 
else
 
if
 
(
 
e
 
.
 
Action
 
==
 +
NotifyCollectionChangedAction
  =
.
= >
Remove
> D
)
D E
{
 
	container
 
.
 
Children
 "
.
" #
RemoveAt
# +
(
+ ,
e
, -
.
- .
OldStartingIndex
. >
)
> ?
;
? @
bool
 
prev
 
=
 
e
 
.
 
OldStartingIndex
 .
>
/ 0
$num
1 2
;
2 3
bool
 
next
 
=
 
e
 
.
 
OldStartingIndex
 .
<
/ 0
NItemSource
1 <
.
< =
Count
= B
-
C D
$num
E F
;
F G
if
 
(
 
	container
 
.
 
Children
 &
.
& '
Count
' ,
>
- .
$num
/ 0
&&
1 3
NFocusedIndex
4 A
>=
B D
	container
E N
.
N O
Children
O W
.
W X
Count
X ]
)
] ^
{
 
NFocusedIndex
 !
=
" #
	container
$ -
.
- .
Children
. 6
.
6 7
Count
7 <
-
= >
$num
? @
;
@ A
}
 
if
 
(
 
NOrientation
  
==
! #
ScrollOrientation
$ 5
.
5 6

Horizontal
6 @
)
@ A
{
 
if
 
(
 
prev
 
)
 
{
 
NItemSource
 #
[
# $
e
$ %
.
% &
OldStartingIndex
& 6
-
7 8
$num
9 :
]
: ;
.
; <
NextFocusRight
< J
=
K L
next
M Q
?
R S
NItemSource
T _
[
_ `
e
` a
.
a b
OldStartingIndex
b r
]
r s
:
t u
null
v z
;
z {
}
 
if
 
(
 
next
 
)
 
{
 
NItemSource
 #
[
# $
e
$ %
.
% &
OldStartingIndex
& 6
]
6 7
.
7 8
NextFocusLeft
8 E
=
F G
prev
H L
?
M N
NItemSource
O Z
[
Z [
e
[ \
.
\ ]
OldStartingIndex
] m
-
m n
$num
n o
]
o p
:
q r
null
s w
;
w x
}
 
}
   
else
¡¡ 
{
¢¢ 
if
££ 
(
££ 
prev
££ 
)
££ 
{
¤¤ 
NItemSource
¥¥ #
[
¥¥# $
e
¥¥$ %
.
¥¥% &
OldStartingIndex
¥¥& 6
-
¥¥7 8
$num
¥¥9 :
]
¥¥: ;
.
¥¥; <
NextFocusDown
¥¥< I
=
¥¥J K
next
¥¥L P
?
¥¥Q R
NItemSource
¥¥S ^
[
¥¥^ _
e
¥¥_ `
.
¥¥` a
OldStartingIndex
¥¥a q
]
¥¥q r
:
¥¥s t
null
¥¥u y
;
¥¥y z
}
¦¦ 
if
¨¨ 
(
¨¨ 
next
¨¨ 
)
¨¨ 
{
©© 
NItemSource
ªª #
[
ªª# $
e
ªª$ %
.
ªª% &
OldStartingIndex
ªª& 6
]
ªª6 7
.
ªª7 8
NextFocusUp
ªª8 C
=
ªªD E
prev
ªªF J
?
ªªK L
NItemSource
ªªM X
[
ªªX Y
e
ªªY Z
.
ªªZ [
OldStartingIndex
ªª[ k
-
ªªl m
$num
ªªn o
]
ªªo p
:
ªªq r
null
ªªs w
;
ªªw x
}
«« 
}
¬¬ 
}
­­ 
else
®® 
if
®® 
(
®® 
e
®® 
.
®® 
Action
®® 
==
®® +
NotifyCollectionChangedAction
®®  =
.
®®= >
Replace
®®> E
)
®®E F
{
¯¯ 
	container
°° 
.
°° 
Children
°° "
[
°°" #
e
°°# $
.
°°$ %
NewStartingIndex
°°% 5
]
°°5 6
=
°°7 8

CreateItem
°°9 C
(
°°C D
(
°°D E
NListViewItem
°°E R
)
°°R S
e
°°S T
.
°°T U
NewItems
°°U ]
[
°°] ^
$num
°°^ _
]
°°_ `
)
°°` a
;
°°a b
NItemSource
±± 
[
±± 
e
±± 
.
±± 
NewStartingIndex
±± .
]
±±. /
.
±±/ 0
NFocusColor
±±0 ;
=
±±< =
NFocusColor
±±> I
;
±±I J
NItemSource
²² 
[
²² 
e
²² 
.
²² 
NewStartingIndex
²² .
]
²². /
.
²²/ 0
ParentListView
²²0 >
=
²²? @
this
²²A E
;
²²E F
NItemSource
³³ 
[
³³ 
e
³³ 
.
³³ 
NewStartingIndex
³³ .
]
³³. /
.
³³/ 0
SetFrame
³³0 8
(
³³8 9
	container
³³9 B
.
³³B C
Children
³³C K
[
³³K L
e
³³L M
.
³³M N
NewStartingIndex
³³N ^
]
³³^ _
as
³³` b
Frame
³³c h
)
³³h i
;
³³i j
if
µµ 
(
µµ 
e
µµ 
.
µµ 
NewStartingIndex
µµ &
==
µµ' )
NFocusedIndex
µµ* 7
&&
µµ8 :
active
µµ; A
)
µµA B
{
¶¶ 
NItemSource
·· 
[
··  
e
··  !
.
··! "
NewStartingIndex
··" 2
]
··2 3
.
··3 4

IsNFocused
··4 >
=
··? @
true
··A E
;
··E F
}
¸¸ 
if
ºº 
(
ºº 
e
ºº 
.
ºº 
NewStartingIndex
ºº &
>
ºº' (
$num
ºº) *
)
ºº* +
{
»» 
if
¼¼ 
(
¼¼ 
NOrientation
¼¼ $
==
¼¼% '
ScrollOrientation
¼¼( 9
.
¼¼9 :

Horizontal
¼¼: D
)
¼¼D E
{
½½ 
NItemSource
¾¾ #
[
¾¾# $
e
¾¾$ %
.
¾¾% &
NewStartingIndex
¾¾& 6
-
¾¾7 8
$num
¾¾9 :
]
¾¾: ;
.
¾¾; <
NextFocusRight
¾¾< J
=
¾¾K L
NItemSource
¾¾M X
[
¾¾X Y
e
¾¾Y Z
.
¾¾Z [
NewStartingIndex
¾¾[ k
]
¾¾k l
;
¾¾l m
NItemSource
¿¿ #
[
¿¿# $
e
¿¿$ %
.
¿¿% &
NewStartingIndex
¿¿& 6
]
¿¿6 7
.
¿¿7 8
NextFocusLeft
¿¿8 E
=
¿¿F G
NItemSource
¿¿H S
[
¿¿S T
e
¿¿T U
.
¿¿U V
NewStartingIndex
¿¿V f
-
¿¿g h
$num
¿¿i j
]
¿¿j k
;
¿¿k l
NItemSource
ÀÀ #
[
ÀÀ# $
e
ÀÀ$ %
.
ÀÀ% &
NewStartingIndex
ÀÀ& 6
]
ÀÀ6 7
.
ÀÀ7 8
NextFocusUp
ÀÀ8 C
=
ÀÀD E
NextFocusUp
ÀÀF Q
;
ÀÀQ R
NItemSource
ÁÁ #
[
ÁÁ# $
e
ÁÁ$ %
.
ÁÁ% &
NewStartingIndex
ÁÁ& 6
]
ÁÁ6 7
.
ÁÁ7 8
NextFocusDown
ÁÁ8 E
=
ÁÁF G
NextFocusDown
ÁÁH U
;
ÁÁU V
}
ÂÂ 
else
ÃÃ 
{
ÄÄ 
NItemSource
ÅÅ #
[
ÅÅ# $
e
ÅÅ$ %
.
ÅÅ% &
NewStartingIndex
ÅÅ& 6
-
ÅÅ7 8
$num
ÅÅ9 :
]
ÅÅ: ;
.
ÅÅ; <
NextFocusDown
ÅÅ< I
=
ÅÅJ K
NItemSource
ÅÅL W
[
ÅÅW X
e
ÅÅX Y
.
ÅÅY Z
NewStartingIndex
ÅÅZ j
]
ÅÅj k
;
ÅÅk l
NItemSource
ÆÆ #
[
ÆÆ# $
e
ÆÆ$ %
.
ÆÆ% &
NewStartingIndex
ÆÆ& 6
]
ÆÆ6 7
.
ÆÆ7 8
NextFocusUp
ÆÆ8 C
=
ÆÆD E
NItemSource
ÆÆF Q
[
ÆÆQ R
e
ÆÆR S
.
ÆÆS T
NewStartingIndex
ÆÆT d
-
ÆÆe f
$num
ÆÆg h
]
ÆÆh i
;
ÆÆi j
NItemSource
ÇÇ #
[
ÇÇ# $
e
ÇÇ$ %
.
ÇÇ% &
NewStartingIndex
ÇÇ& 6
]
ÇÇ6 7
.
ÇÇ7 8
NextFocusLeft
ÇÇ8 E
=
ÇÇF G
NextFocusLeft
ÇÇH U
;
ÇÇU V
NItemSource
ÈÈ #
[
ÈÈ# $
e
ÈÈ$ %
.
ÈÈ% &
NewStartingIndex
ÈÈ& 6
]
ÈÈ6 7
.
ÈÈ7 8
NextFocusRight
ÈÈ8 F
=
ÈÈG H
NextFocusRight
ÈÈI W
;
ÈÈW X
}
ÉÉ 
}
ÊÊ 
if
ÌÌ 
(
ÌÌ 
e
ÌÌ 
.
ÌÌ 
NewStartingIndex
ÌÌ &
<
ÌÌ' (
NItemSource
ÌÌ) 4
.
ÌÌ4 5
Count
ÌÌ5 :
-
ÌÌ; <
$num
ÌÌ= >
)
ÌÌ> ?
{
ÍÍ 
if
ÎÎ 
(
ÎÎ 
NOrientation
ÎÎ $
==
ÎÎ% '
ScrollOrientation
ÎÎ( 9
.
ÎÎ9 :

Horizontal
ÎÎ: D
)
ÎÎD E
{
ÏÏ 
NItemSource
ÐÐ #
[
ÐÐ# $
e
ÐÐ$ %
.
ÐÐ% &
NewStartingIndex
ÐÐ& 6
+
ÐÐ7 8
$num
ÐÐ9 :
]
ÐÐ: ;
.
ÐÐ; <
NextFocusLeft
ÐÐ< I
=
ÐÐJ K
NItemSource
ÐÐL W
[
ÐÐW X
e
ÐÐX Y
.
ÐÐY Z
NewStartingIndex
ÐÐZ j
]
ÐÐj k
;
ÐÐk l
NItemSource
ÑÑ #
[
ÑÑ# $
e
ÑÑ$ %
.
ÑÑ% &
NewStartingIndex
ÑÑ& 6
]
ÑÑ6 7
.
ÑÑ7 8
NextFocusRight
ÑÑ8 F
=
ÑÑG H
NItemSource
ÑÑI T
[
ÑÑT U
e
ÑÑU V
.
ÑÑV W
NewStartingIndex
ÑÑW g
+
ÑÑh i
$num
ÑÑj k
]
ÑÑk l
;
ÑÑl m
NItemSource
ÒÒ #
[
ÒÒ# $
e
ÒÒ$ %
.
ÒÒ% &
NewStartingIndex
ÒÒ& 6
]
ÒÒ6 7
.
ÒÒ7 8
NextFocusUp
ÒÒ8 C
=
ÒÒD E
NextFocusUp
ÒÒF Q
;
ÒÒQ R
NItemSource
ÓÓ #
[
ÓÓ# $
e
ÓÓ$ %
.
ÓÓ% &
NewStartingIndex
ÓÓ& 6
]
ÓÓ6 7
.
ÓÓ7 8
NextFocusDown
ÓÓ8 E
=
ÓÓF G
NextFocusDown
ÓÓH U
;
ÓÓU V
}
ÔÔ 
else
ÕÕ 
{
ÖÖ 
NItemSource
×× #
[
××# $
e
××$ %
.
××% &
NewStartingIndex
××& 6
+
××7 8
$num
××9 :
]
××: ;
.
××; <
NextFocusUp
××< G
=
××H I
NItemSource
××J U
[
××U V
e
××V W
.
××W X
NewStartingIndex
××X h
]
××h i
;
××i j
NItemSource
ØØ #
[
ØØ# $
e
ØØ$ %
.
ØØ% &
NewStartingIndex
ØØ& 6
]
ØØ6 7
.
ØØ7 8
NextFocusDown
ØØ8 E
=
ØØF G
NItemSource
ØØH S
[
ØØS T
e
ØØT U
.
ØØU V
NewStartingIndex
ØØV f
+
ØØg h
$num
ØØi j
]
ØØj k
;
ØØk l
NItemSource
ÙÙ #
[
ÙÙ# $
e
ÙÙ$ %
.
ÙÙ% &
NewStartingIndex
ÙÙ& 6
]
ÙÙ6 7
.
ÙÙ7 8
NextFocusLeft
ÙÙ8 E
=
ÙÙF G
NextFocusLeft
ÙÙH U
;
ÙÙU V
NItemSource
ÚÚ #
[
ÚÚ# $
e
ÚÚ$ %
.
ÚÚ% &
NewStartingIndex
ÚÚ& 6
]
ÚÚ6 7
.
ÚÚ7 8
NextFocusRight
ÚÚ8 F
=
ÚÚG H
NextFocusRight
ÚÚI W
;
ÚÚW X
}
ÛÛ 
}
ÜÜ 
}
ÝÝ 
else
ÞÞ 
if
ÞÞ 
(
ÞÞ 
e
ÞÞ 
.
ÞÞ 
Action
ÞÞ 
==
ÞÞ +
NotifyCollectionChangedAction
ÞÞ  =
.
ÞÞ= >
Reset
ÞÞ> C
)
ÞÞC D
{
ßß 
	container
àà 
.
àà 
Children
àà "
.
àà" #
Clear
àà# (
(
àà( )
)
àà) *
;
àà* +
}
áá 
	container
ãã 
.
ãã 
	IsVisible
ãã 
=
ãã  !
true
ãã" &
;
ãã& '
}
ää 	
private
ææ 
Frame
ææ 

CreateItem
ææ  
(
ææ  !
NListViewItem
ææ! .
item
ææ/ 3
)
ææ3 4
{
çç 	
Frame
èè 
frame
èè 
=
èè 
new
èè 
Frame
èè #
(
èè# $
)
èè$ %
{
éé 
Padding
êê 
=
êê 
$num
êê 
,
êê 
Margin
ëë 
=
ëë 
$num
ëë 
,
ëë 
BorderColor
ìì 
=
ìì 
Color
ìì #
.
ìì# $
Transparent
ìì$ /
,
ìì/ 0
BackgroundColor
íí 
=
íí  !
Color
íí" '
.
íí' (
Transparent
íí( 3
,
íí3 4
VerticalOptions
îî 
=
îî  !
LayoutOptions
îî" /
.
îî/ 0
Center
îî0 6
,
îî6 7
HorizontalOptions
ïï !
=
ïï" #
LayoutOptions
ïï$ 1
.
ïï1 2
Center
ïï2 8
,
ïï8 9
WidthRequest
ðð 
=
ðð 

NItemWidth
ðð )
,
ðð) *
HeightRequest
ññ 
=
ññ 
NItemHeight
ññ  +
,
ññ+ ,
}
òò 
;
òò 
var
óó 
view
óó 
=
óó 
NItemTemplate
óó $
.
óó$ %
Invoke
óó% +
(
óó+ ,
item
óó, 0
)
óó0 1
;
óó1 2
view
ôô 
.
ôô 
VerticalOptions
ôô  
=
ôô! "
LayoutOptions
ôô# 0
.
ôô0 1
CenterAndExpand
ôô1 @
;
ôô@ A
view
õõ 
.
õõ 
HorizontalOptions
õõ "
=
õõ# $
LayoutOptions
õõ% 2
.
õõ2 3
CenterAndExpand
õõ3 B
;
õõB C
frame
öö 
.
öö 
Content
öö 
=
öö 
view
öö  
;
öö  !
return
øø 
frame
øø 
;
øø 
}
ùù 	
private
ûû 
bool
ûû 
	FocusPrev
ûû 
(
ûû 
)
ûû  
{
üü 	
if
ýý 
(
ýý 
NFocusedIndex
ýý 
-
ýý 
$num
ýý  !
>=
ýý" $
$num
ýý% &
&&
ýý' )
NFocusedIndex
ýý* 7
-
ýý8 9
$num
ýý: ;
<
ýý< =
NItemSource
ýý> I
.
ýýI J
Count
ýýJ O
)
ýýO P
{
þþ 
NFocusedIndex
ÿÿ 
--
ÿÿ 
;
ÿÿ  
return
 
true
 
;
 
}
 
return
 
false
 
;
 
}
 	
private
 
void
 
FocusSpecified
 #
(
# $
int
$ '
old
( +
,
+ ,
int
- 0
index
1 6
)
6 7
{
 	
INFocusElement
 

oldElement
 %
=
& '
null
( ,
;
, -
INFocusElement
 

newElement
 %
=
& '
null
( ,
;
, -
if
 
(
 
old
 
>=
 
$num
 
&&
 
old
 
<
  
NItemSource
! ,
.
, -
Count
- 2
)
2 3
{
 

oldElement
 
=
 
NItemSource
 (
[
( )
old
) ,
]
, -
;
- .
}
 
if
 
(
 
index
 
>=
 
$num
 
&&
 
index
 "
<
# $
NItemSource
% 0
.
0 1
Count
1 6
)
6 7
{
 

newElement
 
=
 
NItemSource
 (
[
( )
index
) .
]
. /
;
/ 0
}
 
FocusContext
 
.
 
ChangeFocus
 $
(
$ %

oldElement
% /
,
/ 0

newElement
1 ;
)
; <
;
< =
}
 	
public
 
void
 
	SetActive
 
(
 
bool
 "
active
# )
)
) *
{
 	
this
 
.
 
active
 
=
 
active
  
;
  !
}
 	
public
 
Frame
 
GetFrame
 
(
 
int
 !
index
" '
)
' (
{
 	
return
 
index
 
>=
 
$num
 
&&
  
index
! &
<
' (
NItemSource
) 4
.
4 5
Count
5 :
?
; <
	container
= F
.
F G
Children
G O
[
O P
index
P U
]
U V
as
W Y
Frame
Z _
:
` a
null
b f
;
f g
}
   	
public
¢¢ 
View
¢¢  
GetCurrentItemView
¢¢ &
(
¢¢& '
)
¢¢' (
{
££ 	
if
¤¤ 
(
¤¤ 
NFocusedIndex
¤¤ 
<
¤¤ 
$num
¤¤  !
)
¤¤! "
return
¥¥ 
	container
¥¥  
.
¥¥  !
Children
¥¥! )
[
¥¥) *
$num
¥¥* +
]
¥¥+ ,
;
¥¥, -
if
§§ 
(
§§ 
NFocusedIndex
§§ 
>=
§§  
	container
§§! *
.
§§* +
Children
§§+ 3
.
§§3 4
Count
§§4 9
)
§§9 :
return
¨¨ 
	container
¨¨  
.
¨¨  !
Children
¨¨! )
[
¨¨) *
	container
¨¨* 3
.
¨¨3 4
Children
¨¨4 <
.
¨¨< =
Count
¨¨= B
-
¨¨C D
$num
¨¨E F
]
¨¨F G
;
¨¨G H
return
ªª 
	container
ªª 
.
ªª 
Children
ªª %
[
ªª% &
NFocusedIndex
ªª& 3
]
ªª3 4
;
ªª4 5
}
«« 	
public
¬¬ 
void
¬¬ 
	FocusLeft
¬¬ 
(
¬¬ 
)
¬¬ 
{
­­ 	
if
®® 
(
®® 
NOrientation
®® 
==
®® 
ScrollOrientation
®® 0
.
®®0 1

Horizontal
®®1 ;
)
®®; <
{
¯¯ 
if
°° 
(
°° 
!
°° 
	FocusPrev
°° 
(
°° 
)
°° 
&&
°°  "
FocusContext
°°# /
.
°°/ 0
	FocusLeft
°°0 9
(
°°9 :
this
°°: >
)
°°> ?
)
°°? @
{
±± 
active
²² 
=
²² 
false
²² "
;
²²" #
}
³³ 
}
´´ 
else
µµ 
{
¶¶ 
if
·· 
(
·· 
FocusContext
··  
.
··  !
	FocusLeft
··! *
(
··* +
this
··+ /
)
··/ 0
)
··0 1
{
¸¸ 
active
¹¹ 
=
¹¹ 
false
¹¹ "
;
¹¹" #
}
ºº 
}
»» 
}
¼¼ 	
public
¾¾ 
void
¾¾ 

FocusRight
¾¾ 
(
¾¾ 
)
¾¾  
{
¿¿ 	
if
ÀÀ 
(
ÀÀ 
NOrientation
ÀÀ 
==
ÀÀ 
ScrollOrientation
ÀÀ  1
.
ÀÀ1 2

Horizontal
ÀÀ2 <
)
ÀÀ< =
{
ÁÁ 
if
ÂÂ 
(
ÂÂ 
!
ÂÂ 
	FocusNext
ÂÂ 
(
ÂÂ 
)
ÂÂ 
&&
ÂÂ  "
FocusContext
ÂÂ# /
.
ÂÂ/ 0

FocusRight
ÂÂ0 :
(
ÂÂ: ;
this
ÂÂ; ?
)
ÂÂ? @
)
ÂÂ@ A
{
ÃÃ 
active
ÄÄ 
=
ÄÄ 
false
ÄÄ "
;
ÄÄ" #
}
ÅÅ 
}
ÆÆ 
else
ÇÇ 
{
ÈÈ 
if
ÉÉ 
(
ÉÉ 
FocusContext
ÉÉ 
.
ÉÉ  

FocusRight
ÉÉ  *
(
ÉÉ* +
this
ÉÉ+ /
)
ÉÉ/ 0
)
ÉÉ0 1
{
ÊÊ 
active
ËË 
=
ËË 
false
ËË "
;
ËË" #
}
ÌÌ 
}
ÍÍ 
}
ÎÎ 	
public
ÐÐ 
void
ÐÐ 
FocusUp
ÐÐ 
(
ÐÐ 
)
ÐÐ 
{
ÑÑ 	
if
ÒÒ 
(
ÒÒ 
NOrientation
ÒÒ 
==
ÒÒ 
ScrollOrientation
ÒÒ  1
.
ÒÒ1 2
Vertical
ÒÒ2 :
)
ÒÒ: ;
{
ÓÓ 
if
ÔÔ 
(
ÔÔ 
!
ÔÔ 
	FocusPrev
ÔÔ 
(
ÔÔ 
)
ÔÔ 
&&
ÔÔ  "
FocusContext
ÔÔ# /
.
ÔÔ/ 0
FocusUp
ÔÔ0 7
(
ÔÔ7 8
this
ÔÔ8 <
)
ÔÔ< =
)
ÔÔ= >
{
ÕÕ 
active
ÖÖ 
=
ÖÖ 
false
ÖÖ "
;
ÖÖ" #
}
×× 
}
ØØ 
else
ÙÙ 
{
ÚÚ 
if
ÛÛ 
(
ÛÛ 
FocusContext
ÛÛ 
.
ÛÛ  
FocusUp
ÛÛ  '
(
ÛÛ' (
this
ÛÛ( ,
)
ÛÛ, -
)
ÛÛ- .
{
ÜÜ 
active
ÝÝ 
=
ÝÝ 
false
ÝÝ "
;
ÝÝ" #
}
ÞÞ 
}
ßß 
}
àà 	
public
ââ 
void
ââ 
	FocusDown
ââ 
(
ââ 
)
ââ 
{
ãã 	
if
ää 
(
ää 
NOrientation
ää 
==
ää 
ScrollOrientation
ää  1
.
ää1 2
Vertical
ää2 :
)
ää: ;
{
åå 
if
ææ 
(
ææ 
!
ææ 
	FocusNext
ææ 
(
ææ 
)
ææ 
&&
ææ  "
FocusContext
ææ# /
.
ææ/ 0
	FocusDown
ææ0 9
(
ææ9 :
this
ææ: >
)
ææ> ?
)
ææ? @
{
çç 
active
èè 
=
èè 
false
èè "
;
èè" #
}
éé 
}
êê 
else
ëë 
{
ìì 
if
íí 
(
íí 
FocusContext
íí  
.
íí  !
	FocusDown
íí! *
(
íí* +
this
íí+ /
)
íí/ 0
)
íí0 1
{
îî 
active
ïï 
=
ïï 
false
ïï "
;
ïï" #
}
ðð 
}
ññ 
}
òò 	
public
ôô 
void
ôô 
FocusAction
ôô 
(
ôô  
)
ôô  !
{
õõ 	
if
öö 
(
öö 
NFocusedIndex
öö 
>=
öö 
$num
öö  !
&&
öö" $
NFocusedIndex
öö% 2
<
öö3 4
NItemSource
öö5 @
.
öö@ A
Count
ööA F
)
ööF G
{
÷÷ 
NItemSource
øø 
[
øø 
NFocusedIndex
øø )
]
øø) *
.
øø* +
FocusAction
øø+ 6
(
øø6 7
)
øø7 8
;
øø8 9
}
ùù 
}
úú 	
public
üü 
void
üü 
LongFocusAction
üü #
(
üü# $
)
üü$ %
{
ýý 	
if
þþ 
(
þþ 
NFocusedIndex
þþ 
>=
þþ  
$num
þþ! "
&&
þþ# %
NFocusedIndex
þþ& 3
<
þþ4 5
NItemSource
þþ6 A
.
þþA B
Count
þþB G
)
þþG H
{
ÿÿ 
NItemSource
 
[
 
NFocusedIndex
 )
]
) *
.
* +
LongFocusAction
+ :
(
: ;
)
; <
;
< =
}
 
}
 	
private
 
bool
 
	FocusNext
 
(
 
)
  
{
 	
if
 
(
 
NFocusedIndex
 
+
 
$num
  !
>=
" $
$num
% &
&&
' )
NFocusedIndex
* 7
+
8 9
$num
: ;
<
< =
NItemSource
> I
.
I J
Count
J O
)
O P
{
 
NFocusedIndex
 
++
 
;
  
return
 
true
 
;
 
}
 
return
 
false
 
;
 
}
 	
public
 
void
 
Rerender
 
(
 
)
 
{
 	+
NItemSource_CollectionChanged
 )
(
) *
null
* .
,
. /
new
0 3.
 NotifyCollectionChangedEventArgs
4 T
(
T U+
NotifyCollectionChangedAction
U r
.
r s
Reset
s x
)
x y
)
y z
;
z {
for
 
(
 
int
 
a
 
=
 
$num
 
;
 
a
 
<
 
NItemSource
  +
.
+ ,
Count
, 1
;
1 2
a
3 4
++
4 6
)
6 7
{
 +
NItemSource_CollectionChanged
 -
(
- .
null
. 2
,
2 3
new
4 7.
 NotifyCollectionChangedEventArgs
8 X
(
X Y+
NotifyCollectionChangedAction
Y v
.
v w
Add
w z
,
z {
NItemSource| 
[ 
a 
] 
, 
a 
) 
) 
; 
}
 
}
 	
}
 
} 
1D:\Projekty\CS\Newtone\Newtone.Mobile.UI\Fonts.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
{ 
public 

static 
class 
Fonts 
{ 
public 
const 
string 
Black !
=" #
$str$ I
;I J
public 
const 
string 
Bold  
=! "
$str# F
;F G
public 
const 
string 
Regular #
=$ %
$str& O
;O P
public		 
const		 
string		 
Medium		 "
=		# $
$str		% L
;		L M
public

 
const

 
string

 
Light

 !
=

" #
$str

$ I
;

I J
public 
const 
string 
Thin  
=! "
$str# F
;F G
} 
} ã
2D:\Projekty\CS\Newtone\Newtone.Mobile.UI\Global.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
{ 
public 

static 
class 
Global 
{ 
public 
static 
IPermission !
Permissions" -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public		 
static		 
IApplication		 "
Application		# .
{		/ 0
get		1 4
;		4 5
set		6 9
;		9 :
}		; <
public

 
static

 
IImageProcessing

 &
ImageProcessing

' 6
{

7 8
get

9 <
;

< =
set

> A
;

A B
}

C D
public 
static 
IContextMenuBuilder )
ContextMenuBuilder* <
{= >
get? B
;B C
setD G
;G H
}I J
public 
static 
bool 
Loaded !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
static 
bool 
TV 
{ 
get  #
;# $
set% (
;( )
}* +
public 
static 
NavigationWrapper '
NavigationInstance( :
{; <
get= @
;@ A
setB E
;E F
}G H
public 
static 
Page 
Page 
{  !
get" %
;% &
set' *
;* +
}, -
} 
} §
GD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Logic\ContentViewExtensions.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Logic !
{ 
public 

static 
class !
ContentViewExtensions -
{ 
public 
static 
bool 
IsTimerView &
(& '
this' +
ContentView, 7
contentView8 C
)C D
{		 	
return

 
contentView

 
is

 !
ITimerContent

" /
;

/ 0
} 	
} 
}  â
DD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Logic\ContextMenuBuilder.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Logic !
{ 
public 

static 
class 
ContextMenuBuilder *
{ 
private 
static 
string 
CurrentModelInfo .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
static 
void 
BuildForTrack (
(( )
Xamarin) 0
.0 1
Forms1 6
.6 7
View7 ;
sender< B
,B C
stringD J
	modelInfoK T
)T U
{ 	
CurrentModelInfo 
= 
	modelInfo (
;( )
string 
[ 
] 
elems 
= 
CurrentModelInfo -
.- .
Split. 3
(3 4

GlobalData4 >
.> ?
	SEPARATOR? H
,H I
SystemJ P
.P Q
StringSplitOptionsQ c
.c d
Noned h
)h i
;i j
string 
filePath 
= 
elems #
[# $
$num$ %
]% &
;& '
string 
playlistName 
=  !
elems" '
[' (
$num( )
]) *
;* +
List   
<   
string   
>   
	menuItems   "
=  # $
new  % (
List  ) -
<  - .
string  . 4
>  4 5
(  5 6
)  6 7
{  8 9
filePath  : B
.  B C
Length  C I
==  J L
$num  M O
?  P Q
Localization  R ^
.  ^ _
Download  _ g
:  h i
Localization  j v
.  v w
TrackMenuEdit	  w 
,
   
Localization
   
.
   
TrackMenuPlaylist
   ¤
,
  ¤ ¥
Localization
  ¦ ²
.
  ² ³
TrackMenuQueue
  ³ Á
}
  Â Ã
;
  Ã Ä
if!! 
(!! 
!!! 
string!! 
.!! 
IsNullOrEmpty!! %
(!!% &
playlistName!!& 2
)!!2 3
)!!3 4
	menuItems"" 
."" 
Add"" 
("" 
Localization"" *
.""* +
SyncAddPlaylist""+ :
)"": ;
;""; <
	menuItems$$ 
.$$ 
Add$$ 
($$ 
Localization$$ &
.$$& '
TrackMenuDelete$$' 6
)$$6 7
;$$7 8
Global&& 
.&& 
ContextMenuBuilder&& %
.&&% &
BuildForTrack&&& 3
(&&3 4
sender&&4 :
,&&: ;
	modelInfo&&< E
,&&E F
filePath&&G O
,&&O P
playlistName&&Q ]
,&&] ^
	menuItems&&_ h
,&&h i
TrackAction&&j u
)&&u v
;&&v w
}'' 	
public)) 
static)) 
void)) 
BuildForPlaylist)) +
())+ ,
View)), 0
sender))1 7
,))7 8
string))9 ?
playlistName))@ L
)))L M
{** 	
List++ 
<++ 
string++ 
>++ 
elements++ !
=++" #
new++$ '
List++( ,
<++, -
string++- 3
>++3 4
(++4 5
)++5 6
{++7 8
Localization++9 E
.++E F
PlaylistPlay++F R
,++R S
Localization++T `
.++` a
TrackMenuPlaylist++a r
,++r s
Localization	++t 
.
++ 
TrackMenuQueue
++ 
,
++ 
Localization
++ 
.
++ 

ChangeName
++ ¨
,
++¨ ©
Localization
++ª ¶
.
++¶ ·
TrackMenuDelete
++· Æ
}
++Ç È
;
++È É
Global-- 
.-- 
ContextMenuBuilder-- %
.--% &
BuildForPlaylist--& 6
(--6 7
sender--7 =
,--= >
playlistName--? K
,--K L
elements--M U
,--U V
PlaylistAction--W e
)--e f
;--f g
}.. 	
public00 
static00 
void00 
BuildForArtist00 )
(00) *
View00* .
sender00/ 5
,005 6
string007 =

artistName00> H
)00H I
{11 	
List22 
<22 
string22 
>22 
elements22 !
=22" #
new22$ '
List22( ,
<22, -
string22- 3
>223 4
(224 5
)225 6
{227 8
Localization229 E
.22E F
PlaylistPlay22F R
,22R S
Localization22T `
.22` a
TrackMenuPlaylist22a r
,22r s
Localization	22t 
.
22 
TrackMenuQueue
22 
}
22 
;
22 
Global44 
.44 
ContextMenuBuilder44 %
.44% &
BuildForArtist44& 4
(444 5
sender445 ;
,44; <

artistName44= G
,44G H
elements44I Q
,44Q R
ArtistAction44S _
)44_ `
;44` a
}55 	
public77 
static77 
void77  
BuildForSearchResult77 /
(77/ 0
View770 4
sender775 ;
,77; <
string77= C
	modelInfo77D M
)77M N
{88 	
List99 
<99 
string99 
>99 
elements99 !
=99" #
new99$ '
List99( ,
<99, -
string99- 3
>993 4
(994 5
)995 6
{997 8
Localization999 E
.99E F
Download99F N
,99N O
Localization99P \
.99\ ]
TrackMenuPlaylist99] n
}99o p
;99p q
Global;; 
.;; 
ContextMenuBuilder;; %
.;;% & 
BuildForSearchResult;;& :
(;;: ;
sender;;; A
,;;A B
	modelInfo;;C L
,;;L M
elements;;N V
,;;V W
SearchResultAction;;X j
);;j k
;;;k l
}<< 	
private?? 
static?? 
async?? 
Task?? !
TrackAction??" -
(??- .
string??. 4
filePath??5 =
,??= >
string??? E
item??F J
,??J K
string??L R
playlistName??S _
)??_ `
{@@ 	
PageAA 
pageAA 
=AA 
GlobalAA 
.AA 
PageAA #
;AA# $
ifCC 
(CC 
filePathCC 
.CC 
LengthCC 
==CC !
$numCC" $
&&CC% '
!CC( )

GlobalDataCC) 3
.CC3 4
CurrentCC4 ;
.CC; <
SavedTracksCC< G
.CCG H
ContainsKeyCCH S
(CCS T
filePathCCT \
)CC\ ]
)CC] ^
{DD 
YoutubeClientEE 
clientEE $
=EE% &
newEE' *
YoutubeClientEE+ 8
(EE8 9
)EE9 :
;EE: ;
varFF 
videoFF 
=FF 
awaitFF !
clientFF" (
.FF( )
VideosFF) /
.FF/ 0
GetAsyncFF0 8
(FF8 9
filePathFF9 A
)FFA B
;FFB C
varHH 
mediaSourceHH 
=HH  !
newHH" %
CoreHH& *
.HH* +
MediaHH+ 0
.HH0 1
MediaSourceHH1 <
(HH< =
)HH= >
{II 
ArtistJJ 
=JJ 
videoJJ "
.JJ" #
AuthorJJ# )
,JJ) *
DurationKK 
=KK 
videoKK $
.KK$ %
DurationKK% -
,KK- .
FilePathLL 
=LL 
videoLL $
.LL$ %
IdLL% '
,LL' (
TitleMM 
=MM 
videoMM !
.MM! "
TitleMM" '
,MM' (
TypeNN 
=NN 
CoreNN 
.NN  
MediaNN  %
.NN% &
MediaSourceNN& 1
.NN1 2

SourceTypeNN2 <
.NN< =
WebNN= @
}OO 
;OO 
tryQQ 
{RR 
usingSS 
	WebClientSS #
	webClientSS$ -
=SS. /
newSS0 3
	WebClientSS4 =
(SS= >
)SS> ?
;SS? @
byteTT 
[TT 
]TT 
	thumbDataTT $
=TT% &
	webClientTT' 0
.TT0 1
DownloadDataTT1 =
(TT= >
videoTT> C
.TTC D

ThumbnailsTTD N
.TTN O
MediumResUrlTTO [
)TT[ \
;TT\ ]
mediaSourceUU 
.UU  
ImageUU  %
=UU& '
	thumbDataUU( 1
;UU1 2
}VV 
catchWW 
{XX 
}ZZ 

GlobalData\\ 
.\\ 
Current\\ "
.\\" #
SavedTracks\\# .
.\\. /
Add\\/ 2
(\\2 3
filePath\\3 ;
,\\; <
mediaSource\\= H
)\\H I
;\\I J

GlobalData]] 
.]] 
Current]] "
.]]" #
SaveSavedTracks]]# 2
(]]2 3
)]]3 4
;]]4 5
}^^ 
var__ 
track__ 
=__ 
filePath__  
.__  !
Length__! '
==__( *
$num__+ -
?__. /

GlobalData__0 :
.__: ;
Current__; B
.__B C
SavedTracks__C N
[__N O
filePath__O W
]__W X
:__Y Z

GlobalData__[ e
.__e f
Current__f m
.__m n
Audios__n t
[__t u
filePath__u }
]__} ~
;__~ 
ifaa 
(aa 
trackaa 
==aa 
nullaa 
)aa 
{bb 
Globalcc 
.cc 
Applicationcc "
.cc" #
ShowSnackbarcc# /
(cc/ 0
Localizationcc0 <
.cc< =
SnackFileExistscc= L
)ccL M
;ccM N
returndd 
;dd 
}ee 
ifgg 
(gg 
itemgg 
==gg 
Localizationgg $
.gg$ %
TrackMenuEditgg% 2
)gg2 3
{hh 
stringii 
titleii 
;ii 
stringjj 
artistjj 
;jj 
ifll 
(ll 

GlobalDatall 
.ll 
Currentll &
.ll& '
	AudioTagsll' 0
.ll0 1
ContainsKeyll1 <
(ll< =
filePathll= E
)llE F
)llF G
{mm 
artistnn 
=nn 

GlobalDatann '
.nn' (
Currentnn( /
.nn/ 0
	AudioTagsnn0 9
[nn9 :
filePathnn: B
]nnB C
.nnC D
AuthornnD J
;nnJ K
titleoo 
=oo 

GlobalDataoo &
.oo& '
Currentoo' .
.oo. /
	AudioTagsoo/ 8
[oo8 9
filePathoo9 A
]ooA B
.ooB C
TitleooC H
;ooH I
}pp 
elseqq 
{rr 
artistss 
=ss 

GlobalDatass '
.ss' (
Currentss( /
.ss/ 0
Audiosss0 6
[ss6 7
filePathss7 ?
]ss? @
.ss@ A
ArtistssA G
;ssG H
titlett 
=tt 

GlobalDatatt &
.tt& '
Currenttt' .
.tt. /
Audiostt/ 5
[tt5 6
filePathtt6 >
]tt> ?
.tt? @
Titlett@ E
;ttE F
}uu 
stringww 

userArtistww !
=ww" #
awaitww$ )
pageww* .
.ww. /
DisplayPromptAsyncww/ A
(wwA B
LocalizationwwB N
.wwN O
ArtistwwO U
,wwU V
artistwwW ]
,ww] ^
$strww_ c
,wwc d
Localizationwwe q
.wwq r
Cancelwwr x
,wwx y
artist	wwz 
,
ww 
-
ww 
$num
ww 
,
ww 
null
ww 
,
ww 
artist
ww 
)
ww 
;
ww 
stringxx 
	userTitlexx  
=xx! "
awaitxx# (
pagexx) -
.xx- .
DisplayPromptAsyncxx. @
(xx@ A
LocalizationxxA M
.xxM N
TitlexxN S
,xxS T
titlexxU Z
,xxZ [
$strxx\ `
,xx` a
Localizationxxb n
.xxn o
Cancelxxo u
,xxu v
titlexxw |
,xx| }
-xx~ 
$num	xx 
,
xx 
null
xx 
,
xx 
title
xx 
)
xx 
;
xx 
ifzz 
(zz 

userArtistzz 
!=zz !
nullzz" &
&&zz' )
	userTitlezz* 3
!=zz4 6
nullzz7 ;
)zz; <
{{{ 
if|| 
(|| 
!|| 

GlobalData|| #
.||# $
Current||$ +
.||+ ,
	AudioTags||, 5
.||5 6
ContainsKey||6 A
(||A B
filePath||B J
)||J K
)||K L
{}} 

GlobalData~~ "
.~~" #
Current~~# *
.~~* +
	AudioTags~~+ 4
.~~4 5
Add~~5 8
(~~8 9
filePath~~9 A
,~~A B
new~~C F
Newtone~~G N
.~~N O
Core~~O S
.~~S T
Media~~T Y
.~~Y Z
MediaSourceTag~~Z h
(~~h i
)~~i j
{~~k l
Author~~m s
=~~t u

userArtist	~~v 
,
~~ 
Title
~~ 
=
~~ 
	userTitle
~~ 
}
~~ 
)
~~ 
;
~~ 
} 

GlobalData
 
.
 
Current
 &
.
& '
	AudioTags
' 0
[
0 1
filePath
1 9
]
9 :
.
: ;
Author
; A
=
B C

userArtist
D N
;
N O

GlobalData
 
.
 
Current
 &
.
& '
	AudioTags
' 0
[
0 1
filePath
1 9
]
9 :
.
: ;
Title
; @
=
A B
	userTitle
C L
;
L M
var
 
	newSource
 !
=
" #

GlobalData
$ .
.
. /
Current
/ 6
.
6 7
Audios
7 =
[
= >
filePath
> F
]
F G
.
G H
Clone
H M
(
M N
)
N O
;
O P
	newSource
 
.
 
Title
 #
=
$ %
	userTitle
& /
;
/ 0
	newSource
 
.
 
Artist
 $
=
% &

userArtist
' 1
;
1 2
GlobalLoader
  
.
  !
ChangeTrack
! ,
(
, -

GlobalData
- 7
.
7 8
Current
8 ?
.
? @
Audios
@ F
[
F G
filePath
G O
]
O P
,
P Q
	newSource
R [
)
[ \
;
\ ]

GlobalData
 
.
 
Current
 &
.
& '
SaveTags
' /
(
/ 0
)
0 1
;
1 2
Global
 
.
 
Application
 &
.
& '
ShowSnackbar
' 3
(
3 4
Localization
4 @
.
@ A
Ready
A F
)
F G
;
G H
}
 
}
 
else
 
if
 
(
 
item
 
==
 
Localization
 )
.
) *
TrackMenuPlaylist
* ;
)
; <
{
 
List
 
<
 
string
 
>
 
	positions
 &
=
' (
new
) ,
List
- 1
<
1 2
string
2 8
>
8 9
(
9 :
)
: ;
{
 
Localization
  
.
  !
NewPlaylist
! ,
}
 
;
 
foreach
 
(
 
string
 
playlist
  (
in
) +

GlobalData
, 6
.
6 7
Current
7 >
.
> ?
	Playlists
? H
.
H I
Keys
I M
)
M N
	positions
 
.
 
Add
 !
(
! "
playlist
" *
)
* +
;
+ ,
string
 
answer
 
=
 
await
  %
page
& *
.
* + 
DisplayActionSheet
+ =
(
= >
Localization
> J
.
J K
ChoosePlaylist
K Y
,
Y Z
Localization
[ g
.
g h
Cancel
h n
,
n o
null
p t
,
t u
	positions
v 
. 
ToArray 
( 
) 
) 
; 
if
 
(
 
answer
 
==
 
Localization
 *
.
* +
NewPlaylist
+ 6
)
6 7
{
 
string
 
playlist
 #
=
$ %
await
& +
page
, 0
.
0 1 
DisplayPromptAsync
1 C
(
C D
Localization
D P
.
P Q
NewPlaylist
Q \
,
\ ]
Localization
^ j
.
j k
NewPlaylistHint
k z
,
z {
Localization| 
. 
Add 
, 
Localization 
. 
Cancel ¡
,¡ ¢
Localization£ ¯
.¯ °
Playlist° ¸
,¸ ¹
-º »
$num» ¼
,¼ ½
null¾ Â
,Â Ã
LocalizationÄ Ð
.Ð Ñ
NewPlaylistÑ Ü
)Ü Ý
;Ý Þ
if
 
(
 
!
 
string
 
.
  
IsNullOrEmpty
  -
(
- .
playlist
. 6
)
6 7
)
7 8
{
 
if
 
(
 

GlobalData
 &
.
& '
Current
' .
.
. /
	Playlists
/ 8
.
8 9
ContainsKey
9 D
(
D E
playlist
E M
)
M N
)
N O

GlobalData
 &
.
& '
Current
' .
.
. /
	Playlists
/ 8
[
8 9
playlist
9 A
]
A B
.
B C
Add
C F
(
F G
track
G L
.
L M
FilePath
M U
)
U V
;
V W
else
   

GlobalData
¡¡ &
.
¡¡& '
Current
¡¡' .
.
¡¡. /
	Playlists
¡¡/ 8
.
¡¡8 9
Add
¡¡9 <
(
¡¡< =
playlist
¡¡= E
,
¡¡E F
new
¡¡G J
List
¡¡K O
<
¡¡O P
string
¡¡P V
>
¡¡V W
(
¡¡W X
)
¡¡X Y
{
¡¡Z [
track
¡¡\ a
.
¡¡a b
FilePath
¡¡b j
}
¡¡k l
)
¡¡l m
;
¡¡m n

GlobalData
££ "
.
££" #
Current
££# *
.
££* +"
PlaylistsNeedRefresh
££+ ?
=
££@ A
true
££B F
;
££F G

GlobalData
¤¤ "
.
¤¤" #
Current
¤¤# *
.
¤¤* +

SaveConfig
¤¤+ 5
(
¤¤5 6
)
¤¤6 7
;
¤¤7 8
Global
¦¦ 
.
¦¦ 
Application
¦¦ *
.
¦¦* +
ShowSnackbar
¦¦+ 7
(
¦¦7 8
Localization
¦¦8 D
.
¦¦D E
SnackPlaylist
¦¦E R
)
¦¦R S
;
¦¦S T
}
§§ 
}
¨¨ 
else
©© 
if
©© 
(
©© 

GlobalData
©© #
.
©©# $
Current
©©$ +
.
©©+ ,
	Playlists
©©, 5
.
©©5 6
ContainsKey
©©6 A
(
©©A B
answer
©©B H
)
©©H I
)
©©I J
{
ªª 
if
«« 
(
«« 
!
«« 

GlobalData
«« #
.
««# $
Current
««$ +
.
««+ ,
	Playlists
««, 5
[
««5 6
answer
««6 <
]
««< =
.
««= >
Contains
««> F
(
««F G
filePath
««G O
)
««O P
)
««P Q

GlobalData
¬¬ "
.
¬¬" #
Current
¬¬# *
.
¬¬* +
	Playlists
¬¬+ 4
[
¬¬4 5
answer
¬¬5 ;
]
¬¬; <
.
¬¬< =
Add
¬¬= @
(
¬¬@ A
filePath
¬¬A I
)
¬¬I J
;
¬¬J K

GlobalData
®® 
.
®® 
Current
®® &
.
®®& '

SaveConfig
®®' 1
(
®®1 2
)
®®2 3
;
®®3 4
Global
¯¯ 
.
¯¯ 
Application
¯¯ &
.
¯¯& '
ShowSnackbar
¯¯' 3
(
¯¯3 4
Localization
¯¯4 @
.
¯¯@ A
SnackPlaylist
¯¯A N
)
¯¯N O
;
¯¯O P
}
°° 

GlobalData
²² 
.
²² 
Current
²² "
.
²²" #"
PlaylistsNeedRefresh
²²# 7
=
²²8 9
true
²²: >
;
²²> ?
}
´´ 
else
µµ 
if
µµ 
(
µµ 
item
µµ 
==
µµ 
Localization
µµ )
.
µµ) *
TrackMenuDelete
µµ* 9
)
µµ9 :
{
¶¶ 
bool
·· 
answer
·· 
=
·· 
await
·· #
page
··$ (
.
··( )
DisplayAlert
··) 5
(
··5 6
Localization
··6 B
.
··B C
Question
··C K
,
··K L
Localization
··M Y
.
··Y Z
QuestionDelete
··Z h
+
··i j
$str
··k n
+
··o p
track
··q v
.
··v w
Title
··w |
+
··} ~
(·· 
playlistName·· 
!=·· 
$str·· 
?·· 
$str·· 
+·· 
Localization·· §
.··§ ¨*
QuestionDeleteFromPlaylist··¨ Â
+··Ã Ä
$str··Å È
:··É Ê
$str··Ë Î
)··Î Ï
,··Ï Ð
Localization··Ñ Ý
.··Ý Þ
Yes··Þ á
,··á â
Localization··ã ï
.··ï ð
No··ð ò
)··ò ó
;··ó ô
if
¹¹ 
(
¹¹ 
answer
¹¹ 
)
¹¹ 
{
ºº 
if
»» 
(
»» 
playlistName
»» $
==
»»% '
$str
»»( *
)
»»* +
{
¼¼ 
if
½½ 
(
½½ 
File
½½  
.
½½  !
Exists
½½! '
(
½½' (
filePath
½½( 0
)
½½0 1
)
½½1 2
File
¾¾  
.
¾¾  !
Delete
¾¾! '
(
¾¾' (
filePath
¾¾( 0
)
¾¾0 1
;
¾¾1 2
if
ÀÀ 
(
ÀÀ 
filePath
ÀÀ #
.
ÀÀ# $
Length
ÀÀ$ *
==
ÀÀ+ -
$num
ÀÀ. 0
)
ÀÀ0 1
{
ÁÁ 
GlobalLoader
ÂÂ (
.
ÂÂ( )
RemoveSavedTrack
ÂÂ) 9
(
ÂÂ9 :
filePath
ÂÂ: B
)
ÂÂB C
;
ÂÂC D
}
ÃÃ 
if
ÅÅ 
(
ÅÅ 

GlobalData
ÅÅ &
.
ÅÅ& '
Current
ÅÅ' .
.
ÅÅ. /
Artists
ÅÅ/ 6
[
ÅÅ6 7
track
ÅÅ7 <
.
ÅÅ< =
Artist
ÅÅ= C
]
ÅÅC D
.
ÅÅD E
Contains
ÅÅE M
(
ÅÅM N
track
ÅÅN S
.
ÅÅS T
FilePath
ÅÅT \
)
ÅÅ\ ]
)
ÅÅ] ^

GlobalData
ÆÆ &
.
ÆÆ& '
Current
ÆÆ' .
.
ÆÆ. /
Artists
ÆÆ/ 6
[
ÆÆ6 7
track
ÆÆ7 <
.
ÆÆ< =
Artist
ÆÆ= C
]
ÆÆC D
.
ÆÆD E
Remove
ÆÆE K
(
ÆÆK L
track
ÆÆL Q
.
ÆÆQ R
FilePath
ÆÆR Z
)
ÆÆZ [
;
ÆÆ[ \
if
ÈÈ 
(
ÈÈ 

GlobalData
ÈÈ &
.
ÈÈ& '
Current
ÈÈ' .
.
ÈÈ. /
Artists
ÈÈ/ 6
[
ÈÈ6 7
track
ÈÈ7 <
.
ÈÈ< =
Artist
ÈÈ= C
]
ÈÈC D
.
ÈÈD E
Count
ÈÈE J
==
ÈÈK M
$num
ÈÈN O
)
ÈÈO P
{
ÉÉ 

GlobalData
ÊÊ &
.
ÊÊ& '
Current
ÊÊ' .
.
ÊÊ. /
Artists
ÊÊ/ 6
.
ÊÊ6 7
Remove
ÊÊ7 =
(
ÊÊ= >
track
ÊÊ> C
.
ÊÊC D
Artist
ÊÊD J
)
ÊÊJ K
;
ÊÊK L

GlobalData
ËË &
.
ËË& '
Current
ËË' .
.
ËË. / 
ArtistsNeedRefresh
ËË/ A
=
ËËB C
true
ËËD H
;
ËËH I
}
ÌÌ 

GlobalData
ÎÎ "
.
ÎÎ" #
Current
ÎÎ# *
.
ÎÎ* +
Audios
ÎÎ+ 1
.
ÎÎ1 2
Remove
ÎÎ2 8
(
ÎÎ8 9
filePath
ÎÎ9 A
)
ÎÎA B
;
ÎÎB C
foreach
ÐÐ 
(
ÐÐ  !
var
ÐÐ! $
playlist
ÐÐ% -
in
ÐÐ. 0

GlobalData
ÐÐ1 ;
.
ÐÐ; <
Current
ÐÐ< C
.
ÐÐC D
	Playlists
ÐÐD M
.
ÐÐM N
Keys
ÐÐN R
)
ÐÐR S
{
ÑÑ 
if
ÒÒ 
(
ÒÒ  

GlobalData
ÒÒ  *
.
ÒÒ* +
Current
ÒÒ+ 2
.
ÒÒ2 3
	Playlists
ÒÒ3 <
[
ÒÒ< =
playlist
ÒÒ= E
]
ÒÒE F
.
ÒÒF G
Contains
ÒÒG O
(
ÒÒO P
filePath
ÒÒP X
)
ÒÒX Y
)
ÒÒY Z
{
ÓÓ 

GlobalData
ÔÔ  *
.
ÔÔ* +
Current
ÔÔ+ 2
.
ÔÔ2 3
	Playlists
ÔÔ3 <
[
ÔÔ< =
playlist
ÔÔ= E
]
ÔÔE F
.
ÔÔF G
Remove
ÔÔG M
(
ÔÔM N
filePath
ÔÔN V
)
ÔÔV W
;
ÔÔW X

GlobalData
ÕÕ  *
.
ÕÕ* +
Current
ÕÕ+ 2
.
ÕÕ2 3"
PlaylistsNeedRefresh
ÕÕ3 G
=
ÕÕH I
true
ÕÕJ N
;
ÕÕN O
}
ÖÖ 
}
×× 
}
ØØ 
else
ÙÙ 
{
ÚÚ 
if
ÛÛ 
(
ÛÛ 

GlobalData
ÛÛ &
.
ÛÛ& '
Current
ÛÛ' .
.
ÛÛ. /
	Playlists
ÛÛ/ 8
[
ÛÛ8 9
playlistName
ÛÛ9 E
]
ÛÛE F
.
ÛÛF G
Contains
ÛÛG O
(
ÛÛO P
filePath
ÛÛP X
)
ÛÛX Y
)
ÛÛY Z
{
ÜÜ 

GlobalData
ÝÝ &
.
ÝÝ& '
Current
ÝÝ' .
.
ÝÝ. /
	Playlists
ÝÝ/ 8
[
ÝÝ8 9
playlistName
ÝÝ9 E
]
ÝÝE F
.
ÝÝF G
Remove
ÝÝG M
(
ÝÝM N
filePath
ÝÝN V
)
ÝÝV W
;
ÝÝW X

GlobalData
ÞÞ &
.
ÞÞ& '
Current
ÞÞ' .
.
ÞÞ. /"
PlaylistsNeedRefresh
ÞÞ/ C
=
ÞÞD E
true
ÞÞF J
;
ÞÞJ K
}
ßß 
}
àà 

GlobalData
ââ 
.
ââ 
Current
ââ &
.
ââ& '

SaveConfig
ââ' 1
(
ââ1 2
)
ââ2 3
;
ââ3 4
Global
ãã 
.
ãã 
Application
ãã &
.
ãã& '
ShowSnackbar
ãã' 3
(
ãã3 4
Localization
ãã4 @
.
ãã@ A
Ready
ããA F
)
ããF G
;
ããG H
}
ää 
}
åå 
else
ææ 
if
ææ 
(
ææ 
item
ææ 
==
ææ 
Localization
ææ )
.
ææ) *
TrackMenuQueue
ææ* 8
)
ææ8 9
{
çç 
if
èè 
(
èè 

GlobalData
èè 
.
èè 
Current
èè &
.
èè& '
CurrentPlaylist
èè' 6
.
èè6 7
Count
èè7 <
>
èè= >
$num
èè? @
)
èè@ A
{
éé 
if
êê 
(
êê 

GlobalData
êê "
.
êê" #
Current
êê# *
.
êê* +
QueuePosition
êê+ 8
<
êê9 :

GlobalData
êê; E
.
êêE F
Current
êêF M
.
êêM N
PlaylistPosition
êêN ^
||
êê_ a

GlobalData
êêb l
.
êêl m
Current
êêm t
.
êêt u
QueuePositionêêu 
>êê 

GlobalDataêê 
.êê 
Currentêê 
.êê 
CurrentPlaylistêê §
.êê§ ¨
Countêê¨ ­
)êê­ ®
{
ëë 

GlobalData
ìì "
.
ìì" #
Current
ìì# *
.
ìì* +
QueuePosition
ìì+ 8
=
ìì9 :

GlobalData
ìì; E
.
ììE F
Current
ììF M
.
ììM N
PlaylistPosition
ììN ^
;
ìì^ _
}
íí 

GlobalData
ïï 
.
ïï 
Current
ïï &
.
ïï& '
CurrentPlaylist
ïï' 6
.
ïï6 7
Insert
ïï7 =
(
ïï= >

GlobalData
ïï> H
.
ïïH I
Current
ïïI P
.
ïïP Q
QueuePosition
ïïQ ^
+
ïï_ `
$num
ïïa b
,
ïïb c
filePath
ïïd l
.
ïïl m
Length
ïïm s
==
ïït v
$num
ïïw y
?
ïïz {

GlobalDataïï| 
.ïï 
Currentïï 
.ïï 
SavedTracksïï 
[ïï 
filePathïï £
]ïï£ ¤
:ïï¥ ¦

GlobalDataïï§ ±
.ïï± ²
Currentïï² ¹
.ïï¹ º
Audiosïïº À
[ïïÀ Á
filePathïïÁ É
]ïïÉ Ê
)ïïÊ Ë
;ïïË Ì

GlobalData
ðð 
.
ðð 
Current
ðð &
.
ðð& '
QueuePosition
ðð' 4
++
ðð4 6
;
ðð6 7
Global
ññ 
.
ññ 
Application
ññ &
.
ññ& '
ShowSnackbar
ññ' 3
(
ññ3 4
Localization
ññ4 @
.
ññ@ A

SnackQueue
ññA K
)
ññK L
;
ññL M
}
òò 
}
óó 
else
ôô 
if
ôô 
(
ôô 
item
ôô 
==
ôô 
Localization
ôô (
.
ôô( )
Download
ôô) 1
)
ôô1 2
{
õõ  
DownloadProcessing
öö "
.
öö" #
Add
öö# &
(
öö& '
filePath
öö' /
,
öö/ 0
track
öö1 6
.
öö6 7
Title
öö7 <
,
öö< =
$str
öö> @
,
öö@ A
$str
ööB D
)
ööD E
;
ööE F
Global
÷÷ 
.
÷÷ 
Application
÷÷ "
.
÷÷" #
ShowSnackbar
÷÷# /
(
÷÷/ 0
Localization
÷÷0 <
.
÷÷< =
Ready
÷÷= B
)
÷÷B C
;
÷÷C D
}
øø 
}
ùù 	
private
úú 
static
úú 
async
úú 
Task
úú !
PlaylistAction
úú" 0
(
úú0 1
View
úú1 5
sender
úú6 <
,
úú< =
string
úú> D
playlistName
úúE Q
,
úúQ R
string
úúS Y
item
úúZ ^
)
úú^ _
{
ûû 	
if
üü 
(
üü 
item
üü 
==
üü 
Localization
üü $
.
üü$ %
PlaylistPlay
üü% 1
)
üü1 2
{
ýý 
if
þþ 
(
þþ 

GlobalData
þþ 
.
þþ 
Current
þþ &
.
þþ& '
	Playlists
þþ' 0
[
þþ0 1
playlistName
þþ1 =
]
þþ= >
.
þþ> ?
Count
þþ? D
>
þþE F
$num
þþG H
)
þþH I
{
ÿÿ 

GlobalData
 
.
 
Current
 &
.
& '
MediaPlayer
' 2
.
2 3
LoadPlaylist
3 ?
(
? @

GlobalData
@ J
.
J K
Current
K R
.
R S
	Playlists
S \
[
\ ]
playlistName
] i
]
i j
,
j k
$num
l m
,
m n
true
o s
,
s t
true
u y
)
y z
;
z {
}
 
}
 
else
 
if
 
(
 
item
 
==
 
Localization
 )
.
) *
TrackMenuPlaylist
* ;
)
; <
{
 
Page
 
page
 
=
 
UI
 
.
 
Global
 %
.
% &
Page
& *
;
* +
List
 
<
 
string
 
>
 
	positions
 &
=
' (
new
) ,
List
- 1
<
1 2
string
2 8
>
8 9
(
9 :
)
: ;
{
 
Localization
  
.
  !
NewPlaylist
! ,
}
 
;
 
foreach
 
(
 
string
 
playlist
  (
in
) +

GlobalData
, 6
.
6 7
Current
7 >
.
> ?
	Playlists
? H
.
H I
Keys
I M
)
M N
	positions
 
.
 
Add
 !
(
! "
playlist
" *
)
* +
;
+ ,
string
 
answer
 
=
 
await
  %
page
& *
.
* + 
DisplayActionSheet
+ =
(
= >
Localization
> J
.
J K
ChoosePlaylist
K Y
,
Y Z
Localization
[ g
.
g h
Cancel
h n
,
n o
null
p t
,
t u
	positions
v 
. 
ToArray 
( 
) 
) 
; 
if
 
(
 
answer
 
==
 
Localization
 *
.
* +
NewPlaylist
+ 6
)
6 7
{
 
string
 
playlist
 #
=
$ %
await
& +
page
, 0
.
0 1 
DisplayPromptAsync
1 C
(
C D
Localization
D P
.
P Q
NewPlaylist
Q \
,
\ ]
Localization
^ j
.
j k
NewPlaylistHint
k z
,
z {
Localization| 
. 
Add 
, 
Localization 
. 
Cancel ¡
,¡ ¢
Localization£ ¯
.¯ °
Playlist° ¸
,¸ ¹
-º »
$num» ¼
,¼ ½
null¾ Â
,Â Ã
LocalizationÄ Ð
.Ð Ñ
NewPlaylistÑ Ü
)Ü Ý
;Ý Þ
if
 
(
 
!
 
string
 
.
  
IsNullOrEmpty
  -
(
- .
playlist
. 6
)
6 7
)
7 8
{
 
foreach
 
(
  !
var
! $
playlistItem
% 1
in
2 4

GlobalData
5 ?
.
? @
Current
@ G
.
G H
	Playlists
H Q
[
Q R
playlistName
R ^
]
^ _
)
_ `
{
 
if
 
(
  

GlobalData
  *
.
* +
Current
+ 2
.
2 3
	Playlists
3 <
.
< =
ContainsKey
= H
(
H I
playlist
I Q
)
Q R
)
R S

GlobalData
  *
.
* +
Current
+ 2
.
2 3
	Playlists
3 <
[
< =
playlist
= E
]
E F
.
F G
Add
G J
(
J K
playlistItem
K W
)
W X
;
X Y
else
  

GlobalData
  *
.
* +
Current
+ 2
.
2 3
	Playlists
3 <
.
< =
Add
= @
(
@ A
playlist
A I
,
I J
new
K N
List
O S
<
S T
string
T Z
>
Z [
(
[ \
)
\ ]
{
^ _
playlistItem
` l
}
m n
)
n o
;
o p
}
 

GlobalData
 "
.
" #
Current
# *
.
* +

SaveConfig
+ 5
(
5 6
)
6 7
;
7 8
Global
   
.
   
Application
   *
.
  * +
ShowSnackbar
  + 7
(
  7 8
Localization
  8 D
.
  D E
SnackPlaylist
  E R
)
  R S
;
  S T
}
¡¡ 
}
¢¢ 
else
££ 
if
££ 
(
££ 

GlobalData
££ #
.
££# $
Current
££$ +
.
££+ ,
	Playlists
££, 5
.
££5 6
ContainsKey
££6 A
(
££A B
answer
££B H
)
££H I
)
££I J
{
¤¤ 
foreach
¥¥ 
(
¥¥ 
var
¥¥  
playlistItem
¥¥! -
in
¥¥. 0

GlobalData
¥¥1 ;
.
¥¥; <
Current
¥¥< C
.
¥¥C D
	Playlists
¥¥D M
[
¥¥M N
playlistName
¥¥N Z
]
¥¥Z [
)
¥¥[ \
{
¦¦ 
if
§§ 
(
§§ 
!
§§ 

GlobalData
§§ '
.
§§' (
Current
§§( /
.
§§/ 0
	Playlists
§§0 9
[
§§9 :
answer
§§: @
]
§§@ A
.
§§A B
Contains
§§B J
(
§§J K
playlistItem
§§K W
)
§§W X
)
§§X Y

GlobalData
¨¨ &
.
¨¨& '
Current
¨¨' .
.
¨¨. /
	Playlists
¨¨/ 8
[
¨¨8 9
answer
¨¨9 ?
]
¨¨? @
.
¨¨@ A
Add
¨¨A D
(
¨¨D E
playlistItem
¨¨E Q
)
¨¨Q R
;
¨¨R S
}
©© 

GlobalData
«« 
.
«« 
Current
«« &
.
««& '

SaveConfig
««' 1
(
««1 2
)
««2 3
;
««3 4
Global
¬¬ 
.
¬¬ 
Application
¬¬ &
.
¬¬& '
ShowSnackbar
¬¬' 3
(
¬¬3 4
Localization
¬¬4 @
.
¬¬@ A
SnackPlaylist
¬¬A N
)
¬¬N O
;
¬¬O P
}
­­ 

GlobalData
¯¯ 
.
¯¯ 
Current
¯¯ "
.
¯¯" #"
PlaylistsNeedRefresh
¯¯# 7
=
¯¯8 9
true
¯¯: >
;
¯¯> ?
if
°° 
(
°° 
!
°° 
Global
°° 
.
°° 
TV
°° 
)
°° 
{
±± 
(
²² 
sender
²² 
as
²² 
PlaylistGridItem
²² /
)
²²/ 0
.
²²0 1
Page
²²1 5
.
²²5 6
Init
²²6 :
(
²²: ;
)
²²; <
;
²²< =
}
³³ 
}
´´ 
if
µµ 
(
µµ 
item
µµ 
==
µµ 
Localization
µµ $
.
µµ$ %

ChangeName
µµ% /
)
µµ/ 0
{
¶¶ 
string
·· 
answer
·· 
=
·· 
await
··  %
Global
··& ,
.
··, -
Page
··- 1
.
··1 2 
DisplayPromptAsync
··2 D
(
··D E
Localization
··E Q
.
··Q R

ChangeName
··R \
,
··\ ]
Localization
··^ j
.
··j k
NewPlaylistHint
··k z
,
··z {
$str··| 
,·· 
Localization·· 
.·· 
Cancel·· 
,·· 
Localization·· £
.··£ ¤
NewPlaylistHint··¤ ³
,··³ ´
-··µ ¶
$num··¶ ·
,··· ¸
null··¹ ½
,··½ ¾
playlistName··¿ Ë
)··Ë Ì
;··Ì Í
if
¸¸ 
(
¸¸ 
!
¸¸ 
string
¸¸ 
.
¸¸ 
IsNullOrEmpty
¸¸ )
(
¸¸) *
answer
¸¸* 0
)
¸¸0 1
)
¸¸1 2
{
¹¹ 
if
ºº 
(
ºº 

GlobalData
ºº "
.
ºº" #
Current
ºº# *
.
ºº* +
	Playlists
ºº+ 4
.
ºº4 5
ContainsKey
ºº5 @
(
ºº@ A
answer
ººA G
)
ººG H
)
ººH I
Global
»» 
.
»» 
Application
»» *
.
»»* +
ShowSnackbar
»»+ 7
(
»»7 8
Localization
»»8 D
.
»»D E
PlaylistExists
»»E S
)
»»S T
;
»»T U
else
¼¼ 
{
½½ 

GlobalData
¾¾ "
.
¾¾" #
Current
¾¾# *
.
¾¾* +
	Playlists
¾¾+ 4
.
¾¾4 5
Add
¾¾5 8
(
¾¾8 9
answer
¾¾9 ?
,
¾¾? @
new
¾¾A D
List
¾¾E I
<
¾¾I J
string
¾¾J P
>
¾¾P Q
(
¾¾Q R

GlobalData
¾¾R \
.
¾¾\ ]
Current
¾¾] d
.
¾¾d e
	Playlists
¾¾e n
[
¾¾n o
playlistName
¾¾o {
]
¾¾{ |
)
¾¾| }
)
¾¾} ~
;
¾¾~ 

GlobalData
¿¿ "
.
¿¿" #
Current
¿¿# *
.
¿¿* +
	Playlists
¿¿+ 4
.
¿¿4 5
Remove
¿¿5 ;
(
¿¿; <
playlistName
¿¿< H
)
¿¿H I
;
¿¿I J
if
ÁÁ 
(
ÁÁ 

GlobalData
ÁÁ &
.
ÁÁ& '
Current
ÁÁ' .
.
ÁÁ. /!
WebToLocalPlaylists
ÁÁ/ B
.
ÁÁB C
ContainsValue
ÁÁC P
(
ÁÁP Q
playlistName
ÁÁQ ]
)
ÁÁ] ^
)
ÁÁ^ _
{
ÂÂ 
var
ÃÃ 
key
ÃÃ  #
=
ÃÃ$ %

GlobalData
ÃÃ& 0
.
ÃÃ0 1
Current
ÃÃ1 8
.
ÃÃ8 9!
WebToLocalPlaylists
ÃÃ9 L
.
ÃÃL M
First
ÃÃM R
(
ÃÃR S
keyPair
ÃÃS Z
=>
ÃÃ[ ]
keyPair
ÃÃ^ e
.
ÃÃe f
Value
ÃÃf k
==
ÃÃl n
playlistName
ÃÃo {
)
ÃÃ{ |
.
ÃÃ| }
KeyÃÃ} 
;ÃÃ 
if
ÅÅ 
(
ÅÅ  

GlobalData
ÅÅ  *
.
ÅÅ* +
Current
ÅÅ+ 2
.
ÅÅ2 3!
WebToLocalPlaylists
ÅÅ3 F
.
ÅÅF G
ContainsKey
ÅÅG R
(
ÅÅR S
key
ÅÅS V
)
ÅÅV W
)
ÅÅW X

GlobalData
ÆÆ  *
.
ÆÆ* +
Current
ÆÆ+ 2
.
ÆÆ2 3!
WebToLocalPlaylists
ÆÆ3 F
[
ÆÆF G
key
ÆÆG J
]
ÆÆJ K
=
ÆÆL M
answer
ÆÆN T
;
ÆÆT U
}
ÈÈ 

GlobalData
ÉÉ "
.
ÉÉ" #
Current
ÉÉ# *
.
ÉÉ* +

SaveConfig
ÉÉ+ 5
(
ÉÉ5 6
)
ÉÉ6 7
;
ÉÉ7 8

GlobalData
ÊÊ "
.
ÊÊ" #
Current
ÊÊ# *
.
ÊÊ* +"
PlaylistsNeedRefresh
ÊÊ+ ?
=
ÊÊ@ A
true
ÊÊB F
;
ÊÊF G
if
ËË 
(
ËË 
!
ËË 
Global
ËË #
.
ËË# $
TV
ËË$ &
)
ËË& '
{
ÌÌ 
(
ÍÍ 
sender
ÍÍ #
as
ÍÍ$ &
PlaylistGridItem
ÍÍ' 7
)
ÍÍ7 8
.
ÍÍ8 9
Page
ÍÍ9 =
.
ÍÍ= >
Init
ÍÍ> B
(
ÍÍB C
)
ÍÍC D
;
ÍÍD E
}
ÎÎ 
Global
ÏÏ 
.
ÏÏ 
Application
ÏÏ *
.
ÏÏ* +
ShowSnackbar
ÏÏ+ 7
(
ÏÏ7 8
Localization
ÏÏ8 D
.
ÏÏD E
Ready
ÏÏE J
)
ÏÏJ K
;
ÏÏK L
}
ÐÐ 
}
ÑÑ 
}
ÒÒ 
else
ÓÓ 
if
ÓÓ 
(
ÓÓ 
item
ÓÓ 
==
ÓÓ 
Localization
ÓÓ )
.
ÓÓ) *
TrackMenuDelete
ÓÓ* 9
)
ÓÓ9 :
{
ÔÔ 
bool
ÕÕ 
answer
ÕÕ 
=
ÕÕ 
await
ÕÕ #
Global
ÕÕ$ *
.
ÕÕ* +
Page
ÕÕ+ /
.
ÕÕ/ 0
DisplayAlert
ÕÕ0 <
(
ÕÕ< =
Localization
ÕÕ= I
.
ÕÕI J
Question
ÕÕJ R
,
ÕÕR S
Localization
ÕÕT `
.
ÕÕ` a$
QuestionDeletePlaylist
ÕÕa w
+
ÕÕx y
$str
ÕÕz }
+
ÕÕ~ 
playlistNameÕÕ 
+ÕÕ 
$strÕÕ 
,ÕÕ 
LocalizationÕÕ  
.ÕÕ  ¡
YesÕÕ¡ ¤
,ÕÕ¤ ¥
LocalizationÕÕ¦ ²
.ÕÕ² ³
NoÕÕ³ µ
)ÕÕµ ¶
;ÕÕ¶ ·
if
×× 
(
×× 
answer
×× 
)
×× 
{
ØØ 

GlobalData
ÙÙ 
.
ÙÙ 
Current
ÙÙ &
.
ÙÙ& '
	Playlists
ÙÙ' 0
.
ÙÙ0 1
Remove
ÙÙ1 7
(
ÙÙ7 8
playlistName
ÙÙ8 D
)
ÙÙD E
;
ÙÙE F
if
ÛÛ 
(
ÛÛ 

GlobalData
ÛÛ "
.
ÛÛ" #
Current
ÛÛ# *
.
ÛÛ* +!
WebToLocalPlaylists
ÛÛ+ >
.
ÛÛ> ?
ContainsValue
ÛÛ? L
(
ÛÛL M
playlistName
ÛÛM Y
)
ÛÛY Z
)
ÛÛZ [
{
ÜÜ 
var
ÝÝ 
key
ÝÝ 
=
ÝÝ  !

GlobalData
ÝÝ" ,
.
ÝÝ, -
Current
ÝÝ- 4
.
ÝÝ4 5!
WebToLocalPlaylists
ÝÝ5 H
.
ÝÝH I
First
ÝÝI N
(
ÝÝN O
keyPair
ÝÝO V
=>
ÝÝW Y
keyPair
ÝÝZ a
.
ÝÝa b
Value
ÝÝb g
==
ÝÝh j
playlistName
ÝÝk w
)
ÝÝw x
.
ÝÝx y
Key
ÝÝy |
;
ÝÝ| }
if
ßß 
(
ßß 

GlobalData
ßß &
.
ßß& '
Current
ßß' .
.
ßß. /!
WebToLocalPlaylists
ßß/ B
.
ßßB C
ContainsKey
ßßC N
(
ßßN O
key
ßßO R
)
ßßR S
)
ßßS T

GlobalData
àà &
.
àà& '
Current
àà' .
.
àà. /!
WebToLocalPlaylists
àà/ B
.
ààB C
Remove
ààC I
(
ààI J
key
ààJ M
)
ààM N
;
ààN O
}
ââ 

GlobalData
ää 
.
ää 
Current
ää &
.
ää& '

SaveConfig
ää' 1
(
ää1 2
)
ää2 3
;
ää3 4
Global
åå 
.
åå 
Application
åå &
.
åå& '
ShowSnackbar
åå' 3
(
åå3 4
Localization
åå4 @
.
åå@ A
Ready
ååA F
)
ååF G
;
ååG H

GlobalData
ææ 
.
ææ 
Current
ææ &
.
ææ& '"
PlaylistsNeedRefresh
ææ' ;
=
ææ< =
true
ææ> B
;
ææB C
if
çç 
(
çç 
!
çç 
Global
çç 
.
çç 
TV
çç !
)
çç! "
{
èè 
(
éé 
sender
éé 
as
éé  "
PlaylistGridItem
éé# 3
)
éé3 4
.
éé4 5
Page
éé5 9
.
éé9 :
Init
éé: >
(
éé> ?
)
éé? @
;
éé@ A
}
êê 
}
ëë 
}
ìì 
else
íí 
if
íí 
(
íí 
item
íí 
==
íí 
Localization
íí )
.
íí) *
TrackMenuQueue
íí* 8
)
íí8 9
{
îî 
if
ïï 
(
ïï 

GlobalData
ïï 
.
ïï 
Current
ïï &
.
ïï& '
CurrentPlaylist
ïï' 6
.
ïï6 7
Count
ïï7 <
>
ïï= >
$num
ïï? @
)
ïï@ A
{
ðð 
foreach
ññ 
(
ññ 
var
ññ  
playlistTrack
ññ! .
in
ññ/ 1

GlobalData
ññ2 <
.
ññ< =
Current
ññ= D
.
ññD E
	Playlists
ññE N
[
ññN O
playlistName
ññO [
]
ññ[ \
)
ññ\ ]
{
òò 
if
óó 
(
óó 

GlobalData
óó &
.
óó& '
Current
óó' .
.
óó. /
Audios
óó/ 5
.
óó5 6
ContainsKey
óó6 A
(
óóA B
playlistTrack
óóB O
)
óóO P
)
óóP Q
{
ôô 
if
õõ 
(
õõ  

GlobalData
õõ  *
.
õõ* +
Current
õõ+ 2
.
õõ2 3
QueuePosition
õõ3 @
<
õõA B

GlobalData
õõC M
.
õõM N
Current
õõN U
.
õõU V
PlaylistPosition
õõV f
||
õõg i

GlobalData
õõj t
.
õõt u
Current
õõu |
.
õõ| }
QueuePositionõõ} 
>õõ 

GlobalDataõõ 
.õõ 
Currentõõ 
.õõ  
CurrentPlaylistõõ  ¯
.õõ¯ °
Countõõ° µ
)õõµ ¶
{
öö 

GlobalData
÷÷  *
.
÷÷* +
Current
÷÷+ 2
.
÷÷2 3
QueuePosition
÷÷3 @
=
÷÷A B

GlobalData
÷÷C M
.
÷÷M N
Current
÷÷N U
.
÷÷U V
PlaylistPosition
÷÷V f
;
÷÷f g
}
øø 

GlobalData
úú &
.
úú& '
Current
úú' .
.
úú. /
CurrentPlaylist
úú/ >
.
úú> ?
Insert
úú? E
(
úúE F

GlobalData
úúF P
.
úúP Q
Current
úúQ X
.
úúX Y
QueuePosition
úúY f
+
úúg h
$num
úúi j
,
úúj k

GlobalData
úúl v
.
úúv w
Current
úúw ~
.
úú~ 
Audiosúú 
[úú 
playlistTrackúú 
]úú 
)úú 
;úú 

GlobalData
ûû &
.
ûû& '
Current
ûû' .
.
ûû. /
QueuePosition
ûû/ <
++
ûû< >
;
ûû> ?
}
üü 
}
ýý 
Global
þþ 
.
þþ 
Application
þþ &
.
þþ& '
ShowSnackbar
þþ' 3
(
þþ3 4
Localization
þþ4 @
.
þþ@ A

SnackQueue
þþA K
)
þþK L
;
þþL M
}
ÿÿ 
}
 
}
 	
private
 
static
 
async
 
Task
 !
ArtistAction
" .
(
. /
View
/ 3
sender
4 :
,
: ;
string
< B

artistName
C M
,
M N
string
O U
item
V Z
)
Z [
{
 	
if
 
(
 
item
 
==
 
Localization
 $
.
$ %
PlaylistPlay
% 1
)
1 2
{
 
if
 
(
 

GlobalData
 
.
 
Current
 &
.
& '
Artists
' .
[
. /

artistName
/ 9
]
9 :
.
: ;
Count
; @
>
A B
$num
C D
)
D E
{
 

GlobalData
 
.
 
Current
 &
.
& '
MediaPlayer
' 2
.
2 3
LoadPlaylist
3 ?
(
? @

GlobalData
@ J
.
J K
Current
K R
.
R S
Artists
S Z
[
Z [

artistName
[ e
]
e f
,
f g
$num
h i
,
i j
true
k o
,
o p
true
q u
)
u v
;
v w
}
 
}
 
else
 
if
 
(
 
item
 
==
 
Localization
 )
.
) *
TrackMenuPlaylist
* ;
)
; <
{
 
Page
 
page
 
=
 
Global
 "
.
" #
Page
# '
;
' (
List
 
<
 
string
 
>
 
	positions
 &
=
' (
new
) ,
List
- 1
<
1 2
string
2 8
>
8 9
(
9 :
)
: ;
{
 
Localization
  
.
  !
NewPlaylist
! ,
}
 
;
 
foreach
 
(
 
string
 
playlist
  (
in
) +

GlobalData
, 6
.
6 7
Current
7 >
.
> ?
	Playlists
? H
.
H I
Keys
I M
)
M N
	positions
 
.
 
Add
 !
(
! "
playlist
" *
)
* +
;
+ ,
string
 
answer
 
=
 
await
  %
page
& *
.
* + 
DisplayActionSheet
+ =
(
= >
Localization
> J
.
J K
ChoosePlaylist
K Y
,
Y Z
Localization
[ g
.
g h
Cancel
h n
,
n o
null
p t
,
t u
	positions
v 
. 
ToArray 
( 
) 
) 
; 
if
 
(
 
answer
 
==
 
Localization
 *
.
* +
NewPlaylist
+ 6
)
6 7
{
 
string
 
playlist
 #
=
$ %
await
& +
page
, 0
.
0 1 
DisplayPromptAsync
1 C
(
C D
Localization
D P
.
P Q
NewPlaylist
Q \
,
\ ]
Localization
^ j
.
j k
NewPlaylistHint
k z
,
z {
Localization| 
. 
Add 
, 
Localization 
. 
Cancel ¡
,¡ ¢
Localization£ ¯
.¯ °
Playlist° ¸
,¸ ¹
-º »
$num» ¼
,¼ ½
null¾ Â
,Â Ã
LocalizationÄ Ð
.Ð Ñ
NewPlaylistÑ Ü
)Ü Ý
;Ý Þ
if
 
(
 
!
 
string
 
.
  
IsNullOrEmpty
  -
(
- .
playlist
. 6
)
6 7
)
7 8
{
 
foreach
 
(
  !
var
! $
playlistItem
% 1
in
2 4

GlobalData
5 ?
.
? @
Current
@ G
.
G H
Artists
H O
[
O P

artistName
P Z
]
Z [
)
[ \
{
 
if
   
(
    

GlobalData
    *
.
  * +
Current
  + 2
.
  2 3
	Playlists
  3 <
.
  < =
ContainsKey
  = H
(
  H I
playlist
  I Q
)
  Q R
)
  R S

GlobalData
¡¡  *
.
¡¡* +
Current
¡¡+ 2
.
¡¡2 3
	Playlists
¡¡3 <
[
¡¡< =
playlist
¡¡= E
]
¡¡E F
.
¡¡F G
Add
¡¡G J
(
¡¡J K
playlistItem
¡¡K W
)
¡¡W X
;
¡¡X Y
else
¢¢  

GlobalData
££  *
.
££* +
Current
££+ 2
.
££2 3
	Playlists
££3 <
.
££< =
Add
££= @
(
££@ A
playlist
££A I
,
££I J
new
££K N
List
££O S
<
££S T
string
££T Z
>
££Z [
(
££[ \
)
££\ ]
{
££^ _
playlistItem
££` l
}
££m n
)
££n o
;
££o p
}
¤¤ 

GlobalData
¦¦ "
.
¦¦" #
Current
¦¦# *
.
¦¦* +

SaveConfig
¦¦+ 5
(
¦¦5 6
)
¦¦6 7
;
¦¦7 8
Global
¨¨ 
.
¨¨ 
Application
¨¨ *
.
¨¨* +
ShowSnackbar
¨¨+ 7
(
¨¨7 8
Localization
¨¨8 D
.
¨¨D E
SnackPlaylist
¨¨E R
)
¨¨R S
;
¨¨S T
}
©© 
}
ªª 
else
«« 
if
«« 
(
«« 

GlobalData
«« #
.
««# $
Current
««$ +
.
««+ ,
	Playlists
««, 5
.
««5 6
ContainsKey
««6 A
(
««A B
answer
««B H
)
««H I
)
««I J
{
¬¬ 
foreach
­­ 
(
­­ 
var
­­  
playlistItem
­­! -
in
­­. 0

GlobalData
­­1 ;
.
­­; <
Current
­­< C
.
­­C D
Artists
­­D K
[
­­K L

artistName
­­L V
]
­­V W
)
­­W X
{
®® 
if
¯¯ 
(
¯¯ 
!
¯¯ 

GlobalData
¯¯ '
.
¯¯' (
Current
¯¯( /
.
¯¯/ 0
	Playlists
¯¯0 9
[
¯¯9 :
answer
¯¯: @
]
¯¯@ A
.
¯¯A B
Contains
¯¯B J
(
¯¯J K
playlistItem
¯¯K W
)
¯¯W X
)
¯¯X Y

GlobalData
°° &
.
°°& '
Current
°°' .
.
°°. /
	Playlists
°°/ 8
[
°°8 9
answer
°°9 ?
]
°°? @
.
°°@ A
Add
°°A D
(
°°D E
playlistItem
°°E Q
)
°°Q R
;
°°R S
}
±± 

GlobalData
´´ 
.
´´ 
Current
´´ &
.
´´& '

SaveConfig
´´' 1
(
´´1 2
)
´´2 3
;
´´3 4
}
µµ 
if
·· 
(
·· 
!
·· 
Global
·· 
.
·· 
TV
·· 
)
·· 
{
¸¸ 
(
¹¹ 
sender
¹¹ 
as
¹¹ 
ArtistGridItem
¹¹ -
)
¹¹- .
.
¹¹. /
Page
¹¹/ 3
.
¹¹3 4
Init
¹¹4 8
(
¹¹8 9
)
¹¹9 :
;
¹¹: ;
}
ºº 
}
»» 
else
¼¼ 
if
¼¼ 
(
¼¼ 
item
¼¼ 
==
¼¼ 
Localization
¼¼ )
.
¼¼) *
TrackMenuQueue
¼¼* 8
)
¼¼8 9
{
½½ 
if
¾¾ 
(
¾¾ 

GlobalData
¾¾ 
.
¾¾ 
Current
¾¾ &
.
¾¾& '
CurrentPlaylist
¾¾' 6
.
¾¾6 7
Count
¾¾7 <
>
¾¾= >
$num
¾¾? @
)
¾¾@ A
{
¿¿ 
foreach
ÀÀ 
(
ÀÀ 
var
ÀÀ  
artistTrack
ÀÀ! ,
in
ÀÀ- /

GlobalData
ÀÀ0 :
.
ÀÀ: ;
Current
ÀÀ; B
.
ÀÀB C
Artists
ÀÀC J
[
ÀÀJ K

artistName
ÀÀK U
]
ÀÀU V
)
ÀÀV W
{
ÁÁ 
if
ÂÂ 
(
ÂÂ 

GlobalData
ÂÂ &
.
ÂÂ& '
Current
ÂÂ' .
.
ÂÂ. /
Audios
ÂÂ/ 5
.
ÂÂ5 6
ContainsKey
ÂÂ6 A
(
ÂÂA B
artistTrack
ÂÂB M
)
ÂÂM N
)
ÂÂN O
{
ÃÃ 
if
ÄÄ 
(
ÄÄ  

GlobalData
ÄÄ  *
.
ÄÄ* +
Current
ÄÄ+ 2
.
ÄÄ2 3
QueuePosition
ÄÄ3 @
<
ÄÄA B

GlobalData
ÄÄC M
.
ÄÄM N
Current
ÄÄN U
.
ÄÄU V
PlaylistPosition
ÄÄV f
||
ÄÄg i

GlobalData
ÄÄj t
.
ÄÄt u
Current
ÄÄu |
.
ÄÄ| }
QueuePositionÄÄ} 
>ÄÄ 

GlobalDataÄÄ 
.ÄÄ 
CurrentÄÄ 
.ÄÄ  
CurrentPlaylistÄÄ  ¯
.ÄÄ¯ °
CountÄÄ° µ
)ÄÄµ ¶
{
ÅÅ 

GlobalData
ÆÆ  *
.
ÆÆ* +
Current
ÆÆ+ 2
.
ÆÆ2 3
QueuePosition
ÆÆ3 @
=
ÆÆA B

GlobalData
ÆÆC M
.
ÆÆM N
Current
ÆÆN U
.
ÆÆU V
PlaylistPosition
ÆÆV f
;
ÆÆf g
}
ÇÇ 

GlobalData
ÉÉ &
.
ÉÉ& '
Current
ÉÉ' .
.
ÉÉ. /
CurrentPlaylist
ÉÉ/ >
.
ÉÉ> ?
Insert
ÉÉ? E
(
ÉÉE F

GlobalData
ÉÉF P
.
ÉÉP Q
Current
ÉÉQ X
.
ÉÉX Y
QueuePosition
ÉÉY f
+
ÉÉg h
$num
ÉÉi j
,
ÉÉj k

GlobalData
ÉÉl v
.
ÉÉv w
Current
ÉÉw ~
.
ÉÉ~ 
AudiosÉÉ 
[ÉÉ 
artistTrackÉÉ 
]ÉÉ 
)ÉÉ 
;ÉÉ 

GlobalData
ÊÊ &
.
ÊÊ& '
Current
ÊÊ' .
.
ÊÊ. /
QueuePosition
ÊÊ/ <
++
ÊÊ< >
;
ÊÊ> ?
}
ËË 
}
ÌÌ 
}
ÍÍ 
}
ÎÎ 
}
ÏÏ 	
private
ÐÐ 
static
ÐÐ 
async
ÐÐ 
Task
ÐÐ ! 
SearchResultAction
ÐÐ" 4
(
ÐÐ4 5
View
ÐÐ5 9
sender
ÐÐ: @
,
ÐÐ@ A
string
ÐÐB H
tag
ÐÐI L
,
ÐÐL M
string
ÐÐN T
item
ÐÐU Y
)
ÐÐY Z
{
ÑÑ 	
Page
ÒÒ 
page
ÒÒ 
=
ÒÒ 
Global
ÒÒ 
.
ÒÒ 
Page
ÒÒ #
;
ÒÒ# $
if
ÔÔ 
(
ÔÔ 
item
ÔÔ 
==
ÔÔ 
Localization
ÔÔ $
.
ÔÔ$ %
Download
ÔÔ% -
)
ÔÔ- .
{
ÕÕ 
string
ÖÖ 
[
ÖÖ 
]
ÖÖ 
elems
ÖÖ 
=
ÖÖ  
tag
ÖÖ! $
.
ÖÖ$ %
Split
ÖÖ% *
(
ÖÖ* +

GlobalData
ÖÖ+ 5
.
ÖÖ5 6
	SEPARATOR
ÖÖ6 ?
)
ÖÖ? @
;
ÖÖ@ A
YoutubeClient
×× 
client
×× $
=
××% &
new
××' *
YoutubeClient
××+ 8
(
××8 9
)
××9 :
;
××: ;
string
ØØ 

playlistId
ØØ !
=
ØØ" #
$str
ØØ$ &
;
ØØ& '
string
ÙÙ 
playlistName
ÙÙ #
=
ÙÙ$ %
$str
ÙÙ& (
;
ÙÙ( )
var
ÚÚ 
urlType
ÚÚ 
=
ÚÚ 
SearchProcessing
ÚÚ .
.
ÚÚ. /
	CheckLink
ÚÚ/ 8
(
ÚÚ8 9
elems
ÚÚ9 >
[
ÚÚ> ?
$num
ÚÚ? @
]
ÚÚ@ A
)
ÚÚA B
;
ÚÚB C
if
ÜÜ 
(
ÜÜ 
urlType
ÜÜ 
.
ÜÜ 
ContainsKey
ÜÜ '
(
ÜÜ' (
SearchProcessing
ÜÜ( 8
.
ÜÜ8 9
Query
ÜÜ9 >
.
ÜÜ> ?
Playlist
ÜÜ? G
)
ÜÜG H
)
ÜÜH I
{
ÝÝ 
if
ÞÞ 
(
ÞÞ 
urlType
ÞÞ 
.
ÞÞ  
ContainsKey
ÞÞ  +
(
ÞÞ+ ,
SearchProcessing
ÞÞ, <
.
ÞÞ< =
Query
ÞÞ= B
.
ÞÞB C
Video
ÞÞC H
)
ÞÞH I
)
ÞÞI J
{
ßß 
if
àà 
(
àà 
await
àà !
Global
àà" (
.
àà( )
Page
àà) -
.
àà- .
DisplayAlert
àà. :
(
àà: ;
Localization
àà; G
.
ààG H
Question
ààH P
,
ààP Q
Localization
ààR ^
.
àà^ _
PlaylistOrTrack
àà_ n
,
ààn o
Localization
ààp |
.
àà| }
Trackàà} 
,àà 
Localizationàà 
.àà 
Playlistàà 
)àà 
)àà 
{
áá 

playlistId
ââ &
=
ââ' (
$str
ââ) +
;
ââ+ ,
}
ãã 
else
ää 
{
åå 

playlistId
ææ &
=
ææ' (
urlType
ææ) 0
[
ææ0 1
SearchProcessing
ææ1 A
.
ææA B
Query
ææB G
.
ææG H
Playlist
ææH P
]
ææP Q
;
ææQ R
if
èè 
(
èè  
await
èè  %
Global
èè& ,
.
èè, -
Page
èè- 1
.
èè1 2
DisplayAlert
èè2 >
(
èè> ?
Localization
èè? K
.
èèK L
Question
èèL T
,
èèT U
Localization
èèV b
.
èèb c
PlaylistDownload
èèc s
,
èès t
Localizationèèu 
.èè 
Yesèè 
,èè 
Localizationèè 
.èè 
Noèè 
)èè 
)èè 
{
éé 
var
êê  #
playlist
êê$ ,
=
êê- .
await
êê/ 4
client
êê5 ;
.
êê; <
	Playlists
êê< E
.
êêE F
GetAsync
êêF N
(
êêN O
urlType
êêO V
[
êêV W
SearchProcessing
êêW g
.
êêg h
Query
êêh m
.
êêm n
Playlist
êên v
]
êêv w
)
êêw x
;
êêx y
string
ëë  &
newPlaylistName
ëë' 6
=
ëë7 8
await
ëë9 >
Global
ëë? E
.
ëëE F
Page
ëëF J
.
ëëJ K 
DisplayPromptAsync
ëëK ]
(
ëë] ^
Localization
ëë^ j
.
ëëj k
NewPlaylist
ëëk v
,
ëëv w
Localizationëëx 
.ëë 
NewPlaylistHintëë 
,ëë 
$strëë 
,ëë 
Localizationëë ¨
.ëë¨ ©
Cancelëë© ¯
,ëë¯ °
Localizationëë± ½
.ëë½ ¾
NewPlaylistëë¾ É
,ëëÉ Ê
-ëëË Ì
$numëëÌ Í
,ëëÍ Î
nullëëÏ Ó
,ëëÓ Ô
playlistëëÕ Ý
.ëëÝ Þ
TitleëëÞ ã
)ëëã ä
;ëëä å
playlistName
ìì  ,
=
ìì- .
string
ìì/ 5
.
ìì5 6 
IsNullOrWhiteSpace
ìì6 H
(
ììH I
newPlaylistName
ììI X
)
ììX Y
?
ììZ [
$str
ìì\ ^
:
ìì_ `
newPlaylistName
ììa p
;
ììp q
}
íí 
}
îî 
}
ïï 
}
ðð 
if
òò 
(
òò 

playlistId
òò 
==
òò !
$str
òò" $
)
òò$ %
{
óó  
DownloadProcessing
ôô &
.
ôô& '
Add
ôô' *
(
ôô* +
$str
ôô+ -
,
ôô- .
elems
ôô/ 4
[
ôô4 5
$num
ôô5 6
]
ôô6 7
,
ôô7 8
elems
ôô9 >
[
ôô> ?
$num
ôô? @
]
ôô@ A
,
ôôA B
$str
ôôC E
)
ôôE F
;
ôôF G
}
õõ 
else
öö 
{
÷÷  
DownloadProcessing
øø &
.
øø& '
AddRange
øø' /
(
øø/ 0
await
øø0 5
client
øø6 <
.
øø< =
	Playlists
øø= F
.
øøF G
GetVideosAsync
øøG U
(
øøU V

playlistId
øøV `
)
øø` a
,
øøa b
playlistName
øøc o
,
øøo p

playlistId
øøq {
)
øø{ |
;
øø| }
}
ùù 
}
úú 
else
ûû 
if
ûû 
(
ûû 
item
ûû 
==
ûû 
Localization
ûû )
.
ûû) *
TrackMenuPlaylist
ûû* ;
)
ûû; <
{
üü 
string
ýý 
[
ýý 
]
ýý 
elems
ýý 
=
ýý  
tag
ýý! $
.
ýý$ %
Split
ýý% *
(
ýý* +

GlobalData
ýý+ 5
.
ýý5 6
	SEPARATOR
ýý6 ?
)
ýý? @
;
ýý@ A
YoutubeClient
þþ 
client
þþ $
=
þþ% &
new
þþ' *
YoutubeClient
þþ+ 8
(
þþ8 9
)
þþ9 :
;
þþ: ;
var
ÿÿ 
urlType
ÿÿ 
=
ÿÿ 
SearchProcessing
ÿÿ .
.
ÿÿ. /
	CheckLink
ÿÿ/ 8
(
ÿÿ8 9
elems
ÿÿ9 >
[
ÿÿ> ?
$num
ÿÿ? @
]
ÿÿ@ A
)
ÿÿA B
;
ÿÿB C
if
 
(
 
urlType
 
.
 
ContainsKey
 '
(
' (
SearchProcessing
( 8
.
8 9
Query
9 >
.
> ?
Video
? D
)
D E
)
E F
{
 
List
 
<
 
string
 
>
  
	positions
! *
=
+ ,
new
- 0
List
1 5
<
5 6
string
6 <
>
< =
(
= >
)
> ?
{
 
Localization
 $
.
$ %
NewPlaylist
% 0
}
 
;
 
foreach
 
(
 
string
 #
playlist
$ ,
in
- /

GlobalData
0 :
.
: ;
Current
; B
.
B C
	Playlists
C L
.
L M
Keys
M Q
)
Q R
	positions
 !
.
! "
Add
" %
(
% &
playlist
& .
)
. /
;
/ 0
string
 
answer
 !
=
" #
await
$ )
page
* .
.
. / 
DisplayActionSheet
/ A
(
A B
Localization
B N
.
N O
ChoosePlaylist
O ]
,
] ^
Localization
_ k
.
k l
Cancel
l r
,
r s
null
t x
,
x y
	positionsz 
. 
ToArray 
( 
) 
) 
; 
if
 
(
 
!
 

GlobalData
 "
.
" #
Current
# *
.
* +
SavedTracks
+ 6
.
6 7
ContainsKey
7 B
(
B C
urlType
C J
[
J K
SearchProcessing
K [
.
[ \
Query
\ a
.
a b
Video
b g
]
g h
)
h i
)
i j
{
 
var
 
video
 !
=
" #
await
$ )
client
* 0
.
0 1
Videos
1 7
.
7 8
GetAsync
8 @
(
@ A
urlType
A H
[
H I
SearchProcessing
I Y
.
Y Z
Query
Z _
.
_ `
Video
` e
]
e f
)
f g
;
g h
var
 
mediaSource
 '
=
( )
new
* -
Core
. 2
.
2 3
Media
3 8
.
8 9
MediaSource
9 D
(
D E
)
E F
{
 
Artist
 "
=
# $
video
% *
.
* +
Author
+ 1
,
1 2
Duration
 $
=
% &
video
' ,
.
, -
Duration
- 5
,
5 6
FilePath
 $
=
% &
video
' ,
.
, -
Id
- /
,
/ 0
Title
 !
=
" #
video
$ )
.
) *
Title
* /
,
/ 0
Type
  
=
! "
Core
# '
.
' (
Media
( -
.
- .
MediaSource
. 9
.
9 :

SourceType
: D
.
D E
Web
E H
}
 
;
 
try
 
{
 
using
 !
	WebClient
" +
	webClient
, 5
=
6 7
new
8 ;
	WebClient
< E
(
E F
)
F G
;
G H
byte
  
[
  !
]
! "
	thumbData
# ,
=
- .
	webClient
/ 8
.
8 9
DownloadData
9 E
(
E F
video
F K
.
K L

Thumbnails
L V
.
V W
MediumResUrl
W c
)
c d
;
d e
mediaSource
 '
.
' (
Image
( -
=
. /
	thumbData
0 9
;
9 :
}
 
catch
   
{
¡¡ 
}
££ 

GlobalData
¥¥ "
.
¥¥" #
Current
¥¥# *
.
¥¥* +
SavedTracks
¥¥+ 6
.
¥¥6 7
Add
¥¥7 :
(
¥¥: ;
urlType
¥¥; B
[
¥¥B C
SearchProcessing
¥¥C S
.
¥¥S T
Query
¥¥T Y
.
¥¥Y Z
Video
¥¥Z _
]
¥¥_ `
,
¥¥` a
mediaSource
¥¥b m
)
¥¥m n
;
¥¥n o

GlobalData
¦¦ "
.
¦¦" #
Current
¦¦# *
.
¦¦* +
SaveSavedTracks
¦¦+ :
(
¦¦: ;
)
¦¦; <
;
¦¦< =
}
§§ 
if
©© 
(
©© 
answer
©© 
==
©© !
Localization
©©" .
.
©©. /
NewPlaylist
©©/ :
)
©©: ;
{
ªª 
string
«« 
playlist
«« '
=
««( )
await
««* /
page
««0 4
.
««4 5 
DisplayPromptAsync
««5 G
(
««G H
Localization
««H T
.
««T U
NewPlaylist
««U `
,
««` a
Localization
««b n
.
««n o
NewPlaylistHint
««o ~
,
««~ 
Localization«« 
.«« 
Add«« 
,«« 
Localization«« 
.«« 
Cancel«« ¥
,««¥ ¦
Localization««§ ³
.««³ ´
Playlist««´ ¼
,««¼ ½
-««¾ ¿
$num««¿ À
,««À Á
null««Â Æ
,««Æ Ç
Localization««È Ô
.««Ô Õ
NewPlaylist««Õ à
)««à á
;««á â
if
­­ 
(
­­ 
!
­­ 
string
­­ #
.
­­# $
IsNullOrEmpty
­­$ 1
(
­­1 2
playlist
­­2 :
)
­­: ;
)
­­; <
{
®® 
if
¯¯ 
(
¯¯  

GlobalData
¯¯  *
.
¯¯* +
Current
¯¯+ 2
.
¯¯2 3
	Playlists
¯¯3 <
.
¯¯< =
ContainsKey
¯¯= H
(
¯¯H I
playlist
¯¯I Q
)
¯¯Q R
)
¯¯R S

GlobalData
°°  *
.
°°* +
Current
°°+ 2
.
°°2 3
	Playlists
°°3 <
[
°°< =
playlist
°°= E
]
°°E F
.
°°F G
Add
°°G J
(
°°J K
urlType
°°K R
[
°°R S
SearchProcessing
°°S c
.
°°c d
Query
°°d i
.
°°i j
Video
°°j o
]
°°o p
)
°°p q
;
°°q r
else
±±  

GlobalData
²²  *
.
²²* +
Current
²²+ 2
.
²²2 3
	Playlists
²²3 <
.
²²< =
Add
²²= @
(
²²@ A
playlist
²²A I
,
²²I J
new
²²K N
List
²²O S
<
²²S T
string
²²T Z
>
²²Z [
(
²²[ \
)
²²\ ]
{
²²^ _
urlType
²²` g
[
²²g h
SearchProcessing
²²h x
.
²²x y
Query
²²y ~
.
²²~ 
Video²² 
]²² 
}²² 
)²² 
;²² 

GlobalData
´´ &
.
´´& '
Current
´´' .
.
´´. /"
PlaylistsNeedRefresh
´´/ C
=
´´D E
true
´´F J
;
´´J K

GlobalData
µµ &
.
µµ& '
Current
µµ' .
.
µµ. /

SaveConfig
µµ/ 9
(
µµ9 :
)
µµ: ;
;
µµ; <
Global
·· "
.
··" #
Application
··# .
.
··. /
ShowSnackbar
··/ ;
(
··; <
Localization
··< H
.
··H I
SnackPlaylist
··I V
)
··V W
;
··W X
}
¸¸ 
}
¹¹ 
else
ºº 
if
ºº 
(
ºº 

GlobalData
ºº '
.
ºº' (
Current
ºº( /
.
ºº/ 0
	Playlists
ºº0 9
.
ºº9 :
ContainsKey
ºº: E
(
ººE F
answer
ººF L
)
ººL M
)
ººM N
{
»» 
if
¼¼ 
(
¼¼ 
!
¼¼ 

GlobalData
¼¼ '
.
¼¼' (
Current
¼¼( /
.
¼¼/ 0
	Playlists
¼¼0 9
[
¼¼9 :
answer
¼¼: @
]
¼¼@ A
.
¼¼A B
Contains
¼¼B J
(
¼¼J K
urlType
¼¼K R
[
¼¼R S
SearchProcessing
¼¼S c
.
¼¼c d
Query
¼¼d i
.
¼¼i j
Video
¼¼j o
]
¼¼o p
)
¼¼p q
)
¼¼q r

GlobalData
½½ &
.
½½& '
Current
½½' .
.
½½. /
	Playlists
½½/ 8
[
½½8 9
answer
½½9 ?
]
½½? @
.
½½@ A
Add
½½A D
(
½½D E
urlType
½½E L
[
½½L M
SearchProcessing
½½M ]
.
½½] ^
Query
½½^ c
.
½½c d
Video
½½d i
]
½½i j
)
½½j k
;
½½k l

GlobalData
¿¿ "
.
¿¿" #
Current
¿¿# *
.
¿¿* +"
PlaylistsNeedRefresh
¿¿+ ?
=
¿¿@ A
true
¿¿B F
;
¿¿F G

GlobalData
ÀÀ "
.
ÀÀ" #
Current
ÀÀ# *
.
ÀÀ* +

SaveConfig
ÀÀ+ 5
(
ÀÀ5 6
)
ÀÀ6 7
;
ÀÀ7 8
Global
ÁÁ 
.
ÁÁ 
Application
ÁÁ *
.
ÁÁ* +
ShowSnackbar
ÁÁ+ 7
(
ÁÁ7 8
Localization
ÁÁ8 D
.
ÁÁD E
SnackPlaylist
ÁÁE R
)
ÁÁR S
;
ÁÁS T
}
ÂÂ 
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
}ÈÈ Ô
?D:\Projekty\CS\Newtone\Newtone.Mobile.UI\Logic\CoreMessenger.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Logic !
{ 
public 

class 
CoreMessenger 
:  
ICoreMessage! -
{		 
public

 
void

 
	ShowError

 
(

 
string

 $
message

% ,
)

, -
{ 	
ShowMessage 
( 
message 
)  
;  !
} 	
public 
void 
ShowMessage 
(  
string  &
message' .
). /
{ 	
Device 
. #
BeginInvokeOnMainThread *
(* +
async+ 0
(1 2
)2 3
=>4 6
{ 
await 
Global 
. 
Page !
.! "
DisplayAlert" .
(. /
Localization/ ;
.; <
Warning< C
,C D
messageE L
,L M
$strN R
)R S
;S T
} 
) 
; 
} 	
public 
void 
ShowSnackbar  
(  !
string! '
message( /
)/ 0
{ 	
Global 
. 
Application 
. 
ShowSnackbar +
(+ ,
message, 3
)3 4
;4 5
} 	
} 
} Ú
>D:\Projekty\CS\Newtone\Newtone.Mobile.UI\Logic\IApplication.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Logic !
{ 
public 

	interface 
IApplication !
{ 
string 

GetVersion 
( 
) 
; 
bool 
HasInternet 
( 
) 
; 
void 
ShowSnackbar 
( 
string  
message! (
)( )
;) *
void 
AddFolderToScan 
( 
) 
; 
}		 
}

 Ä
ED:\Projekty\CS\Newtone\Newtone.Mobile.UI\Logic\IContextMenuBuilder.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Logic !
{ 
public 

	interface 
IContextMenuBuilder (
{		 
void

 
BuildForTrack

 
(

 
View

 
sender

  &
,

& '
string

( .
	modelInfo

/ 8
,

8 9
string

: @
filePath

A I
,

I J
string

K Q
playlistName

R ^
,

^ _
List

` d
<

d e
string

e k
>

k l
elements

m u
,

u v
Func

w {
<

{ |
string	

| 
,


 
string


 
,


 
string


 
,


 
Task


 
>


 
action


 
)


 
;


 
void 
BuildForSyncList 
( 
View "
sender# )
,) *
string+ 1
	modelInfo2 ;
,; <
List= A
<A B
stringB H
>H I
elementsJ R
,R S
ActionT Z
<Z [
string[ a
>a b
actionc i
)i j
;j k
void 
BuildForPlaylist 
( 
View "
sender# )
,) *
string+ 1
playlistName2 >
,> ?
List@ D
<D E
stringE K
>K L
elementsM U
,U V
FuncW [
<[ \
View\ `
,` a
stringb h
,h i
stringj p
,p q
Taskr v
>v w
actionx ~
)~ 
;	 
void 
BuildForArtist 
( 
View  
sender! '
,' (
string) /

artistName0 :
,: ;
List< @
<@ A
stringA G
>G H
elementsI Q
,Q R
FuncS W
<W X
ViewX \
,\ ]
string^ d
,d e
stringf l
,l m
Taskn r
>r s
actiont z
)z {
;{ |
void  
BuildForSearchResult !
(! "
View" &
sender' -
,- .
string/ 5
	modelInfo6 ?
,? @
ListA E
<E F
stringF L
>L M
elementsN V
,V W
FuncX \
<\ ]
View] a
,a b
stringc i
,i j
stringk q
,q r
Tasks w
>w x
actiony 
)	 
;
 
} 
} ô
BD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Logic\IImageProcessing.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Logic !
{ 
public 

	interface 
IImageProcessing %
{		 
ImageSource

 
Blur

 
(

 
byte

 
[

 
]

 
source

  &
)

& '
;

' (
ImageSource 
Blur 
( 
ImageSource $
source% +
)+ ,
;, -
} 
} ñ
=D:\Projekty\CS\Newtone\Newtone.Mobile.UI\Logic\IPermission.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Logic !
{ 
public 

	interface 
IPermission  
{ 
bool 
IsValid 
( 
) 
; 
void 
Request 
( 
) 
; 
} 
} ÝK
CD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Logic\NavigationWrapper.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Logic !
{		 
public

 

class

 
NavigationWrapper

 "
{ 
private 
INavigation 

Navigation &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
IReadOnlyList 
< 
Page !
>! "
NavigationStack# 2
{ 	
get 
=> 

Navigation 
. 
NavigationStack -
;- .
} 	
public 
IReadOnlyList 
< 
Page !
>! "

ModalStack# -
{ 	
get 
=> 

Navigation 
. 

ModalStack (
;( )
} 	
public 
NavigationWrapper  
(  !
INavigation! ,
nav- 0
)0 1
{ 	

Navigation 
= 
nav 
; 
} 	
public 
async 
Task 
	PushAsync #
(# $
Page$ (
page) -
)- .
{   	
if!! 
(!! 

Navigation!! 
.!! 
NavigationStack!! *
.!!* +
Count!!+ 0
>!!1 2
$num!!3 4
)!!4 5
{"" 
if## 
(## 

Navigation## 
.## 
NavigationStack## .
.##. /
Last##/ 3
(##3 4
)##4 5
is##6 8 
INavigationContainer##9 M
	container##N W
)##W X
{$$ 
if%% 
(%% 
!%% 
	container%% "
.%%" #
	IsBlocked%%# ,
(%%, -
)%%- .
)%%. /
{&& 
	container'' !
.''! "
Block''" '
(''' (
)''( )
;'') *
await(( 

Navigation(( (
?((( )
.(() *
	PushAsync((* 3
(((3 4
page((4 8
)((8 9
;((9 :
})) 
}** 
}++ 
else,, 
await-- 

Navigation--  
?--  !
.--! "
	PushAsync--" +
(--+ ,
page--, 0
)--0 1
;--1 2
}.. 	
public00 
async00 
Task00 
PushModalAsync00 (
(00( )
Page00) -
page00. 2
)002 3
{11 	
bool22 

navBlocked22 
=22 
false22 #
;22# $
bool33 
modalBlocked33 
=33 
false33  %
;33% &
if44 
(44 

Navigation44 
.44 
NavigationStack44 *
.44* +
Count44+ 0
>441 2
$num443 4
)444 5
{55 
if66 
(66 

Navigation66 
.66 
NavigationStack66 .
.66. /
Last66/ 3
(663 4
)664 5
is666 8 
INavigationContainer669 M
	container66N W
)66W X
{77 
	container88 
.88 
Block88 #
(88# $
)88$ %
;88% &

navBlocked99 
=99  
true99! %
;99% &
}:: 
};; 
else<< 

navBlocked== 
=== 
true== !
;==! "
if?? 
(?? 

Navigation?? 
.?? 

ModalStack?? %
.??% &
Count??& +
>??, -
$num??. /
)??/ 0
{@@ 
ifAA 
(AA 

NavigationAA 
.AA 

ModalStackAA )
.AA) *
LastAA* .
(AA. /
)AA/ 0
isAA1 3 
INavigationContainerAA4 H
	containerAAI R
)AAR S
{BB 
	containerCC 
.CC 
BlockCC #
(CC# $
)CC$ %
;CC% &
modalBlockedDD  
=DD! "
trueDD# '
;DD' (
varEE 
modalEE 
=EE 

NavigationEE  *
.EE* +

ModalStackEE+ 5
.EE5 6
LastEE6 :
(EE: ;
)EE; <
;EE< =
varFF 
modal1FF 
=FF  
pageFF! %
;FF% &
ifHH 
(HH 
modalHH 
.HH 
GetTypeHH %
(HH% &
)HH& '
!=HH( *
modal1HH+ 1
.HH1 2
GetTypeHH2 9
(HH9 :
)HH: ;
)HH; <
modalBlockedII $
=II% &
falseII' ,
;II, -
ifKK 
(KK 
modalKK 
isKK 
ViewsKK  %
.KK% &
TVKK& (
.KK( )
	ModalPageKK) 2
modalTVPage1KK3 ?
&&KK@ B
modal1KKC I
isKKJ L
ViewsKKM R
.KKR S
TVKKS U
.KKU V
	ModalPageKKV _
modalTVPage2KK` l
)KKl m
{LL 
ifMM 
(MM 
modalTVPage1MM (
.MM( )
GetContentTypeMM) 7
(MM7 8
)MM8 9
!=MM: <
modalTVPage2MM= I
.MMI J
GetContentTypeMMJ X
(MMX Y
)MMY Z
)MMZ [
modalBlockedNN (
=NN) *
falseNN+ 0
;NN0 1
}OO 
ifQQ 
(QQ 
modalQQ 
isQQ  
	ModalPageQQ! *

modalPage1QQ+ 5
&&QQ6 8
modal1QQ9 ?
isQQ@ B
	ModalPageQQC L

modalPage2QQM W
)QQW X
{RR 
ifSS 
(SS 

modalPage1SS &
.SS& '
GetContentTypeSS' 5
(SS5 6
)SS6 7
!=SS8 :

modalPage2SS; E
.SSE F
GetContentTypeSSF T
(SST U
)SSU V
)SSV W
modalBlockedTT (
=TT) *
falseTT+ 0
;TT0 1
}UU 
}VV 
}WW 
ifYY 
(YY 
!YY 

navBlockedYY 
||YY 
!YY  
modalBlockedYY  ,
)YY, -
{ZZ 
await[[ 

Navigation[[  
?[[  !
.[[! "
PushModalAsync[[" 0
([[0 1
page[[1 5
)[[5 6
;[[6 7
}\\ 
}^^ 	
public`` 
async`` 
Task`` 
PopAsync`` "
(``" #
)``# $
{aa 	
awaitbb 

Navigationbb 
?bb 
.bb 
PopAsyncbb &
(bb& '
)bb' (
;bb( )
ifcc 
(cc 

Navigationcc 
.cc 
NavigationStackcc *
.cc* +
Countcc+ 0
>cc1 2
$numcc3 4
)cc4 5
{dd 
ifee 
(ee 

Navigationee 
.ee 
NavigationStackee .
.ee. /
Lastee/ 3
(ee3 4
)ee4 5
isee6 8 
INavigationContaineree9 M
	containereeN W
)eeW X
	containerff 
.ff 
Unblockff %
(ff% &
)ff& '
;ff' (
}gg 
}hh 	
publicii 
asyncii 
Taskii 
PopModalAsyncii '
(ii' (
)ii( )
{jj 	
trykk 
{ll 
awaitmm 

Navigationmm  
?mm  !
.mm! "
PopModalAsyncmm" /
(mm/ 0
)mm0 1
;mm1 2
}nn 
catchoo 
{pp 
}rr 
ifss 
(ss 

Navigationss 
.ss 
NavigationStackss *
.ss* +
Countss+ 0
>ss1 2
$numss3 4
)ss4 5
{tt 
ifuu 
(uu 

Navigationuu 
.uu 
NavigationStackuu .
.uu. /
Lastuu/ 3
(uu3 4
)uu4 5
isuu6 8 
INavigationContaineruu9 M
	containeruuN W
)uuW X
	containervv 
.vv 
Unblockvv %
(vv% &
)vv& '
;vv' (
}ww 
ifyy 
(yy 

Navigationyy 
.yy 

ModalStackyy %
.yy% &
Countyy& +
>yy, -
$numyy. /
)yy/ 0
{zz 
if{{ 
({{ 

Navigation{{ 
.{{ 

ModalStack{{ )
.{{) *
Last{{* .
({{. /
){{/ 0
is{{1 3 
INavigationContainer{{4 H
	container{{I R
){{R S
	container|| 
.|| 
Unblock|| %
(||% &
)||& '
;||' (
}}} 
}~~ 	
public 
async 
void 
Pop 
( 
) 
{
 	
if
 
(
 

Navigation
 
.
 

ModalStack
 %
.
% &
Count
& +
>
, -
$num
. /
)
/ 0
await
 
PopModalAsync
 #
(
# $
)
$ %
;
% &
else
 
{
 
if
 
(
 

Navigation
 
.
 
NavigationStack
 .
.
. /
Count
/ 4
>
5 6
$num
7 8
)
8 9
await
 
PopAsync
 "
(
" #
)
# $
;
$ %
}
 
}
 	
}
 
} Ü
9D:\Projekty\CS\Newtone\Newtone.Mobile.UI\MainPage.xaml.cs
	namespace		 	$
XamarinMobileProjectTest		
 "
{

 
public 

partial 
class 
MainPage !
:" #
ContentPage$ /
{ 
public 
MainPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
} 
} )
>D:\Projekty\CS\Newtone\Newtone.Mobile.UI\Models\ArtistModel.cs
	namespace

 	
Newtone


 
.

 
Mobile

 
.

 
UI

 
.

 
Models

 "
{ 
public 

class 
ArtistModel 
: 
NListViewItem ,
{ 
private 
string 
name 
; 
private 
int 

trackCount 
; 
private 
ImageSource 
image !
;! "
public 
Xamarin 
. 
Forms 
. 
View !
View" &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
Name 
{ 	
get 
=> 
name 
; 
set 
{ 
name 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
OnPropertyChanged !
(! "
(" #
)# $
=>% '
	TrackElem( 1
)1 2
;2 3
} 
} 	
public 
int 

TrackCount 
{   	
get!! 
=>!! 

trackCount!! 
;!! 
set"" 
{## 

trackCount$$ 
=$$ 
value$$ "
;$$" #
OnPropertyChanged%% !
(%%! "
)%%" #
;%%# $
OnPropertyChanged&& !
(&&! "
(&&" #
)&&# $
=>&&% '
	TrackElem&&( 1
)&&1 2
;&&2 3
}'' 
}(( 	
public)) 
string)) 
	TrackElem)) 
{** 	
get++ 
{,, 
return-- 
string-- 
.-- 
Concat-- $
(--$ %
Localization--% 1
.--1 2
Tracks--2 8
,--8 9
$str--: >
,--> ?

GlobalData--@ J
.--J K
Current--K R
.--R S
Artists--S Z
[--Z [
name--[ _
]--_ `
.--` a
Count--a f
)--f g
;--g h
}.. 
}// 	
public00 
ImageSource00 
Image00  
{11 	
get22 
=>22 
image22 
;22 
set33 
{44 
image55 
=55 
value55 
;55 
OnPropertyChanged66 !
(66! "
)66" #
;66# $
}77 
}88 	
private;; 
ICommand;; 
longPressedCommand;; +
;;;+ ,
public<< 
ICommand<< 
LongPressedCommand<< *
{== 	
get>> 
{?? 
if@@ 
(@@ 
longPressedCommand@@ &
==@@' )
null@@* .
)@@. /
longPressedCommandAA &
=AA' (
newAA) ,
ActionCommandAA- :
(AA: ;
	parameterAA; D
=>AAE G
{BB 
ContextMenuBuilderCC *
.CC* +
BuildForArtistCC+ 9
(CC9 :
ViewCC: >
,CC> ?
NameCC@ D
)CCD E
;CCE F
}DD 
)DD 
;DD 
returnFF 
longPressedCommandFF )
;FF) *
}GG 
}HH 	
privateJJ 
ICommandJJ 
pressedCommandJJ '
;JJ' (
publicKK 
ICommandKK 
PressedCommandKK &
{LL 	
getMM 
{NN 
ifOO 
(OO 
pressedCommandOO "
==OO# %
nullOO& *
)OO* +
pressedCommandPP "
=PP# $
newPP% (
ActionCommandPP) 6
(PP6 7
asyncPP7 <
(PP= >
	parameterPP> G
)PPG H
=>PPI K
{QQ 
awaitRR 
GlobalRR $
.RR$ %
NavigationInstanceRR% 7
.RR7 8
PushModalAsyncRR8 F
(RRF G
newRRG J
	ModalPageRRK T
(RRT U
newRRU X
CurrentTracksPageRRY j
(RRj k

GlobalDataRRk u
.RRu v
CurrentRRv }
.RR} ~
Artists	RR~ 
[
RR 
Name
RR 
]
RR 
,
RR 
$str
RR 
)
RR 
,
RR 
Name
RR 
)
RR 
)
RR 
;
RR 
}SS 
)SS 
;SS 
returnTT 
pressedCommandTT %
;TT% &
}UU 
}VV 	
publicYY 
overrideYY 
voidYY 
FocusActionYY (
(YY( )
)YY) *
{ZZ 	
PressedCommand[[ 
.[[ 
Execute[[ "
([[" #
null[[# '
)[[' (
;[[( )
}\\ 	
public^^ 
override^^ 
void^^ 
LongFocusAction^^ ,
(^^, -
)^^- .
{__ 	
LongPressedCommand`` 
.`` 
Execute`` &
(``& '
null``' +
)``+ ,
;``, -
}aa 	
}cc 
}dd «
@D:\Projekty\CS\Newtone\Newtone.Mobile.UI\Models\DownloadModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Models "
{ 
public 

class 
DownloadModel 
:  
Newtone! (
.( )
Core) -
.- .
Models. 4
.4 5
DownloadModel5 B
{ 
private 
string  
progressStringMobile +
;+ ,
public		 
string		  
ProgressStringMobile		 *
{

 	
get 
{ 
return  
progressStringMobile +
;+ ,
} 
set 
{  
progressStringMobile $
=% &
value' ,
;, -
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
public 
DownloadModel 
( 
Newtone $
.$ %
Core% )
.) *
Models* 0
.0 1
DownloadModel1 >
model? D
)D E
{ 	
this 
. 
Id 
= 
model 
. 
Id 
; 
this 
. 
PlaylistName 
= 
model  %
.% &
PlaylistName& 2
;2 3
this 
. 
Progress 
= 
model !
.! "
Progress" *
;* +
this 
.  
ProgressStringMobile %
=& '
model( -
.- .
ProgressString. <
;< =
this 
. 
Title 
= 
model 
. 
Title $
;$ %
} 	
}   
}!! 2
@D:\Projekty\CS\Newtone\Newtone.Mobile.UI\Models\PlaylistModel.cs
	namespace

 	
Newtone


 
.

 
Mobile

 
.

 
UI

 
.

 
Models

 "
{ 
public 

class 
PlaylistModel 
:  
NListViewItem! .
{ 
private 
ImageSource 
image !
;! "
private 
string 
name 
; 
private 
int 

trackCount 
; 
private 
string 
webUrl 
; 
public 
ImageSource 
Image  
{ 	
get 
=> 
image 
; 
set 
{ 
image 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
public 
string 
Name 
{   	
get!! 
=>!! 
name!! 
;!! 
set"" 
{## 
name$$ 
=$$ 
value$$ 
;$$ 
OnPropertyChanged%% !
(%%! "
)%%" #
;%%# $
OnPropertyChanged&& !
(&&! "
(&&" #
)&&# $
=>&&% '
	TrackElem&&( 1
)&&1 2
;&&2 3
}'' 
}(( 	
public)) 
int)) 

TrackCount)) 
{** 	
get++ 
=>++ 

trackCount++ 
;++ 
set,, 
{-- 

trackCount.. 
=.. 
value.. "
;.." #
OnPropertyChanged// !
(//! "
)//" #
;//# $
OnPropertyChanged00 !
(00! "
(00" #
)00# $
=>00% '
	TrackElem00( 1
)001 2
;002 3
}11 
}22 	
public33 
string33 
	TrackElem33 
{44 	
get55 
{66 
return77 
string77 
.77 
Concat77 $
(77$ %
Localization77% 1
.771 2
Tracks772 8
,778 9
$str77: >
,77> ?

GlobalData77@ J
.77J K
Current77K R
.77R S
	Playlists77S \
[77\ ]
name77] a
]77a b
.77b c
Count77c h
)77h i
;77i j
}88 
}99 	
public:: 
string:: 
WebUrl:: 
{;; 	
get<< 
=><< 
webUrl<< 
;<< 
set== 
{>> 
webUrl?? 
=?? 
value?? 
;?? 
OnPropertyChanged@@ !
(@@! "
)@@" #
;@@# $
}AA 
}BB 	
publicDD 
ViewDD 
ViewDD 
{DD 
getDD 
;DD 
setDD  #
;DD# $
}DD% &
privateGG 
ICommandGG 
longPressedCommandGG +
;GG+ ,
publicHH 
ICommandHH 
LongPressedCommandHH *
{II 	
getJJ 
{KK 
ifLL 
(LL 
longPressedCommandLL &
==LL' )
nullLL* .
)LL. /
longPressedCommandMM &
=MM' (
newMM) ,
ActionCommandMM- :
(MM: ;
	parameterMM; D
=>MME G
{NN 
ifOO 
(OO 
stringOO "
.OO" #
IsNullOrEmptyOO# 0
(OO0 1
WebUrlOO1 7
)OO7 8
)OO8 9
ContextMenuBuilderPP .
.PP. /
BuildForPlaylistPP/ ?
(PP? @
ViewPP@ D
,PPD E
NamePPF J
)PPJ K
;PPK L
}QQ 
)QQ 
;QQ 
returnSS 
longPressedCommandSS )
;SS) *
}TT 
}UU 	
privateWW 
ICommandWW 
pressedCommandWW '
;WW' (
publicXX 
ICommandXX 
PressedCommandXX &
{YY 	
getZZ 
{[[ 
if\\ 
(\\ 
pressedCommand\\ "
==\\# %
null\\& *
)\\* +
pressedCommand]] "
=]]# $
new]]% (
ActionCommand]]) 6
(]]6 7
async]]7 <
(]]= >
	parameter]]> G
)]]G H
=>]]I K
{^^ 
if__ 
(__ 
string__ "
.__" #
IsNullOrEmpty__# 0
(__0 1
WebUrl__1 7
)__7 8
)__8 9
{`` 
awaitaa !
Globalaa" (
.aa( )
NavigationInstanceaa) ;
.aa; <
PushModalAsyncaa< J
(aaJ K
newaaK N
	ModalPageaaO X
(aaX Y
newaaY \
CurrentTracksPageaa] n
(aan o

GlobalDataaao y
.aay z
Current	aaz 
.
aa 
	Playlists
aa 
[
aa 
Name
aa 
]
aa 
,
aa 
Name
aa 
)
aa 
,
aa 
Name
aa 
)
aa 
)
aa  
;
aa  ¡
}bb 
elsecc 
{dd 
awaitee !
Globalee" (
.ee( )
NavigationInstanceee) ;
.ee; <
PushModalAsyncee< J
(eeJ K
neweeK N
	ModalPageeeO X
(eeX Y
neweeY \
SearchResultPageee] m
(eem n
WebUrleen t
)eet u
,eeu v
Nameeew {
)ee{ |
)ee| }
;ee} ~
}ff 
}gg 
)gg 
;gg 
returnhh 
pressedCommandhh %
;hh% &
}ii 
}jj 	
publicmm 
overridemm 
voidmm 
FocusActionmm (
(mm( )
)mm) *
{nn 	
PressedCommandoo 
.oo 
Executeoo "
(oo" #
nulloo# '
)oo' (
;oo( )
}pp 	
publicrr 
overriderr 
voidrr 
LongFocusActionrr ,
(rr, -
)rr- .
{ss 	
LongPressedCommandtt 
.tt 
Executett &
(tt& '
nulltt' +
)tt+ ,
;tt, -
}uu 	
}ww 
}xx 
DD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Models\SearchResultModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Models "
{ 
public 

class 
SearchResultModel "
:# $
NListViewItem% 2
{ 
private 
string 
title 
; 
private 
string 
author 
; 
private 
string 
id 
; 
private 
string 
mixId 
; 
private 
byte 
[ 
] 
image 
; 
private 
TimeSpan 
duration !
;! "
private 
string 
thumbUrl 
;  
private 
string 
	videoData  
;  !
private 
ImageSource 
thumb !
;! "
public   
ImageSource   
Thumb    
{!! 	
get"" 
{## 

CheckThumb$$ 
($$ 
)$$ 
;$$ 
return%% 
thumb%% 
;%% 
}&& 
set'' 
{(( 
if)) 
()) 
thumb)) 
!=)) 
value)) "
)))" #
{** 
thumb++ 
=++ 
value++ !
;++! "
OnPropertyChanged,, %
(,,% &
),,& '
;,,' (
}-- 
}.. 
}// 	
public00 
string00 
Title00 
{11 	
get22 
=>22 
title22 
;22 
set33 
{44 
title55 
=55 
value55 
;55 
OnPropertyChanged66 !
(66! "
)66" #
;66# $
}77 
}88 	
public99 
string99 
Author99 
{:: 	
get;; 
=>;; 
author;; 
;;; 
set<< 
{== 
author>> 
=>> 
value>> 
;>> 
OnPropertyChanged?? !
(??! "
)??" #
;??# $
}@@ 
}AA 	
publicBB 
stringBB 
IdBB 
{CC 	
getDD 
=>DD 
idDD 
;DD 
setEE 
{FF 
idGG 
=GG 
valueGG 
;GG 
OnPropertyChangedHH !
(HH! "
)HH" #
;HH# $
}II 
}JJ 	
publicKK 
stringKK 
MixIdKK 
{LL 	
getMM 
=>MM 
mixIdMM 
;MM 
setNN 
{OO 
mixIdPP 
=PP 
valuePP 
;PP 
OnPropertyChangedQQ !
(QQ! "
)QQ" #
;QQ# $
}RR 
}SS 	
publicTT 
byteTT 
[TT 
]TT 
ImageTT 
{UU 	
getVV 
=>VV 
imageVV 
;VV 
setWW 
{XX 
imageYY 
=YY 
valueYY 
;YY 
OnPropertyChangedZZ !
(ZZ! "
)ZZ" #
;ZZ# $
}[[ 
}\\ 	
public]] 
TimeSpan]] 
Duration]]  
{^^ 	
get__ 
=>__ 
duration__ 
;__ 
set`` 
{aa 
durationbb 
=bb 
valuebb  
;bb  !
OnPropertyChangedcc !
(cc! "
)cc" #
;cc# $
OnPropertyChangeddd !
(dd! "
(dd" #
)dd# $
=>dd% '
DurationStringdd( 6
)dd6 7
;dd7 8
}ee 
}ff 	
publicgg 
stringgg 
ThumbUrlgg 
{hh 	
getii 
=>ii 
thumbUrlii 
;ii 
setjj 
{kk 
thumbUrlll 
=ll 
valuell  
;ll  !
OnPropertyChangedmm !
(mm! "
)mm" #
;mm# $
}nn 
}oo 	
publicpp 
stringpp 
	VideoDatapp 
{qq 	
getrr 
=>rr 
	videoDatarr 
;rr 
setss 
{tt 
	videoDatauu 
=uu 
valueuu !
;uu! "
OnPropertyChangedvv !
(vv! "
)vv" #
;vv# $
}ww 
}xx 	
publicyy 
stringyy 
DurationStringyy $
{zz 	
get{{ 
{|| 
return}} 
Duration}} 
.}}  
ToString}}  (
(}}( )
$str}}) 2
)}}2 3
;}}3 4
}~~ 
} 	
public
 
bool
 
	IsOffline
 
{
 	
get
 
{
 
return
 
id
 
.
 
Length
  
>
! "
$num
# %
;
% &
}
 
}
 	
public
 
Color
 
BackgroundColor
 $
{
 	
get
 
=>
 
	IsOffline
 
?
 
Color
 $
.
$ %
FromHex
% ,
(
, -
$str
- 6
)
6 7
:
8 9
Color
: ?
.
? @
Transparent
@ K
;
K L
}
 	
public
 
bool
 
	IsVisible
 
=>
  
!
! "
	IsOffline
" +
;
+ ,
private
 
ICommand
 
downloadClicked
 (
;
( )
public
 
ICommand
 
DownloadClicked
 '
{
 	
get
 
{
 
if
 
(
 
downloadClicked
 #
==
$ &
null
' +
)
+ ,
downloadClicked
 #
=
$ %
new
& )
ActionCommand
* 7
(
7 8
	parameter
8 A
=>
B D
{
  
ContextMenuBuilder
 *
.
* +"
BuildForSearchResult
+ ?
(
? @
	parameter
@ I
as
J L
View
M Q
,
Q R
	VideoData
S \
)
\ ]
;
] ^
}
 
)
 
;
 
return
 
downloadClicked
 &
;
& '
}
 
set
 
=>
 
downloadClicked
 "
=
# $
value
% *
;
* +
}
 	
public
   
SearchResultModel
    
(
    !
Newtone
  ! (
.
  ( )
Core
  ) -
.
  - .
Models
  . 4
.
  4 5
SearchResultModel
  5 F
model
  G L
)
  L M
{
¡¡ 	
this
¢¢ 
.
¢¢ 
Author
¢¢ 
=
¢¢ 
model
¢¢ 
.
¢¢  
Author
¢¢  &
;
¢¢& '
this
££ 
.
££ 
Duration
££ 
=
££ 
model
££ !
.
££! "
Duration
££" *
;
££* +
this
¤¤ 
.
¤¤ 
Id
¤¤ 
=
¤¤ 
model
¤¤ 
.
¤¤ 
Id
¤¤ 
;
¤¤ 
this
¥¥ 
.
¥¥ 
Image
¥¥ 
=
¥¥ 
model
¥¥ 
.
¥¥ 
Image
¥¥ $
;
¥¥$ %
this
¦¦ 
.
¦¦ 
MixId
¦¦ 
=
¦¦ 
model
¦¦ 
.
¦¦ 
MixId
¦¦ $
;
¦¦$ %
this
§§ 
.
§§ 
ThumbUrl
§§ 
=
§§ 
model
§§ !
.
§§! "
ThumbUrl
§§" *
;
§§* +
this
¨¨ 
.
¨¨ 
Title
¨¨ 
=
¨¨ 
model
¨¨ 
.
¨¨ 
Title
¨¨ $
;
¨¨$ %
this
©© 
.
©© 
	VideoData
©© 
=
©© 
model
©© "
.
©©" #
	VideoData
©©# ,
;
©©, -
}
ªª 	
public
­­ 
void
­­ 
CheckChanges
­­  
(
­­  !
)
­­! "
{
®® 	

CheckThumb
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
}
°° 	
public
²² 
MediaSource
²² 
ToMediaSource
²² (
(
²²( )
)
²²) *
{
³³ 	
return
´´ 
new
´´ 
MediaSource
´´ "
(
´´" #
)
´´# $
{
µµ 
Artist
¶¶ 
=
¶¶ 
Author
¶¶ 
,
¶¶  
Duration
·· 
=
·· 
Duration
·· #
,
··# $
FilePath
¸¸ 
=
¸¸ 
Id
¸¸ 
,
¸¸ 
Image
¹¹ 
=
¹¹ 
Image
¹¹ 
,
¹¹ 
Title
ºº 
=
ºº 
Title
ºº 
,
ºº 
Type
»» 
=
»» 
Id
»» 
.
»» 
Length
»»  
==
»»! #
$num
»»$ &
?
»»' (
MediaSource
»») 4
.
»»4 5

SourceType
»»5 ?
.
»»? @
Web
»»@ C
:
»»D E
MediaSource
»»F Q
.
»»Q R

SourceType
»»R \
.
»»\ ]
Local
»»] b
}
¼¼ 
;
¼¼ 
}
½½ 	
public
¿¿ 
override
¿¿ 
async
¿¿ 
void
¿¿ "
FocusAction
¿¿# .
(
¿¿. /
)
¿¿/ 0
{
ÀÀ 	 
NUntouchedListView
ÁÁ 
listView
ÁÁ '
=
ÁÁ( )
ParentListView
ÁÁ* 8
;
ÁÁ8 9
int
ÃÃ 
index
ÃÃ 
=
ÃÃ 
listView
ÃÃ  
.
ÃÃ  !
NFocusedIndex
ÃÃ! .
;
ÃÃ. /
if
ÅÅ 
(
ÅÅ 
index
ÅÅ 
>=
ÅÅ 
$num
ÅÅ 
&&
ÅÅ 
index
ÅÅ #
<
ÅÅ$ %
listView
ÅÅ& .
.
ÅÅ. /
NItemSource
ÅÅ/ :
.
ÅÅ: ;
Count
ÅÅ; @
)
ÅÅ@ A
{
ÆÆ 
var
ÇÇ 
item
ÇÇ 
=
ÇÇ 
listView
ÇÇ #
.
ÇÇ# $
NItemSource
ÇÇ$ /
[
ÇÇ/ 0
index
ÇÇ0 5
]
ÇÇ5 6
as
ÇÇ7 9
SearchResultModel
ÇÇ: K
;
ÇÇK L

GlobalData
ÈÈ 
.
ÈÈ 
Current
ÈÈ "
.
ÈÈ" #
CurrentPlaylist
ÈÈ# 2
.
ÈÈ2 3
Clear
ÈÈ3 8
(
ÈÈ8 9
)
ÈÈ9 :
;
ÈÈ: ;
if
ÊÊ 
(
ÊÊ 
string
ÊÊ 
.
ÊÊ 
IsNullOrEmpty
ÊÊ (
(
ÊÊ( )
item
ÊÊ) -
.
ÊÊ- .
MixId
ÊÊ. 3
)
ÊÊ3 4
)
ÊÊ4 5
{
ËË 

GlobalData
ÌÌ 
.
ÌÌ 
Current
ÌÌ &
.
ÌÌ& '
PlaylistPosition
ÌÌ' 7
=
ÌÌ8 9
index
ÌÌ: ?
;
ÌÌ? @
foreach
ÎÎ 
(
ÎÎ 
var
ÎÎ  
_item
ÎÎ! &
in
ÎÎ' )
listView
ÎÎ* 2
.
ÎÎ2 3
NItemSource
ÎÎ3 >
)
ÎÎ> ?
{
ÏÏ 
var
ÐÐ 
__item
ÐÐ "
=
ÐÐ# $
_item
ÐÐ% *
as
ÐÐ+ -
SearchResultModel
ÐÐ. ?
;
ÐÐ? @

GlobalData
ÑÑ "
.
ÑÑ" #
Current
ÑÑ# *
.
ÑÑ* +
CurrentPlaylist
ÑÑ+ :
.
ÑÑ: ;
Add
ÑÑ; >
(
ÑÑ> ?
new
ÑÑ? B
Newtone
ÑÑC J
.
ÑÑJ K
Core
ÑÑK O
.
ÑÑO P
Media
ÑÑP U
.
ÑÑU V
MediaSource
ÑÑV a
(
ÑÑa b
)
ÑÑb c
{
ÒÒ 
Artist
ÓÓ "
=
ÓÓ# $
__item
ÓÓ% +
.
ÓÓ+ ,
Author
ÓÓ, 2
,
ÓÓ2 3
Duration
ÔÔ $
=
ÔÔ% &
__item
ÔÔ' -
.
ÔÔ- .
Duration
ÔÔ. 6
,
ÔÔ6 7
FilePath
ÕÕ $
=
ÕÕ% &
__item
ÕÕ' -
.
ÕÕ- .
Id
ÕÕ. 0
,
ÕÕ0 1
Image
ÖÖ !
=
ÖÖ" #
__item
ÖÖ$ *
.
ÖÖ* +
Image
ÖÖ+ 0
,
ÖÖ0 1
Title
×× !
=
××" #
__item
××$ *
.
××* +
Title
××+ 0
,
××0 1
Type
ØØ  
=
ØØ! "
__item
ØØ# )
.
ØØ) *
Id
ØØ* ,
.
ØØ, -
Length
ØØ- 3
==
ØØ4 6
$num
ØØ7 9
?
ØØ: ;
Newtone
ØØ< C
.
ØØC D
Core
ØØD H
.
ØØH I
Media
ØØI N
.
ØØN O
MediaSource
ØØO Z
.
ØØZ [

SourceType
ØØ[ e
.
ØØe f
Web
ØØf i
:
ØØj k
Core
ØØl p
.
ØØp q
Media
ØØq v
.
ØØv w
MediaSourceØØw 
.ØØ 

SourceTypeØØ 
.ØØ 
LocalØØ 
}
ÙÙ 
)
ÙÙ 
;
ÙÙ 
}
ÚÚ 

GlobalData
ÜÜ 
.
ÜÜ 
Current
ÜÜ &
.
ÜÜ& '
MediaSource
ÜÜ' 2
=
ÜÜ3 4

GlobalData
ÜÜ5 ?
.
ÜÜ? @
Current
ÜÜ@ G
.
ÜÜG H
CurrentPlaylist
ÜÜH W
[
ÜÜW X
index
ÜÜX ]
]
ÜÜ] ^
;
ÜÜ^ _

GlobalData
ÞÞ 
.
ÞÞ 
Current
ÞÞ &
.
ÞÞ& '
MediaPlayer
ÞÞ' 2
.
ÞÞ2 3
LoadPlaylist
ÞÞ3 ?
(
ÞÞ? @
(
ÞÞ@ A
)
ÞÞA B
=>
ÞÞC E
{
ßß 
List
àà 
<
àà 
Core
àà !
.
àà! "
Media
àà" '
.
àà' (
MediaSource
àà( 3
>
àà3 4
newPlaylist
àà5 @
=
ààA B
listView
ààC K
.
ààK L
NItemSource
ààL W
.
ààW X
Select
ààX ^
(
àà^ _
_item
àà_ d
=>
ààe g
{
áá 
var
ââ 
__item
ââ  &
=
ââ' (
_item
ââ) .
as
ââ/ 1
SearchResultModel
ââ2 C
;
ââC D
return
ãã "
new
ãã# &
Core
ãã' +
.
ãã+ ,
Media
ãã, 1
.
ãã1 2
MediaSource
ãã2 =
(
ãã= >
)
ãã> ?
{
ää 
Artist
åå  &
=
åå' (
__item
åå) /
.
åå/ 0
Author
åå0 6
,
åå6 7
Duration
ææ  (
=
ææ) *
__item
ææ+ 1
.
ææ1 2
Duration
ææ2 :
,
ææ: ;
FilePath
çç  (
=
çç) *
__item
çç+ 1
.
çç1 2
Id
çç2 4
,
çç4 5
Image
èè  %
=
èè& '
__item
èè( .
.
èè. /
Image
èè/ 4
,
èè4 5
Title
éé  %
=
éé& '
__item
éé( .
.
éé. /
Title
éé/ 4
,
éé4 5
Type
êê  $
=
êê% &
__item
êê' -
.
êê- .
Id
êê. 0
.
êê0 1
Length
êê1 7
==
êê8 :
$num
êê; =
?
êê> ?
Newtone
êê@ G
.
êêG H
Core
êêH L
.
êêL M
Media
êêM R
.
êêR S
MediaSource
êêS ^
.
êê^ _

SourceType
êê_ i
.
êêi j
Web
êêj m
:
êên o
Core
êêp t
.
êêt u
Media
êêu z
.
êêz {
MediaSourceêê{ 
.êê 

SourceTypeêê 
.êê 
Localêê 
}
ëë 
;
ëë 
}
ìì 
)
ìì 
.
ìì 
ToList
ìì !
(
ìì! "
)
ìì" #
;
ìì# $
return
îî 
newPlaylist
îî *
;
îî* +
}
ïï 
,
ïï 
index
ïï 
,
ïï 
true
ïï "
,
ïï" #
true
ïï$ (
)
ïï( )
;
ïï) *
}
ðð 
else
ññ 
{
òò 

GlobalData
óó 
.
óó 
Current
óó &
.
óó& '
MediaPlayer
óó' 2
.
óó2 3
LoadPlaylist
óó3 ?
(
óó? @
item
óó@ D
.
óóD E
MixId
óóE J
,
óóJ K
$num
óóL M
,
óóM N
new
óóO R
Newtone
óóS Z
.
óóZ [
Core
óó[ _
.
óó_ `
Media
óó` e
.
óóe f
MediaSource
óóf q
(
óóq r
)
óór s
{
ôô 
Artist
õõ 
=
õõ  
item
õõ! %
.
õõ% &
Author
õõ& ,
,
õõ, -
Duration
öö  
=
öö! "
item
öö# '
.
öö' (
Duration
öö( 0
,
öö0 1
FilePath
÷÷  
=
÷÷! "
item
÷÷# '
.
÷÷' (
Id
÷÷( *
,
÷÷* +
Image
øø 
=
øø 
item
øø  $
.
øø$ %
Image
øø% *
,
øø* +
Title
ùù 
=
ùù 
item
ùù  $
.
ùù$ %
Title
ùù% *
,
ùù* +
Type
úú 
=
úú 
Newtone
úú &
.
úú& '
Core
úú' +
.
úú+ ,
Media
úú, 1
.
úú1 2
MediaSource
úú2 =
.
úú= >

SourceType
úú> H
.
úúH I
Web
úúI L
}
ûû 
,
ûû 
true
ûû 
,
ûû 
true
ûû !
)
ûû! "
;
ûû" #
}
üü 
await
þþ 
Global
þþ 
.
þþ  
NavigationInstance
þþ /
.
þþ/ 0
PushModalAsync
þþ0 >
(
þþ> ?
new
þþ? B
FullScreenPage
þþC Q
(
þþQ R
)
þþR S
)
þþS T
;
þþT U
}
ÿÿ 
}
 	
public
 
override
 
void
 
LongFocusAction
 ,
(
, -
)
- .
{
 	
DownloadClicked
 
.
 
Execute
 #
(
# $
ParentListView
$ 2
.
2 3 
GetCurrentItemView
3 E
(
E F
)
F G
)
G H
;
H I
}
 	
private
 
void
 

CheckThumb
 
(
  
)
  !
{
 	
if
 
(
 
thumb
 
==
 
null
 
&&
  
Image
! &
!=
' )
null
* .
&&
/ 1
Image
2 7
.
7 8
Length
8 >
>
? @
$num
A B
)
B C
{
 
thumb
 
=
 
ImageProcessing
 '
.
' (
	FromArray
( 1
(
1 2
Image
2 7
)
7 8
;
8 9
OnPropertyChanged
 !
(
! "
(
" #
)
# $
=>
% '
Thumb
( -
)
- .
;
. /
}
 
}
 	
}
 
} Ài
@D:\Projekty\CS\Newtone\Newtone.Mobile.UI\Models\SettingsModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Models "
{		 
public

 

class

 
SettingsModel

 
:

  
NListViewItem

! .
{ 
private 
string 
name 
; 
private 
string 
description "
;" #
public 
string 
Name 
{ 	
get 
=> 
name 
; 
set 
{ 
name 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
public 
string 
Description !
{ 	
get 
=> 
description 
; 
set 
{ 
description 
= 
value #
;# $
OnPropertyChanged   !
(  ! "
)  " #
;  # $
}!! 
}"" 	
public%% 
override%% 
async%% 
void%% "
FocusAction%%# .
(%%. /
)%%/ 0
{&& 	
int'' 
index'' 
='' 
ParentListView'' &
.''& '
NFocusedIndex''' 4
;''4 5
if)) 
()) 
index)) 
>=)) 
$num)) 
&&)) 
index)) #
<))$ %
ParentListView))& 4
.))4 5
NItemSource))5 @
.))@ A
Count))A F
)))F G
{** 
if++ 
(++ 
index++ 
==++ 
$num++ 
)++ 
{,, 
foreach-- 
(-- 
string-- #
filepath--$ ,
in--- /

GlobalData--0 :
.--: ;
Current--; B
.--B C
Audios--C I
.--I J
Keys--J N
)--N O
{.. 
if00 
(00 
!00 

GlobalData00 '
.00' (
Current00( /
.00/ 0
	AudioTags000 9
.009 :
ContainsKey00: E
(00E F
filepath00F N
)00N O
)00O P
{11 
var22 
tag22  #
=22$ %

GlobalData22& 0
.220 1
Current221 8
.228 9
Audios229 ?
[22? @
filepath22@ H
]22H I
;22I J
if33 
(33  
tag33  #
.33# $
Artist33$ *
==33+ -
Localization33. :
.33: ;
UnknownArtist33; H
)33H I
{44 
FileInfo55  (
fileInfo55) 1
=552 3
new554 7
FileInfo558 @
(55@ A
filepath55A I
)55I J
;55J K
string77  &
_name77' ,
=77- .
fileInfo77/ 7
.777 8
Name778 <
.77< =
Replace77= D
(77D E
fileInfo77E M
.77M N
	Extension77N W
,77W X
$str77Y [
)77[ \
;77\ ]
string88  &
[88& '
]88' (
splitted88) 1
=882 3
_name884 9
.889 :
Split88: ?
(88? @
new88@ C
string88D J
[88J K
]88K L
{88M N
$str88O T
,88T U
$str88V [
,88[ \
$str88] a
,88a b
$str88c g
}88h i
,88i j
StringSplitOptions88k }
.88} ~
RemoveEmptyEntries	88~ 
)
88 
;
88 
string::  &
artist::' -
=::. /
splitted::0 8
.::8 9
Length::9 ?
==::@ B
$num::C D
?::E F
Localization::G S
.::S T
UnknownArtist::T a
:::b c
splitted::d l
[::l m
$num::m n
]::n o
;::o p
string;;  &
title;;' ,
=;;- .
splitted;;/ 7
[;;7 8
splitted;;8 @
.;;@ A
Length;;A G
==;;H J
$num;;K L
?;;M N
$num;;O P
:;;Q R
$num;;S T
];;T U
;;;U V

GlobalData<<  *
.<<* +
Current<<+ 2
.<<2 3
	AudioTags<<3 <
.<<< =
Add<<= @
(<<@ A
filepath<<A I
,<<I J
new<<K N
MediaSourceTag<<O ]
(<<] ^
)<<^ _
{<<` a
Author<<b h
=<<i j
artist<<k q
,<<q r
Title<<s x
=<<y z
title	<<{ 
}
<< 
)
<< 
;
<< 
}== 
}>> 
}?? 

GlobalData@@ 
.@@ 
Current@@ &
.@@& '
SaveTags@@' /
(@@/ 0
)@@0 1
;@@1 2
GlobalAA 
.AA 
ApplicationAA &
.AA& '
ShowSnackbarAA' 3
(AA3 4
LocalizationAA4 @
.AA@ A
ReadyAAA F
)AAF G
;AAG H
}BB 
elseCC 
ifCC 
(CC 
indexCC 
==CC !
$numCC" #
)CC# $
{DD 
stringEE 
[EE 
]EE 
filesEE "
=EE# $
	DirectoryEE% .
.EE. /
GetFilesEE/ 7
(EE7 8

GlobalDataEE8 B
.EEB C
CurrentEEC J
.EEJ K
DataPathEEK S
,EES T
$strEEU ^
)EE^ _
;EE_ `
foreachGG 
(GG 
stringGG #
fileGG$ (
inGG) +
filesGG, 1
)GG1 2
{HH 
FileII 
.II 
DeleteII #
(II# $
fileII$ (
)II( )
;II) *
}JJ 
UILL 
.LL 
GlobalLL 
.LL 
ApplicationLL )
.LL) *
ShowSnackbarLL* 6
(LL6 7
LocalizationLL7 C
.LLC D
ReadyLLD I
)LLI J
;LLJ K
}MM 
elseNN 
ifNN 
(NN 
indexNN 
==NN !
$numNN" #
)NN# $
{OO 
GlobalPP 
.PP 
ApplicationPP &
.PP& '
AddFolderToScanPP' 6
(PP6 7
)PP7 8
;PP8 9
}QQ 
elseRR 
ifRR 
(RR 
indexRR 
==RR !
$numRR" #
)RR# $
{SS 
stringTT 
newLangTT "
=TT# $
awaitTT% *
GlobalTT+ 1
.TT1 2
PageTT2 6
.TT6 7
DisplayActionSheetTT7 I
(TTI J
LocalizationTTJ V
.TTV W
	Settings5TTW `
,TT` a
LocalizationTTb n
.TTn o
CancelTTo u
,TTu v
nullTTw {
,TT{ |
Localization	TT} 
.
TT 

LanguagePL
TT 
,
TT 
Localization
TT ¢
.
TT¢ £

LanguageEN
TT£ ­
,
TT­ ®
Localization
TT¯ »
.
TT» ¼

LanguageRU
TT¼ Æ
)
TTÆ Ç
;
TTÇ È
ifUU 
(UU 
newLangUU 
==UU  "
LocalizationUU# /
.UU/ 0

LanguagePLUU0 :
)UU: ;

GlobalDataVV "
.VV" #
CurrentVV# *
.VV* +
CurrentLanguageVV+ :
=VV; <
$strVV= A
;VVA B
elseWW 
ifWW 
(WW 
newLangWW $
==WW% '
LocalizationWW( 4
.WW4 5

LanguageENWW5 ?
)WW? @

GlobalDataXX "
.XX" #
CurrentXX# *
.XX* +
CurrentLanguageXX+ :
=XX; <
$strXX= A
;XXA B
elseYY 
ifYY 
(YY 
newLangYY $
==YY% '
LocalizationYY( 4
.YY4 5

LanguageRUYY5 ?
)YY? @

GlobalDataZZ "
.ZZ" #
CurrentZZ# *
.ZZ* +
CurrentLanguageZZ+ :
=ZZ; <
$strZZ= A
;ZZA B
Localization\\  
.\\  !
RefreshLanguage\\! 0
(\\0 1
)\\1 2
;\\2 3

GlobalData]] 
.]] 
Current]] &
.]]& '

SaveConfig]]' 1
(]]1 2
)]]2 3
;]]3 4
Global^^ 
.^^ 
Application^^ &
.^^& '
ShowSnackbar^^' 3
(^^3 4
Localization^^4 @
.^^@ A
SettingsChanges^^A P
)^^P Q
;^^Q R
}__ 
else`` 
if`` 
(`` 
index`` 
==`` !
$num``" #
)``# $
{aa 
stringbb 
	newOptionbb $
=bb% &
awaitbb' ,
Globalbb- 3
.bb3 4
Pagebb4 8
.bb8 9
DisplayActionSheetbb9 K
(bbK L
LocalizationbbL X
.bbX Y
AutoDownloadbbY e
,bbe f
Localizationbbg s
.bbs t
Cancelbbt z
,bbz {
null	bb| 
,
bb 
Localization
bb 
.
bb 
Yes
bb 
,
bb 
Localization
bb  
.
bb  ¡
No
bb¡ £
)
bb£ ¤
;
bb¤ ¥
ifdd 
(dd 
	newOptiondd !
==dd" $
Localizationdd% 1
.dd1 2
Yesdd2 5
)dd5 6
{ee 

GlobalDataff "
.ff" #
Currentff# *
.ff* +
AutoDownloadff+ 7
=ff8 9
trueff: >
;ff> ?
(gg 
ParentListViewgg '
.gg' (
NItemSourcegg( 3
[gg3 4
$numgg4 5
]gg5 6
asgg7 9
SettingsModelgg: G
)ggG H
.ggH I
DescriptionggI T
=ggU V
LocalizationggW c
.ggc d
Yesggd g
;ggg h
}hh 
elseii 
ifii 
(ii 
	newOptionii &
==ii' )
Localizationii* 6
.ii6 7
Noii7 9
)ii9 :
{jj 

GlobalDatakk "
.kk" #
Currentkk# *
.kk* +
AutoDownloadkk+ 7
=kk8 9
falsekk: ?
;kk? @
(ll 
ParentListViewll '
.ll' (
NItemSourcell( 3
[ll3 4
$numll4 5
]ll5 6
asll7 9
SettingsModelll: G
)llG H
.llH I
DescriptionllI T
=llU V
LocalizationllW c
.llc d
Nolld f
;llf g
}mm 

GlobalDatann 
.nn 
Currentnn &
.nn& '

SaveConfignn' 1
(nn1 2
)nn2 3
;nn3 4
Globaloo 
.oo 
Applicationoo &
.oo& '
ShowSnackbaroo' 3
(oo3 4
Localizationoo4 @
.oo@ A
SettingsChangesooA P
)ooP Q
;ooQ R
}pp 
elseqq 
ifqq 
(qq 
indexqq 
==qq !
$numqq" #
)qq# $
{rr 
stringss 
	newOptionss $
=ss% &
awaitss' ,
Globalss- 3
.ss3 4
Pagess4 8
.ss8 9
DisplayActionSheetss9 K
(ssK L
LocalizationssL X
.ssX Y
	Settings3ssY b
,ssb c
Localizationssd p
.ssp q
Cancelssq w
,ssw x
nullssy }
,ss} ~
Localization	ss 
.
ss 
Yes
ss 
,
ss 
Localization
ss 
.
ss 
No
ss  
)
ss  ¡
;
ss¡ ¢
ifuu 
(uu 
	newOptionuu !
==uu" $
Localizationuu% 1
.uu1 2
Yesuu2 5
)uu5 6
{vv 

GlobalDataww "
.ww" #
Currentww# *
.ww* +
IgnoreAutoFocusww+ :
=ww; <
trueww= A
;wwA B
(xx 
ParentListViewxx '
.xx' (
NItemSourcexx( 3
[xx3 4
$numxx4 5
]xx5 6
asxx7 9
SettingsModelxx: G
)xxG H
.xxH I
DescriptionxxI T
=xxU V
LocalizationxxW c
.xxc d
Yesxxd g
;xxg h
}yy 
elsezz 
ifzz 
(zz 
	newOptionzz &
==zz' )
Localizationzz* 6
.zz6 7
Nozz7 9
)zz9 :
{{{ 

GlobalData|| "
.||" #
Current||# *
.||* +
IgnoreAutoFocus||+ :
=||; <
false||= B
;||B C
(}} 
ParentListView}} '
.}}' (
NItemSource}}( 3
[}}3 4
$num}}4 5
]}}5 6
as}}7 9
SettingsModel}}: G
)}}G H
.}}H I
Description}}I T
=}}U V
Localization}}W c
.}}c d
No}}d f
;}}f g
}~~ 

GlobalData 
. 
Current &
.& '

SaveConfig' 1
(1 2
)2 3
;3 4
Global
 
.
 
Application
 &
.
& '
ShowSnackbar
' 3
(
3 4
Localization
4 @
.
@ A
Ready
A F
)
F G
;
G H
}
 
}
 
}
 	
}
 
} ñ
BD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Models\SuggestionModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Models "
{ 
public 

class 
SuggestionModel  
:! "
NListViewItem# 0
{		 
private 
string 
text 
; 
public 
string 
Text 
{ 	
get 
=> 
text 
; 
set 
{ 
text 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
private 
ICommand 
pressedCommand '
;' (
public 
ICommand 
PressedCommand &
{ 	
get 
{ 
if 
( 
pressedCommand "
==# %
null& *
)* +
pressedCommand "
=# $
new% (
ActionCommand) 6
(6 7
async7 <
(= >
	parameter> G
)G H
=>I K
{   
await!! 
Global!! $
.!!$ %
NavigationInstance!!% 7
.!!7 8
PushModalAsync!!8 F
(!!F G
new!!G J
	ModalPage!!K T
(!!T U
new!!U X
Views!!Y ^
.!!^ _
TV!!_ a
.!!a b
SearchResultPage!!b r
(!!r s
Text!!s w
)!!w x
,!!x y
Text!!z ~
)!!~ 
)	!! 
;
!! 
}"" 
)"" 
;"" 
return## 
pressedCommand## %
;##% &
}$$ 
}%% 	
public(( 
override(( 
void(( 
FocusAction(( (
(((( )
)(() *
{)) 	
PressedCommand** 
.** 
Execute** "
(**" #
null**# '
)**' (
;**( )
}++ 	
}-- 
}.. ¶
=D:\Projekty\CS\Newtone\Newtone.Mobile.UI\Models\TrackModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Models "
{ 
public 

class 

TrackModel 
: 
NListViewItem +
{ 
private 
string 
filePath 
;  
private 
string 
title 
; 
private 
string 
duration 
;  
private 
string 
artist 
; 
private 
bool 
	isVisible 
; 
private 
string 
trackString "
;" #
private 
string 
playlistName #
;# $
private 
ImageSource 
image !
;! "
private 
bool 
allowContextMenu %
;% &
public 
string 
PlaylistName "
{   	
get!! 
=>!! 
playlistName!! 
;!!  
set"" 
{## 
playlistName$$ 
=$$ 
value$$ $
;$$$ %
OnPropertyChanged%% !
(%%! "
)%%" #
;%%# $
OnPropertyChanged&& !
(&&! "
(&&" #
)&&# $
=>&&% '
Info&&( ,
)&&, -
;&&- .
}'' 
}(( 	
public)) 
string)) 
Info)) 
{** 	
get++ 
{,, 
return-- 
string-- 
.-- 
Concat-- $
(--$ %
FilePath--% -
,--- .

GlobalData--/ 9
.--9 :
	SEPARATOR--: C
,--C D
PlaylistName--E Q
)--Q R
;--R S
}.. 
}// 	
public11 
bool11 
	IsVisible11 
{22 	
get33 
{33 
return33 
	isVisible33 "
;33" #
}33$ %
set44 
{55 
if66 
(66 
	isVisible66 
!=66  
value66! &
)66& '
{77 
	isVisible88 
=88 
value88  %
;88% &
OnPropertyChanged99 %
(99% &
)99& '
;99' (
}:: 
};; 
}<< 	
public>> 
string>> 
TrackString>> !
{?? 	
get@@ 
{AA 
returnBB 
trackStringBB "
;BB" #
}CC 
setDD 
{EE 
stringFF 
newValueFF 
=FF  !
valueFF" '
;FF' (
ifGG 
(GG 
newValueGG 
!=GG 
trackStringGG  +
)GG+ ,
{HH 
trackStringII 
=II  !
newValueII" *
;II* +
OnPropertyChangedJJ %
(JJ% &
)JJ& '
;JJ' (
}KK 
}LL 
}MM 	
publicNN 
ImageSourceNN 
ImageNN  
{OO 	
getPP 
=>PP 
imagePP 
;PP 
setQQ 
{RR 
imageSS 
=SS 
valueSS 
;SS 
OnPropertyChangedTT !
(TT! "
)TT" #
;TT# $
}UU 
}VV 	
publicXX 
boolXX 
AllowContextMenuXX $
{YY 	
getZZ 
=>ZZ 
allowContextMenuZZ #
;ZZ# $
set[[ 
{\\ 
allowContextMenu]]  
=]]! "
value]]# (
;]]( )
OnPropertyChanged^^ !
(^^! "
)^^" #
;^^# $
}__ 
}`` 	
publicbb 
stringbb 
FilePathbb 
{cc 	
getdd 
=>dd 
filePathdd 
;dd 
setee 
{ff 
filePathgg 
=gg 
valuegg  
;gg  !
OnPropertyChangedhh !
(hh! "
)hh" #
;hh# $
}ii 
}jj 	
publickk 
stringkk 
Titlekk 
{ll 	
getmm 
=>mm 
titlemm 
;mm 
setnn 
{oo 
titlepp 
=pp 
valuepp 
;pp 
OnPropertyChangedqq !
(qq! "
)qq" #
;qq# $
}rr 
}ss 	
publictt 
stringtt 
Durationtt 
{uu 	
getvv 
=>vv 
durationvv 
;vv 
setww 
{xx 
durationyy 
=yy 
valueyy  
;yy  !
OnPropertyChangedzz !
(zz! "
)zz" #
;zz# $
}{{ 
}|| 	
public~~ 
string~~ 
Artist~~ 
{ 	
get
 
=>
 
artist
 
;
 
set
 
{
 
artist
 
=
 
value
 
;
 
OnPropertyChanged
 !
(
! "
)
" #
;
# $
}
 
}
 	
public
 
bool
 
CurrentPlaylist
 #
{
$ %
get
& )
;
) *
}
+ ,
private
 
ICommand
 
openMenu
 !
;
! "
public
 
ICommand
 
OpenMenu
  
{
 	
get
 
{
 
if
 
(
 
openMenu
 
==
 
null
  $
)
$ %
openMenu
 
=
 
new
 "
ActionCommand
# 0
(
0 1
	parameter
1 :
=>
; =
{
  
ContextMenuBuilder
 *
.
* +
BuildForTrack
+ 8
(
8 9
(
9 :
Xamarin
: A
.
A B
Forms
B G
.
G H
View
H L
)
L M
	parameter
M V
,
V W
Info
X \
)
\ ]
;
] ^
}
 
)
 
;
 
return
 
openMenu
 
;
  
}
 
}
 	
public
 

TrackModel
 
(
 
Newtone
 !
.
! "
Core
" &
.
& '
Models
' -
.
- .

TrackModel
. 8
model
9 >
,
> ?
string
@ F
playlist
G O
=
P Q
$str
R T
,
T U
bool
V Z
allowContextMenu
[ k
=
l m
true
n r
,
r s
bool
t x
currentPlaylisty 
= 
false 
) 
{
 	
this
 
.
 
Artist
 
=
 
model
 
.
  
Artist
  &
;
& '
this
 
.
 
Duration
 
=
 
model
 !
.
! "
Duration
" *
;
* +
this
 
.
 
FilePath
 
=
 
model
 !
.
! "
FilePath
" *
;
* +
this
   
.
   
Title
   
=
   
model
   
.
   
Title
   $
;
  $ %
this
¡¡ 
.
¡¡ 
PlaylistName
¡¡ 
=
¡¡ 
playlist
¡¡  (
;
¡¡( )
this
¢¢ 
.
¢¢ 
AllowContextMenu
¢¢ !
=
¢¢" #
allowContextMenu
¢¢$ 4
;
¢¢4 5
this
££ 
.
££ 
CurrentPlaylist
££  
=
££! "
currentPlaylist
££# 2
;
££2 3
if
¥¥ 
(
¥¥ 
FilePath
¥¥ 
.
¥¥ 
Length
¥¥ 
>
¥¥  !
$num
¥¥" $
)
¥¥$ %
this
¦¦ 
.
¦¦ 
Image
¦¦ 
=
¦¦ 
(
¦¦ 

GlobalData
¦¦ (
.
¦¦( )
Current
¦¦) 0
.
¦¦0 1
Audios
¦¦1 7
[
¦¦7 8
FilePath
¦¦8 @
]
¦¦@ A
.
¦¦A B
Image
¦¦B G
==
¦¦H J
null
¦¦K O
||
¦¦P R

GlobalData
¦¦S ]
.
¦¦] ^
Current
¦¦^ e
.
¦¦e f
Audios
¦¦f l
[
¦¦l m
FilePath
¦¦m u
]
¦¦u v
.
¦¦v w
Image
¦¦w |
.
¦¦| }
Length¦¦} 
==¦¦ 
$num¦¦ 
)¦¦ 
?¦¦ 
ImageSource¦¦ 
.¦¦ 
FromFile¦¦  
(¦¦  ¡
$str¦¦¡ ±
)¦¦± ²
:¦¦³ ´
ImageProcessing¦¦µ Ä
.¦¦Ä Å
	FromArray¦¦Å Î
(¦¦Î Ï

GlobalData¦¦Ï Ù
.¦¦Ù Ú
Current¦¦Ú á
.¦¦á â
Audios¦¦â è
[¦¦è é
FilePath¦¦é ñ
]¦¦ñ ò
.¦¦ò ó
Image¦¦ó ø
)¦¦ø ù
;¦¦ù ú
else
§§ 
{
¨¨ 
Newtone
©© 
.
©© 
Core
©© 
.
©© 
Media
©© "
.
©©" #
MediaSource
©©# .
source
©©/ 5
=
©©6 7
null
©©8 <
;
©©< =
if
ªª 
(
ªª 

GlobalData
ªª 
.
ªª 
Current
ªª &
.
ªª& '
SavedTracks
ªª' 2
.
ªª2 3
ContainsKey
ªª3 >
(
ªª> ?
FilePath
ªª? G
)
ªªG H
)
ªªH I
source
«« 
=
«« 

GlobalData
«« '
.
««' (
Current
««( /
.
««/ 0
SavedTracks
««0 ;
[
««; <
FilePath
««< D
]
««D E
;
««E F
else
¬¬ 
source
­­ 
=
­­ 

GlobalData
­­ '
.
­­' (
Current
­­( /
.
­­/ 0
CurrentPlaylist
­­0 ?
.
­­? @
Find
­­@ D
(
­­D E
src
­­E H
=>
­­I K
src
­­L O
.
­­O P
FilePath
­­P X
==
­­Y [
model
­­\ a
.
­­a b
FilePath
­­b j
)
­­j k
;
­­k l
if
¯¯ 
(
¯¯ 
source
¯¯ 
!=
¯¯ 
null
¯¯ "
)
¯¯" #
this
°° 
.
°° 
Image
°° 
=
°°  
(
°°! "
source
°°" (
.
°°( )
Image
°°) .
==
°°/ 1
null
°°2 6
||
°°7 9
source
°°: @
.
°°@ A
Image
°°A F
.
°°F G
Length
°°G M
==
°°N P
$num
°°Q R
)
°°R S
?
°°T U
ImageSource
°°V a
.
°°a b
FromFile
°°b j
(
°°j k
$str
°°k {
)
°°{ |
:
°°} ~
ImageProcessing°° 
.°° 
	FromArray°° 
(°° 
source°° 
.°°  
Image°°  ¥
)°°¥ ¦
;°°¦ §
}
±± 
}
²² 	
public
¶¶ 

TrackModel
¶¶ 
CheckChanges
¶¶ &
(
¶¶& '
)
¶¶' (
{
·· 	
	IsVisible
¸¸ 
=
¸¸ 
FilePath
¸¸  
==
¸¸! #

GlobalData
¸¸$ .
.
¸¸. /
Current
¸¸/ 6
.
¸¸6 7
MediaSourcePath
¸¸7 F
;
¸¸F G
TrackString
¹¹ 
=
¹¹ 
Artist
¹¹  
==
¹¹! #
Localization
¹¹$ 0
.
¹¹0 1
UnknownArtist
¹¹1 >
?
¹¹? @
Title
¹¹A F
:
¹¹G H
string
¹¹I O
.
¹¹O P
Concat
¹¹P V
(
¹¹V W
Artist
¹¹W ]
,
¹¹] ^
$str
¹¹_ d
,
¹¹d e
Title
¹¹f k
)
¹¹k l
;
¹¹l m
return
ºº 
this
ºº 
;
ºº 
}
»» 	
public
½½ 
override
½½ 
void
½½ 
FocusAction
½½ (
(
½½( )
)
½½) *
{
¾¾ 	
int
¿¿ 
index
¿¿ 
=
¿¿ 
-
¿¿ 
$num
¿¿ 
;
¿¿ 
List
ÀÀ 
<
ÀÀ 
MediaSource
ÀÀ 
>
ÀÀ 
items
ÀÀ #
=
ÀÀ$ %
null
ÀÀ& *
;
ÀÀ* +
if
ÂÂ 
(
ÂÂ 
CurrentPlaylist
ÂÂ 
)
ÂÂ 
{
ÃÃ 
index
ÄÄ 
=
ÄÄ 

GlobalData
ÄÄ "
.
ÄÄ" #
Current
ÄÄ# *
.
ÄÄ* +
CurrentPlaylist
ÄÄ+ :
.
ÄÄ: ;
	FindIndex
ÄÄ; D
(
ÄÄD E
source
ÄÄE K
=>
ÄÄL N
source
ÄÄO U
.
ÄÄU V
FilePath
ÄÄV ^
==
ÄÄ_ a
filePath
ÄÄb j
)
ÄÄj k
;
ÄÄk l
items
ÅÅ 
=
ÅÅ 

GlobalData
ÅÅ "
.
ÅÅ" #
Current
ÅÅ# *
.
ÅÅ* +
CurrentPlaylist
ÅÅ+ :
;
ÅÅ: ;
}
ÆÆ 
else
ÇÇ 
{
ÈÈ 
if
ÉÉ 
(
ÉÉ 
playlistName
ÉÉ 
==
ÉÉ  "
$str
ÉÉ# %
)
ÉÉ% &
{
ÊÊ 
List
ËË 
<
ËË 

TrackModel
ËË #
>
ËË# $
models
ËË% +
=
ËË, -
new
ËË. 1
List
ËË2 6
<
ËË6 7

TrackModel
ËË7 A
>
ËËA B
(
ËËB C
)
ËËC D
;
ËËD E
foreach
ÌÌ 
(
ÌÌ 
var
ÌÌ  
track
ÌÌ! &
in
ÌÌ' )

GlobalData
ÌÌ* 4
.
ÌÌ4 5
Current
ÌÌ5 <
.
ÌÌ< =
Audios
ÌÌ= C
.
ÌÌC D
Values
ÌÌD J
.
ÌÌJ K
ToList
ÌÌK Q
(
ÌÌQ R
)
ÌÌR S
)
ÌÌS T
{
ÍÍ 
models
ÎÎ 
.
ÎÎ 
Add
ÎÎ "
(
ÎÎ" #
new
ÎÎ# &

TrackModel
ÎÎ' 1
(
ÎÎ1 2
track
ÎÎ2 7
)
ÎÎ7 8
.
ÎÎ8 9
CheckChanges
ÎÎ9 E
(
ÎÎE F
)
ÎÎF G
)
ÎÎG H
;
ÎÎH I
}
ÏÏ 
items
ÑÑ 
=
ÑÑ 
models
ÑÑ "
.
ÑÑ" #
OrderBy
ÑÑ# *
(
ÑÑ* +
item
ÑÑ+ /
=>
ÑÑ0 2
item
ÑÑ3 7
.
ÑÑ7 8
TrackString
ÑÑ8 C
)
ÑÑC D
.
ÑÑD E
Select
ÑÑE K
(
ÑÑK L
item
ÑÑL P
=>
ÑÑQ S

GlobalData
ÑÑT ^
.
ÑÑ^ _
Current
ÑÑ_ f
.
ÑÑf g
Audios
ÑÑg m
[
ÑÑm n
item
ÑÑn r
.
ÑÑr s
FilePath
ÑÑs {
]
ÑÑ{ |
)
ÑÑ| }
.
ÑÑ} ~
ToListÑÑ~ 
(ÑÑ 
)ÑÑ 
;ÑÑ 
index
ÒÒ 
=
ÒÒ 
items
ÒÒ !
.
ÒÒ! "
	FindIndex
ÒÒ" +
(
ÒÒ+ ,
item
ÒÒ, 0
=>
ÒÒ1 3
item
ÒÒ4 8
.
ÒÒ8 9
FilePath
ÒÒ9 A
==
ÒÒB D
FilePath
ÒÒE M
)
ÒÒM N
;
ÒÒN O
}
ÓÓ 
else
ÔÔ 
{
ÕÕ 
items
ÖÖ 
=
ÖÖ 

GlobalData
ÖÖ &
.
ÖÖ& '
Current
ÖÖ' .
.
ÖÖ. /
	Playlists
ÖÖ/ 8
[
ÖÖ8 9
PlaylistName
ÖÖ9 E
]
ÖÖE F
.
ÖÖF G
Select
ÖÖG M
(
ÖÖM N
item
ÖÖN R
=>
ÖÖS U

GlobalData
ÖÖV `
.
ÖÖ` a
Current
ÖÖa h
.
ÖÖh i
Audios
ÖÖi o
[
ÖÖo p
item
ÖÖp t
]
ÖÖt u
)
ÖÖu v
.
ÖÖv w
ToList
ÖÖw }
(
ÖÖ} ~
)
ÖÖ~ 
;ÖÖ 
index
×× 
=
×× 
items
×× !
.
××! "
	FindIndex
××" +
(
××+ ,
item
××, 0
=>
××1 3
item
××4 8
.
××8 9
FilePath
××9 A
==
××B D
FilePath
××E M
)
××M N
;
××N O
}
ØØ 
}
ÙÙ 
if
ÚÚ 
(
ÚÚ 
index
ÚÚ 
>=
ÚÚ 
$num
ÚÚ 
&&
ÚÚ 
index
ÚÚ #
<
ÚÚ$ %
items
ÚÚ& +
.
ÚÚ+ ,
Count
ÚÚ, 1
)
ÚÚ1 2
{
ÛÛ 

GlobalData
ÜÜ 
.
ÜÜ 
Current
ÜÜ "
.
ÜÜ" #
MediaPlayer
ÜÜ# .
.
ÜÜ. /
LoadPlaylist
ÜÜ/ ;
(
ÜÜ; <
items
ÜÜ< A
.
ÜÜA B
Select
ÜÜB H
(
ÜÜH I
item
ÜÜI M
=>
ÜÜN P
item
ÜÜQ U
.
ÜÜU V
FilePath
ÜÜV ^
)
ÜÜ^ _
.
ÜÜ_ `
ToList
ÜÜ` f
(
ÜÜf g
)
ÜÜg h
,
ÜÜh i
index
ÜÜj o
,
ÜÜo p
true
ÜÜq u
,
ÜÜu v
true
ÜÜw {
)
ÜÜ{ |
;
ÜÜ| }
}
ÝÝ 
}
ÞÞ 	
public
àà 
override
àà 
void
àà 
LongFocusAction
àà ,
(
àà, -
)
àà- .
{
áá 	
OpenMenu
ââ 
.
ââ 
Execute
ââ 
(
ââ 
this
ââ !
.
ââ! "
ParentListView
ââ" 0
.
ââ0 1 
GetCurrentItemView
ââ1 C
(
ââC D
)
ââD E
)
ââE F
;
ââF G
}
ãã 	
}
åå 
}ææ 
FD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Processing\ImageProcessing.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

Processing &
{ 
public 

static 
class 
ImageProcessing '
{ 
public		 
static		 
ImageSource		 !
Blur		" &
(		& '
byte		' +
[		+ ,
]		, -
source		. 4
)		4 5
{

 	
return 
Global 
. 
ImageProcessing )
.) *
Blur* .
(. /
source/ 5
)5 6
;6 7
} 	
public 
static 
ImageSource !
Blur" &
(& '
ImageSource' 2
source3 9
)9 :
{ 	
return 
Global 
. 
ImageProcessing )
.) *
Blur* .
(. /
source/ 5
)5 6
;6 7
} 	
public 
static 
ImageSource !
	FromArray" +
(+ ,
byte, 0
[0 1
]1 2
source3 9
)9 :
{ 	
return 
source 
== 
null !
?" #
ImageSource$ /
./ 0
FromFile0 8
(8 9
$str9 I
)I J
:K L
ImageSourceM X
.X Y

FromStreamY c
(c d
(d e
)e f
=>g i
newj m
MemoryStreamn z
(z {
source	{ 
)
 
)
 
;
 
} 	
} 
} /
FD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\ArtistViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
{ 
public 

class 
ArtistViewModel  
{ 
public  
ObservableCollection #
<# $
ArtistModel$ /
>/ 0
Items1 6
{7 8
get9 <
;< =
private> E
setF I
;I J
}K L
public  
ObservableCollection #
<# $
NListViewItem$ 1
>1 2
	ListItems3 <
{= >
get? B
;B C
privateD K
setL O
;O P
}Q R
public 
Func 
< 
NListViewItem !
,! "
View# '
>' (
ItemTemplate) 5
{ 	
get 
{ 
return 
item 
=> 
new "
Views# (
.( )
TV) +
.+ ,
	ViewCells, 5
.5 6
ArtistGridItem6 D
(D E
itemE I
)I J
;J K
} 
} 	
public 
bool 
IsInitializing "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
ArtistViewModel 
( 
)  
{ 	
Items 
= 
new  
ObservableCollection ,
<, -
ArtistModel- 8
>8 9
(9 :
): ;
;; <
	ListItems   
=   
new    
ObservableCollection   0
<  0 1
NListViewItem  1 >
>  > ?
(  ? @
)  @ A
;  A B

Initialize!! 
(!! 
)!! 
;!! 
}"" 	
public%% 
void%% 

Initialize%% 
(%% 
)%%  
{&& 	
IsInitializing'' 
='' 
true'' !
;''! "
Items(( 
.(( 
Clear(( 
((( 
)(( 
;(( 
	ListItems)) 
.)) 
Clear)) 
()) 
))) 
;)) 
List** 
<** 
string** 
>** 

beforeSort** #
=**$ %
new**& )
List*** .
<**. /
string**/ 5
>**5 6
(**6 7
)**7 8
;**8 9
string++ 
unknown++ 
=++ 
null++ !
;++! "
foreach-- 
(-- 
string-- 
artist-- "
in--# %

GlobalData--& 0
.--0 1
Current--1 8
.--8 9
Artists--9 @
.--@ A
Keys--A E
)--E F
{.. 
if// 
(// 
artist// 
==// 
Localization// *
.//* +
UnknownArtist//+ 8
)//8 9
unknown00 
=00 
artist00 $
;00$ %
else11 

beforeSort22 
.22 
Add22 "
(22" #
artist22# )
)22) *
;22* +
}33 
List55 
<55 
string55 
>55 
	afterSort55 "
=55# $

beforeSort55% /
.55/ 0
OrderBy550 7
(557 8
o558 9
=>55: <
o55= >
)55> ?
.55? @
ToList55@ F
(55F G
)55G H
;55H I
if77 
(77 
unknown77 
!=77 
null77 
)77  
	afterSort88 
.88 
Add88 
(88 
unknown88 %
)88% &
;88& '
foreach:: 
(:: 
var:: 

artistName:: #
in::$ &
	afterSort::' 0
)::0 1
{;; 
ImageSource<< 
image<< !
=<<" #
ImageSource<<$ /
.<</ 0
FromFile<<0 8
(<<8 9
$str<<9 I
)<<I J
;<<J K
foreach== 
(== 
string== 
filePath==  (
in==) +

GlobalData==, 6
.==6 7
Current==7 >
.==> ?
Artists==? F
[==F G

artistName==G Q
]==Q R
)==R S
{>> 
var?? 
source?? 
=??  

GlobalData??! +
.??+ ,
Current??, 3
.??3 4
Audios??4 :
[??: ;
filePath??; C
]??C D
;??D E
if@@ 
(@@ 
source@@ 
.@@ 
Image@@ $
!=@@% '
null@@( ,
)@@, -
{AA 
imageBB 
=BB 
ImageProcessingBB  /
.BB/ 0
	FromArrayBB0 9
(BB9 :
sourceBB: @
.BB@ A
ImageBBA F
)BBF G
;BBG H
breakCC 
;CC 
}DD 
}EE 
ItemsGG 
.GG 
AddGG 
(GG 
newGG 
ArtistModelGG )
(GG) *
)GG* +
{GG, -
ImageGG. 3
=GG4 5
imageGG6 ;
,GG; <
NameGG= A
=GGB C

artistNameGGD N
,GGN O

TrackCountGGP Z
=GG[ \

GlobalDataGG] g
.GGg h
CurrentGGh o
.GGo p
ArtistsGGp w
[GGw x

artistName	GGx 
]
GG 
.
GG 
Count
GG 
}
GG 
)
GG 
;
GG 
	ListItemsHH 
.HH 
AddHH 
(HH 
ItemsHH #
[HH# $
^HH$ %
$numHH% &
]HH& '
)HH' (
;HH( )
}II 
IsInitializingJJ 
=JJ 
falseJJ "
;JJ" #
}KK 	
}MM 
}NN ª;
OD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\CurrentPlaylistViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
{ 
public 

class $
CurrentPlaylistViewModel )
:* +
PropertyChangedBase, ?
{ 
private 
bool 
isRefreshing !
;! "
public  
ObservableCollection #
<# $

TrackModel$ .
>. /

TrackItems0 :
{; <
get= @
;@ A
setB E
;E F
}G H
public 
bool 
IsRefreshing  
{ 	
get 
=> 
isRefreshing 
;  
set 
{ 
isRefreshing 
= 
value $
;$ %
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
public 
Func 
< 
NListViewItem !
,! "
View# '
>' (
ItemTemplate) 5
{   	
get!! 
=>!! 
item!! 
=>!! 
new!! 
Views!! $
.!!$ %
TV!!% '
.!!' (
	ViewCells!!( 1
.!!1 2
TrackViewCell!!2 ?
(!!? @
item!!@ D
)!!D E
;!!E F
}"" 	
private%% 
ICommand%% 
refresh%%  
;%%  !
public&& 
ICommand&& 
Refresh&& 
{'' 	
get(( 
{)) 
if** 
(** 
refresh** 
==** 
null** #
)**# $
refresh++ 
=++ 
new++ !
ActionCommand++" /
(++/ 0
	parameter++0 9
=>++: <
{,, 
IsRefreshing-- $
=--% &
true--' +
;--+ ,

TrackItems.. "
=..# $
new..% ( 
ObservableCollection..) =
<..= >

TrackModel..> H
>..H I
(..I J
)..J K
;..K L
foreach// 
(//  !
var//! $
track//% *
in//+ -

GlobalData//. 8
.//8 9
Current//9 @
.//@ A
CurrentPlaylist//A P
)//P Q
{00 

TrackItems11 &
.11& '
Add11' *
(11* +
new11+ .

TrackModel11/ 9
(119 :
track11: ?
,11? @
$str11A C
,11C D
false11E J
,11J K
true11L P
)11P Q
)11Q R
;11R S
}22 
IsRefreshing33 $
=33% &
false33' ,
;33, -
}44 
)44 
;44 
return55 
refresh55 
;55 
}66 
}77 	
private99 
ICommand99 
itemSelected99 %
;99% &
public:: 
ICommand:: 
ItemSelected:: $
{;; 	
get<< 
{== 
if>> 
(>> 
itemSelected>>  
==>>! #
null>>$ (
)>>( )
itemSelected??  
=??! "
new??# &
ActionCommand??' 4
(??4 5
	parameter??5 >
=>??? A
{@@ 
intAA 
indexAA !
=AA" #
(AA$ %
intAA% (
)AA( )
	parameterAA) 2
;AA2 3
ifBB 
(BB 
indexBB !
>=BB" $
$numBB% &
&&BB' )
indexBB* /
<BB0 1

TrackItemsBB2 <
.BB< =
CountBB= B
)BBB C
{CC 

GlobalDataDD &
.DD& '
CurrentDD' .
.DD. /
MediaPlayerDD/ :
.DD: ;
LoadPlaylistDD; G
(DDG H

TrackItemsDDH R
.DDR S
SelectDDS Y
(DDY Z
itemDDZ ^
=>DD_ a
itemDDb f
.DDf g
FilePathDDg o
)DDo p
.DDp q
ToListDDq w
(DDw x
)DDx y
,DDy z
index	DD{ 
,
DD 
true
DD 
,
DD 
true
DD 
)
DD 
;
DD 
}EE 
}FF 
)FF 
;FF 
returnGG 
itemSelectedGG #
;GG# $
}HH 
}II 	
publicLL $
CurrentPlaylistViewModelLL '
(LL' (
)LL( )
{MM 	

TrackItemsNN 
=NN 
newNN  
ObservableCollectionNN 1
<NN1 2

TrackModelNN2 <
>NN< =
(NN= >
)NN> ?
;NN? @
foreachOO 
(OO 
varOO 
trackOO 
inOO !

GlobalDataOO" ,
.OO, -
CurrentOO- 4
.OO4 5
CurrentPlaylistOO5 D
)OOD E
{PP 

TrackItemsQQ 
.QQ 
AddQQ 
(QQ 
newQQ "

TrackModelQQ# -
(QQ- .
trackQQ. 3
,QQ3 4
$strQQ5 7
,QQ7 8
falseQQ9 >
,QQ> ?
trueQQ@ D
)QQD E
)QQE F
;QQF G
}RR 
}SS 	
publicVV 
voidVV &
TrackListView_ItemSelectedVV .
(VV. /
objectVV/ 5
senderVV6 <
,VV< =(
SelectedItemChangedEventArgsVV> Z
eVV[ \
)VV\ ]
{WW 	
ItemSelectedXX 
.XX 
ExecuteXX  
(XX  !
eXX! "
.XX" #
SelectedItemIndexXX# 4
)XX4 5
;XX5 6
ifYY 
(YY 
!YY 
GlobalYY 
.YY 
TVYY 
)YY 
{ZZ 
([[ 
sender[[ 
as[[ 
Xamarin[[ "
.[[" #
Forms[[# (
.[[( )
ListView[[) 1
)[[1 2
.[[2 3
SelectedItem[[3 ?
=[[@ A
null[[B F
;[[F G
}\\ 
}]] 	
public__ 
void__ 
Tick__ 
(__ 
)__ 
{`` 	
foreachaa 
(aa 
varaa 
modelaa 
inaa !

TrackItemsaa" ,
.aa, -
ToListaa- 3
(aa3 4
)aa4 5
)aa5 6
modelbb 
.bb 
CheckChangesbb "
(bb" #
)bb# $
;bb$ %
ifdd 
(dd 

GlobalDatadd 
.dd 
Currentdd !
.dd! "&
CurrentPlaylistNeedRefreshdd" <
)dd< =
{ee 

TrackItemsff 
.ff 
Clearff  
(ff  !
)ff! "
;ff" #
foreachhh 
(hh 
varhh 
trackhh !
inhh" $

GlobalDatahh% /
.hh/ 0
Currenthh0 7
.hh7 8
CurrentPlaylisthh8 G
.hhG H
ToListhhH N
(hhN O
)hhO P
)hhP Q
{ii 

TrackItemsjj 
.jj 
Addjj "
(jj" #
newjj# &

TrackModeljj' 1
(jj1 2
trackjj2 7
,jj7 8
$strjj9 ;
,jj; <
falsejj= B
,jjB C
truejjD H
)jjH I
)jjI J
;jjJ K
}kk 

GlobalDatall 
.ll 
Currentll "
.ll" #&
CurrentPlaylistNeedRefreshll# =
=ll> ?
falsell@ E
;llE F
}mm 
}nn 	
}pp 
}qq ÿ
MD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\CurrentTracksViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
{ 
public 

class "
CurrentTracksViewModel '
:( )
PropertyChangedBase* =
{ 
private 
bool 
isRefreshing !
;! "
private 
readonly 
List 
< 
string $
>$ %
tracks& ,
;, -
private 
readonly 
string 
playlistName  ,
;, -
public  
ObservableCollection #
<# $

TrackModel$ .
>. /

TrackItems0 :
{; <
get= @
;@ A
privateB I
setJ M
;M N
}O P
public  
ObservableCollection #
<# $
NListViewItem$ 1
>1 2
	ListItems3 <
{= >
get? B
;B C
privateD K
setL O
;O P
}Q R
public 
bool 
IsRefreshing  
{ 	
get 
=> 
isRefreshing 
;  
set 
{ 
isRefreshing   
=   
value   $
;  $ %
OnPropertyChanged!! !
(!!! "
)!!" #
;!!# $
}"" 
}## 	
public%% 
Func%% 
<%% 
NListViewItem%% !
,%%! "
View%%# '
>%%' (
ItemTemplate%%) 5
{&& 	
get'' 
=>'' 
item'' 
=>'' 
new'' 
Views'' $
.''$ %
TV''% '
.''' (
	ViewCells''( 1
.''1 2
TrackViewCell''2 ?
(''? @
item''@ D
)''D E
;''E F
}(( 	
private++ 
ICommand++ 
refresh++  
;++  !
public,, 
ICommand,, 
Refresh,, 
{-- 	
get.. 
{// 
if00 
(00 
refresh00 
==00 
null00 #
)00# $
refresh11 
=11 
new11 !
ActionCommand11" /
(11/ 0
	parameter110 9
=>11: <
{22 
IsRefreshing33 $
=33% &
true33' +
;33+ ,
List44 
<44 

TrackModel44 '
>44' (

beforeSort44) 3
=444 5
new446 9
List44: >
<44> ?

TrackModel44? I
>44I J
(44J K
)44K L
;44L M
foreach55 
(55  !
string55! '
track55( -
in55. 0
tracks551 7
)557 8
{66 
if77 
(77  

GlobalData77  *
.77* +
Current77+ 2
.772 3
Audios773 9
.779 :
ContainsKey77: E
(77E F
track77F K
)77K L
)77L M
{88 

beforeSort99  *
.99* +
Add99+ .
(99. /
new99/ 2

TrackModel993 =
(99= >

GlobalData99> H
.99H I
Current99I P
.99P Q
Audios99Q W
[99W X
track99X ]
]99] ^
,99^ _
playlistName99` l
)99l m
.99m n
CheckChanges99n z
(99z {
)99{ |
)99| }
;99} ~
}:: 
};; 

TrackItems<< "
=<<# $
new<<% ( 
ObservableCollection<<) =
<<<= >

TrackModel<<> H
><<H I
(<<I J
playlistName<<J V
==<<W Y
$str<<Z \
?<<] ^

beforeSort<<_ i
.<<i j
OrderBy<<j q
(<<q r
item<<r v
=><<w y
item<<z ~
.<<~ 
TrackString	<< 
)
<< 
.
<< 
ToList
<< 
(
<< 
)
<< 
:
<< 

beforeSort
<< ¡
)
<<¡ ¢
;
<<¢ £
IsRefreshing== $
===% &
false==' ,
;==, -
}>> 
)>> 
;>> 
return?? 
refresh?? 
;?? 
}@@ 
}AA 	
privateCC 
ICommandCC 
itemSelectedCC %
;CC% &
publicDD 
ICommandDD 
ItemSelectedDD $
{EE 	
getFF 
{GG 
ifHH 
(HH 
itemSelectedHH  
==HH! #
nullHH$ (
)HH( )
itemSelectedII  
=II! "
newII# &
ActionCommandII' 4
(II4 5
	parameterII5 >
=>II? A
{JJ 
intKK 
indexKK !
=KK" #
(KK$ %
intKK% (
)KK( )
	parameterKK) 2
;KK2 3
ifLL 
(LL 
indexLL !
>=LL" $
$numLL% &
&&LL' )
indexLL* /
<LL0 1

TrackItemsLL2 <
.LL< =
CountLL= B
)LLB C
{MM 

GlobalDataNN &
.NN& '
CurrentNN' .
.NN. /
MediaPlayerNN/ :
.NN: ;
LoadPlaylistNN; G
(NNG H

TrackItemsNNH R
.NNR S
SelectNNS Y
(NNY Z
itemNNZ ^
=>NN_ a
itemNNb f
.NNf g
FilePathNNg o
)NNo p
.NNp q
ToListNNq w
(NNw x
)NNx y
,NNy z
index	NN{ 
,
NN 
true
NN 
,
NN 
true
NN 
)
NN 
;
NN 
}OO 
}PP 
)PP 
;PP 
returnQQ 
itemSelectedQQ #
;QQ# $
}RR 
}SS 	
publicVV "
CurrentTracksViewModelVV %
(VV% &
ListVV& *
<VV* +
stringVV+ 1
>VV1 2
tracksVV3 9
,VV9 :
stringVV; A
playlistNameVVB N
)VVN O
{WW 	
thisXX 
.XX 
tracksXX 
=XX 
tracksXX  
;XX  !
thisYY 
.YY 
playlistNameYY 
=YY 
playlistNameYY  ,
;YY, -
ListZZ 
<ZZ 

TrackModelZZ 
>ZZ 

beforeSortZZ '
=ZZ( )
newZZ* -
ListZZ. 2
<ZZ2 3

TrackModelZZ3 =
>ZZ= >
(ZZ> ?
)ZZ? @
;ZZ@ A
foreach[[ 
([[ 
string[[ 
track[[ !
in[[" $
tracks[[% +
)[[+ ,
{\\ 
if]] 
(]] 

GlobalData]] 
.]] 
Current]] &
.]]& '
Audios]]' -
.]]- .
ContainsKey]]. 9
(]]9 :
track]]: ?
)]]? @
)]]@ A
{^^ 

beforeSort__ 
.__ 
Add__ "
(__" #
new__# &

TrackModel__' 1
(__1 2

GlobalData__2 <
.__< =
Current__= D
.__D E
Audios__E K
[__K L
track__L Q
]__Q R
,__R S
playlistName__T `
)__` a
.__a b
CheckChanges__b n
(__n o
)__o p
)__p q
;__q r
}`` 
elseaa 
ifaa 
(aa 

GlobalDataaa "
.aa" #
Currentaa# *
.aa* +
SavedTracksaa+ 6
.aa6 7
ContainsKeyaa7 B
(aaB C
trackaaC H
)aaH I
)aaI J
{bb 

beforeSortcc 
.cc 
Addcc "
(cc" #
newcc# &

TrackModelcc' 1
(cc1 2

GlobalDatacc2 <
.cc< =
Currentcc= D
.ccD E
SavedTracksccE P
[ccP Q
trackccQ V
]ccV W
,ccW X
playlistNameccY e
)cce f
.ccf g
CheckChangesccg s
(ccs t
)cct u
)ccu v
;ccv w
}dd 
}ee 

TrackItemsff 
=ff 
newff  
ObservableCollectionff 1
<ff1 2

TrackModelff2 <
>ff< =
(ff= >
playlistNameff> J
==ffK M
$strffN P
?ffQ R

beforeSortffS ]
.ff] ^
OrderByff^ e
(ffe f
itemfff j
=>ffk m
itemffn r
.ffr s
TrackStringffs ~
)ff~ 
.	ff 
ToList
ff 
(
ff 
)
ff 
:
ff 

beforeSort
ff 
)
ff 
;
ff 
	ListItemsgg 
=gg 
newgg  
ObservableCollectiongg 0
<gg0 1
NListViewItemgg1 >
>gg> ?
(gg? @
)gg@ A
;ggA B
foreachii 
(ii 
varii 
itemii 
inii 

TrackItemsii  *
)ii* +
{jj 
	ListItemskk 
.kk 
Addkk 
(kk 
itemkk "
)kk" #
;kk# $
}ll 
}mm 	
publicqq 
voidqq 
Tickqq 
(qq 
)qq 
{rr 	
ifss 
(ss 

TrackItemsss 
.ss 
Countss  
==ss! #
$numss$ %
)ss% &
{tt 
_uu 
=uu 
Globaluu 
.uu 
NavigationInstanceuu -
.uu- .
PopModalAsyncuu. ;
(uu; <
)uu< =
;uu= >
returnvv 
;vv 
}ww 
ifyy 
(yy 

GlobalDatayy 
.yy 
Currentyy !
.yy! " 
PlaylistsNeedRefreshyy" 6
)yy6 7
{zz 

TrackItems{{ 
.{{ 
Clear{{  
({{  !
){{! "
;{{" #
	ListItems|| 
.|| 
Clear|| 
(||  
)||  !
;||! "
List~~ 
<~~ 

TrackModel~~ 
>~~  

beforeSort~~! +
=~~, -
new~~. 1
List~~2 6
<~~6 7

TrackModel~~7 A
>~~A B
(~~B C
)~~C D
;~~D E
foreach 
( 
string 
track  %
in& (
tracks) /
)/ 0
{
 
if
 
(
 

GlobalData
 "
.
" #
Current
# *
.
* +
Audios
+ 1
.
1 2
ContainsKey
2 =
(
= >
track
> C
)
C D
)
D E
{
 

beforeSort
 "
.
" #
Add
# &
(
& '
new
' *

TrackModel
+ 5
(
5 6

GlobalData
6 @
.
@ A
Current
A H
.
H I
Audios
I O
[
O P
track
P U
]
U V
,
V W
playlistName
X d
)
d e
.
e f
CheckChanges
f r
(
r s
)
s t
)
t u
;
u v
}
 
else
 
if
 
(
 

GlobalData
 '
.
' (
Current
( /
.
/ 0
SavedTracks
0 ;
.
; <
ContainsKey
< G
(
G H
track
H M
)
M N
)
N O
{
 

beforeSort
 "
.
" #
Add
# &
(
& '
new
' *

TrackModel
+ 5
(
5 6

GlobalData
6 @
.
@ A
Current
A H
.
H I
SavedTracks
I T
[
T U
track
U Z
]
Z [
,
[ \
playlistName
] i
)
i j
.
j k
CheckChanges
k w
(
w x
)
x y
)
y z
;
z {
}
 
}
 
var
 
	afterSort
 
=
 
playlistName
  ,
==
- /
$str
0 2
?
3 4

beforeSort
5 ?
.
? @
OrderBy
@ G
(
G H
item
H L
=>
M O
item
P T
.
T U
TrackString
U `
)
` a
.
a b
ToList
b h
(
h i
)
i j
:
k l

beforeSort
m w
;
w x
foreach
 
(
 
var
 
item
  
in
! #
	afterSort
$ -
)
- .
{
 

TrackItems
 
.
 
Add
 "
(
" #
item
# '
)
' (
;
( )
	ListItems
 
.
 
Add
 !
(
! "

TrackItems
" ,
[
, -
^
- .
$num
. /
]
/ 0
)
0 1
;
1 2
}
 

GlobalData
 
.
 
Current
 "
.
" #"
PlaylistsNeedRefresh
# 7
=
8 9
false
: ?
;
? @
}
 
foreach
 
(
 
var
 
model
 
in
 !

TrackItems
" ,
.
, -
ToList
- 3
(
3 4
)
4 5
)
5 6
{
 
if
 
(
 

GlobalData
 
.
 
Current
 &
.
& '
Audios
' -
.
- .
ContainsKey
. 9
(
9 :
model
: ?
.
? @
FilePath
@ H
)
H I
)
I J
{
 
var
 
source
 
=
  

GlobalData
! +
.
+ ,
Current
, 3
.
3 4
Audios
4 :
[
: ;
model
; @
.
@ A
FilePath
A I
]
I J
;
J K
if
 
(
 
model
 
.
 
Artist
 $
!=
% '
source
( .
.
. /
Artist
/ 5
||
6 8
model
9 >
.
> ?
Title
? D
!=
E G
source
H N
.
N O
Title
O T
)
T U
{
 
int
 
index
 !
=
" #

TrackItems
$ .
.
. /
IndexOf
/ 6
(
6 7
model
7 <
)
< =
;
= >

TrackItems
 "
[
" #
index
# (
]
( )
.
) *
Title
* /
=
0 1
source
2 8
.
8 9
Title
9 >
;
> ?

TrackItems
 "
[
" #
index
# (
]
( )
.
) *
Artist
* 0
=
1 2
source
3 9
.
9 :
Artist
: @
;
@ A
	ListItems
   !
[
  ! "
index
  " '
]
  ' (
=
  ) *
model
  + 0
;
  0 1
}
¡¡ 
model
¢¢ 
.
¢¢ 
CheckChanges
¢¢ &
(
¢¢& '
)
¢¢' (
;
¢¢( )
}
££ 
else
¤¤ 
if
¤¤ 
(
¤¤ 

GlobalData
¤¤ "
.
¤¤" #
Current
¤¤# *
.
¤¤* +
SavedTracks
¤¤+ 6
.
¤¤6 7
ContainsKey
¤¤7 B
(
¤¤B C
model
¤¤C H
.
¤¤H I
FilePath
¤¤I Q
)
¤¤Q R
)
¤¤R S
{
¥¥ 
var
¦¦ 
source
¦¦ 
=
¦¦  

GlobalData
¦¦! +
.
¦¦+ ,
Current
¦¦, 3
.
¦¦3 4
SavedTracks
¦¦4 ?
[
¦¦? @
model
¦¦@ E
.
¦¦E F
FilePath
¦¦F N
]
¦¦N O
;
¦¦O P
if
§§ 
(
§§ 
model
§§ 
.
§§ 
Artist
§§ $
!=
§§% '
source
§§( .
.
§§. /
Artist
§§/ 5
||
§§6 8
model
§§9 >
.
§§> ?
Title
§§? D
!=
§§E G
source
§§H N
.
§§N O
Title
§§O T
)
§§T U
{
¨¨ 
int
©© 
index
©© !
=
©©" #

TrackItems
©©$ .
.
©©. /
IndexOf
©©/ 6
(
©©6 7
model
©©7 <
)
©©< =
;
©©= >

TrackItems
ªª "
[
ªª" #
index
ªª# (
]
ªª( )
.
ªª) *
Title
ªª* /
=
ªª0 1
source
ªª2 8
.
ªª8 9
Title
ªª9 >
;
ªª> ?

TrackItems
«« "
[
««" #
index
««# (
]
««( )
.
««) *
Artist
««* 0
=
««1 2
source
««3 9
.
««9 :
Artist
««: @
;
««@ A
	ListItems
¬¬ !
[
¬¬! "
index
¬¬" '
]
¬¬' (
=
¬¬) *
model
¬¬+ 0
;
¬¬0 1
}
­­ 
model
®® 
.
®® 
CheckChanges
®® &
(
®®& '
)
®®' (
;
®®( )
}
¯¯ 
else
°° 
{
±± 

TrackItems
²² 
.
²² 
Remove
²² %
(
²²% &
model
²²& +
)
²²+ ,
;
²², -
Device
³³ 
.
³³ %
BeginInvokeOnMainThread
³³ 2
(
³³2 3
(
³³3 4
)
³³4 5
=>
³³6 8
	ListItems
³³9 B
.
³³B C
Remove
³³C I
(
³³I J
model
³³J O
)
³³O P
)
³³P Q
;
³³Q R
}
´´ 
}
µµ 
}
¶¶ 	
public
¸¸ 
void
¸¸ (
TrackListView_ItemSelected
¸¸ .
(
¸¸. /
object
¸¸/ 5
sender
¸¸6 <
,
¸¸< =*
SelectedItemChangedEventArgs
¸¸> Z
e
¸¸[ \
)
¸¸\ ]
{
¹¹ 	
ItemSelected
ºº 
.
ºº 
Execute
ºº  
(
ºº  !
e
ºº! "
.
ºº" #
SelectedItemIndex
ºº# 4
)
ºº4 5
;
ºº5 6
if
»» 
(
»» 
!
»» 
Global
»» 
.
»» 
TV
»» 
)
»» 
{
¼¼ 
(
½½ 
sender
½½ 
as
½½ 
Xamarin
½½ "
.
½½" #
Forms
½½# (
.
½½( )
ListView
½½) 1
)
½½1 2
.
½½2 3
SelectedItem
½½3 ?
=
½½@ A
null
½½B F
;
½½F G
}
¾¾ 
}
¿¿ 	
}
ÁÁ 
}ÂÂ ³U
RD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\Custom\PlayerPanelViewModel.cs
	namespace		 	
Newtone		
 
.		 
Mobile		 
.		 
UI		 
.		 

ViewModels		 &
.		& '
Custom		' -
{

 
public 

class  
PlayerPanelViewModel %
:& '
PropertyChangedBase( ;
{ 
private 
bool !
backgroundGridVisible *
;* +
private 
string 
title 
; 
private 
string 
artist 
; 
private 
ImageSource 
	trackBlur %
;% &
private 
ImageSource 

trackImage &
;& '
private 
ImageSource 

playButton &
;& '
private 
bool 
isPlayImage  
=! "
true# '
;' (
private 
string 
playedTrack "
=# $
$str% '
;' (
private 
bool 
isPanelVisible #
;# $
public 
bool !
BackgroundGridVisible )
{ 	
get 
=> !
backgroundGridVisible (
;( )
set 
{ !
backgroundGridVisible %
=& '
value( -
;- .
OnPropertyChanged   !
(  ! "
)  " #
;  # $
}!! 
}"" 	
public$$ 
string$$ 
Title$$ 
{%% 	
get&& 
=>&& 
title&& 
;&& 
set'' 
{(( 
title)) 
=)) 
value)) 
;)) 
OnPropertyChanged** !
(**! "
)**" #
;**# $
}++ 
},, 	
public.. 
string.. 
Artist.. 
{// 	
get00 
=>00 
artist00 
;00 
set11 
{22 
artist33 
=33 
value33 
;33 
OnPropertyChanged44 !
(44! "
)44" #
;44# $
}55 
}66 	
public88 
ImageSource88 

TrackImage88 %
{99 	
get:: 
=>:: 

trackImage:: 
;:: 
set;; 
{<< 

trackImage== 
=== 
value== "
;==" #
OnPropertyChanged>> !
(>>! "
)>>" #
;>># $
}?? 
}@@ 	
publicBB 
ImageSourceBB 
	TrackBlurBB $
{CC 	
getDD 
=>DD 
	trackBlurDD 
;DD 
setEE 
{FF 
	trackBlurGG 
=GG 
valueGG !
;GG! "
OnPropertyChangedHH !
(HH! "
)HH" #
;HH# $
}II 
}JJ 	
publicLL 
ImageSourceLL 

PlayButtonLL %
{MM 	
getNN 
=>NN 

playButtonNN 
;NN 
setOO 
{PP 

playButtonQQ 
=QQ 
valueQQ "
;QQ" #
OnPropertyChangedRR !
(RR! "
)RR" #
;RR# $
}SS 
}TT 	
publicVV 
boolVV 
IsPanelVisibleVV "
{WW 	
getXX 
=>XX 
isPanelVisibleXX !
;XX! "
setYY 
{ZZ 
isPanelVisible[[ 
=[[  
value[[! &
;[[& '
OnPropertyChanged\\ !
(\\! "
)\\" #
;\\# $
}]] 
}^^ 	
privatebb 
ICommandbb 
playPauseCommandbb )
;bb) *
publiccc 
ICommandcc 
	PlayPausecc !
{dd 	
getee 
{ff 
ifgg 
(gg 
playPauseCommandgg $
==gg% '
nullgg( ,
)gg, -
playPauseCommandhh $
=hh% &
newhh' *
ActionCommandhh+ 8
(hh8 9
	parameterhh9 B
=>hhC E
{ii 
ifjj 
(jj 

GlobalDatajj &
.jj& '
Currentjj' .
.jj. /
MediaSourcejj/ :
!=jj; =
nulljj> B
)jjB C
{kk 
ifll 
(ll  

GlobalDatall  *
.ll* +
Currentll+ 2
.ll2 3
MediaPlayerll3 >
.ll> ?
	IsPlayingll? H
)llH I

GlobalDatamm  *
.mm* +
Currentmm+ 2
.mm2 3
MediaPlayermm3 >
.mm> ?
Pausemm? D
(mmD E
)mmE F
;mmF G
elsenn  

GlobalDataoo  *
.oo* +
Currentoo+ 2
.oo2 3
MediaPlayeroo3 >
.oo> ?
Playoo? C
(ooC D
)ooD E
;ooE F
}pp 
}qq 
)qq 
;qq 
returnss 
playPauseCommandss '
;ss' (
}tt 
}uu 	
privateww 
ICommandww 
gotoPlayerCommandww *
;ww* +
publicxx 
ICommandxx 

GotoPlayerxx "
{yy 	
getzz 
{{{ 
if|| 
(|| 
gotoPlayerCommand|| %
==||& (
null||) -
)||- .
gotoPlayerCommand}} %
=}}& '
new}}( +
ActionCommand}}, 9
(}}9 :
async}}: ?
(}}@ A
	parameter}}A J
)}}J K
=>}}L N
{~~ 
if 
( 

GlobalData &
.& '
Current' .
.. /
MediaSource/ :
!=; =
null> B
)B C
{
 
await
 !
Global
" (
.
( ) 
NavigationInstance
) ;
.
; <
PushModalAsync
< J
(
J K
new
K N
FullScreenPage
O ]
(
] ^
)
^ _
)
_ `
;
` a
}
 
}
 
)
 
;
 
return
 
gotoPlayerCommand
 (
;
( )
}
 
}
 	
public
 "
PlayerPanelViewModel
 #
(
# $
)
$ %
{
 	

PlayButton
 
=
 
ImageSource
 $
.
$ %
FromFile
% -
(
- .
$str
. <
)
< =
;
= >

TrackImage
 
=
 
ImageSource
 $
.
$ %
FromFile
% -
(
- .
$str
. >
)
> ?
;
? @
}
 	
public
 
void
 
Tick
 
(
 
)
 
{
 	
IsPanelVisible
 
=
 

GlobalData
 '
.
' (
Current
( /
.
/ 0
MediaSource
0 ;
!=
< >
null
? C
;
C D
if
 
(
 

GlobalData
 
.
 
Current
 "
.
" #
MediaSource
# .
!=
/ 1
null
2 6
)
6 7
{
 
Artist
 
=
 

GlobalData
 #
.
# $
Current
$ +
.
+ ,
MediaSource
, 7
.
7 8
Artist
8 >
;
> ?
Title
 
=
 

GlobalData
 "
.
" #
Current
# *
.
* +
MediaSource
+ 6
.
6 7
Title
7 <
;
< =
}
 
if
 
(
 
playedTrack
 
!=
 

GlobalData
 )
.
) *
Current
* 1
.
1 2
MediaSourcePath
2 A
)
A B
{
 
if
 
(
 

GlobalData
 
.
 
Current
 &
.
& '
MediaSource
' 2
.
2 3
Image
3 8
!=
9 ;
null
< @
&&
A C

GlobalData
D N
.
N O
Current
O V
.
V W
MediaSource
W b
.
b c
Image
c h
.
h i
Length
i o
>
p q
$num
r s
)
s t
{
 

TrackImage
 
=
  
ImageProcessing
! 0
.
0 1
	FromArray
1 :
(
: ;

GlobalData
; E
.
E F
Current
F M
.
M N
MediaSource
N Y
.
Y Z
Image
Z _
)
_ `
;
` a
	TrackBlur
   
=
   
ImageProcessing
    /
.
  / 0
Blur
  0 4
(
  4 5

GlobalData
  5 ?
.
  ? @
Current
  @ G
.
  G H
MediaSource
  H S
.
  S T
Image
  T Y
)
  Y Z
;
  Z [#
BackgroundGridVisible
¡¡ )
=
¡¡* +
true
¡¡, 0
;
¡¡0 1
}
¢¢ 
else
££ 
{
¤¤ 

TrackImage
¥¥ 
=
¥¥  
ImageSource
¥¥! ,
.
¥¥, -
FromFile
¥¥- 5
(
¥¥5 6
$str
¥¥6 F
)
¥¥F G
;
¥¥G H#
BackgroundGridVisible
¦¦ )
=
¦¦* +
false
¦¦, 1
;
¦¦1 2
}
§§ 
playedTrack
©© 
=
©© 

GlobalData
©© (
.
©©( )
Current
©©) 0
.
©©0 1
MediaSourcePath
©©1 @
;
©©@ A
}
ªª 
if
«« 
(
«« 
isPlayImage
«« 
&&
«« 

GlobalData
«« )
.
««) *
Current
««* 1
.
««1 2
MediaPlayer
««2 =
.
««= >
	IsPlaying
««> G
)
««G H
{
¬¬ 

PlayButton
­­ 
=
­­ 
ImageSource
­­ (
.
­­( )
FromFile
­­) 1
(
­­1 2
$str
­­2 A
)
­­A B
;
­­B C
isPlayImage
®® 
=
®® 
false
®® #
;
®®# $
}
¯¯ 
if
±± 
(
±± 
!
±± 
isPlayImage
±± 
&&
±± 
!
±±  !

GlobalData
±±! +
.
±±+ ,
Current
±±, 3
.
±±3 4
MediaPlayer
±±4 ?
.
±±? @
	IsPlaying
±±@ I
)
±±I J
{
²² 

PlayButton
³³ 
=
³³ 
ImageSource
³³ (
.
³³( )
FromFile
³³) 1
(
³³1 2
$str
³³2 @
)
³³@ A
;
³³A B
isPlayImage
´´ 
=
´´ 
true
´´ "
;
´´" #
}
µµ 
}
¶¶ 	
}
¸¸ 
}¹¹ Ð
HD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\DownloadViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
{ 
public 

class 
DownloadViewModel "
{ 
public

  
ObservableCollection

 #
<

# $
DownloadModel

$ 1
>

1 2
Items

3 8
{

9 :
get

; >
;

> ?
private

@ G
set

H K
;

K L
}

M N
public 
DownloadViewModel  
(  !
)! "
{ 	
Items 
= 
new  
ObservableCollection ,
<, -
DownloadModel- :
>: ;
(; <
)< =
;= >
} 	
public 
void 
Tick 
( 
) 
{ 	
if 
( 
Items 
. 
Count 
!= 
DownloadProcessing 1
.1 2
GetDownloads2 >
(> ?
)? @
.@ A
CountA F
)F G
{ 
Items 
. 
Clear 
( 
) 
; 
foreach 
( 
var 
item !
in" $
DownloadProcessing% 7
.7 8
	GetModels8 A
(A B
)B C
)C D
Items 
. 
Add 
( 
item "
)" #
;# $
} 
for 
( 
int 
a 
= 
$num 
; 
a 
< 
Items  %
.% &
Count& +
;+ ,
a- .
++. 0
)0 1
{ 
Items 
[ 
a 
] 
. 
Progress !
=" #
DownloadProcessing$ 6
.6 7
GetDownloads7 C
(C D
)D E
[E F
ItemsF K
[K L
aL M
]M N
.N O
IdO Q
]Q R
.R S
ProgressS [
;[ \
}   
}!! 	
}## 
}$$ î
[D:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\FirstStart\FirstStartSearchViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
.& '

FirstStart' 1
{ 
public 

class %
FirstStartSearchViewModel *
{		 
private 
ICommand 
next 
; 
public 
ICommand 
Next 
{ 	
get 
{ 
if 
( 
next 
== 
null  
)  !
next 
= 
new 
ActionCommand ,
(, -
	parameter- 6
=>7 9
{ 
App 
. 
Instance $
.$ %
MainPage% -
=. /
new0 3

NormalPage4 >
(> ?
)? @
;@ A
Task 
. 
Run  
(  !
async! &
(' (
)( )
=>* ,
{ 
await !
PopToRootAsync" 0
(0 1
)1 2
;2 3
} 
) 
; 
} 
) 
; 
return 
next 
; 
} 
} 	
private   
async   
Task   
PopToRootAsync   )
(  ) *
)  * +
{!! 	
while"" 
("" 
App"" 
."" 
Instance"" 
.""  
MainPage""  (
.""( )

Navigation"") 3
.""3 4

ModalStack""4 >
.""> ?
Count""? D
>""E F
$num""G H
)""H I
{## 
await$$ 
App$$ 
.$$ 
Instance$$ "
.$$" #
MainPage$$# +
.$$+ ,

Navigation$$, 6
.$$6 7
PopModalAsync$$7 D
($$D E
false$$E J
)$$J K
;$$K L
}%% 
}&& 	
}(( 
})) ð½
JD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\FullScreenViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
{ 
public 

class 
FullScreenViewModel $
:% &
PropertyChangedBase' :
{ 
private 
string 
title 
; 
private 
string 
artist 
; 
private 
ImageSource 

trackImage &
;& '
private 
ImageSource 
	trackBlur %
;% &
private 
string  
trackCurrentPosition +
;+ ,
private 
string 
trackDuration $
;$ %
private 
ImageSource 
middleButton (
;( )
private 
ImageSource 

modeButton &
;& '
private 
bool !
backgroundGridVisible *
;* +
private 
double 
audioSliderMax %
;% &
private 
double 
audioSliderValue '
;' (
private 
readonly 
bool 
	stopTimer '
=( )
false* /
;/ 0
private   
bool   
isPlayImage    
=  ! "
true  # '
;  ' (
private!! 
string!! 
playedTrack!! "
=!!# $
$str!!% '
;!!' (
private"" 

PlayerMode"" 

playerMode"" %
=""& '

PlayerMode""( 2
.""2 3
All""3 6
;""6 7
private## 
IDisposable## 
loopSubscription## ,
;##, -
private$$ 
bool$$ 
isLoadingVisible$$ %
;$$% &
public(( 
string(( 
Title(( 
{)) 	
get** 
=>** 
title** 
;** 
set++ 
{,, 
title-- 
=-- 
value-- 
;-- 
OnPropertyChanged.. !
(..! "
).." #
;..# $
}// 
}00 	
public22 
string22 
Artist22 
{33 	
get44 
=>44 
artist44 
;44 
set55 
{66 
artist77 
=77 
value77 
;77 
OnPropertyChanged88 !
(88! "
)88" #
;88# $
}99 
}:: 	
public<< 
ImageSource<< 

TrackImage<< %
{== 	
get>> 
=>>> 

trackImage>> 
;>> 
set?? 
{@@ 

trackImageAA 
=AA 
valueAA "
;AA" #
OnPropertyChangedBB !
(BB! "
)BB" #
;BB# $
}CC 
}DD 	
publicFF 
ImageSourceFF 
	TrackBlurFF $
{GG 	
getHH 
=>HH 
	trackBlurHH 
;HH 
setII 
{JJ 
	trackBlurKK 
=KK 
valueKK !
;KK! "
OnPropertyChangedLL !
(LL! "
)LL" #
;LL# $
}MM 
}NN 	
publicPP 
stringPP  
TrackCurrentPositionPP *
{QQ 	
getRR 
=>RR  
trackCurrentPositionRR '
;RR' (
setSS 
{TT  
trackCurrentPositionUU $
=UU% &
valueUU' ,
;UU, -
OnPropertyChangedVV !
(VV! "
)VV" #
;VV# $
}WW 
}XX 	
publicZZ 
stringZZ 
TrackDurationZZ #
{[[ 	
get\\ 
=>\\ 
trackDuration\\  
;\\  !
set]] 
{^^ 
trackDuration__ 
=__ 
value__  %
;__% &
OnPropertyChanged`` !
(``! "
)``" #
;``# $
}aa 
}bb 	
publicdd 
booldd !
BackgroundGridVisibledd )
{ee 	
getff 
=>ff !
backgroundGridVisibleff (
;ff( )
setgg 
{hh !
backgroundGridVisibleii %
=ii& '
valueii( -
;ii- .
OnPropertyChangedjj !
(jj! "
)jj" #
;jj# $
}kk 
}ll 	
publicnn 
ImageSourcenn 
MiddleButtonnn '
{oo 	
getpp 
=>pp 
middleButtonpp 
;pp  
setqq 
{rr 
middleButtonss 
=ss 
valuess $
;ss$ %
OnPropertyChangedtt !
(tt! "
)tt" #
;tt# $
}uu 
}vv 	
publicxx 
ImageSourcexx 

ModeButtonxx %
{yy 	
getzz 
=>zz 

modeButtonzz 
;zz 
set{{ 
{|| 

modeButton}} 
=}} 
value}} "
;}}" #
OnPropertyChanged~~ !
(~~! "
)~~" #
;~~# $
} 
}
 	
public
 
double
 
AudioSliderMax
 $
{
 	
get
 
=>
 
audioSliderMax
 !
;
! "
set
 
{
 
if
 
(
 
audioSliderMax
 "
!=
# %
value
& +
)
+ ,
{
 
audioSliderMax
 "
=
# $
value
% *
;
* +
OnPropertyChanged
 %
(
% &
)
& '
;
' (
}
 
}
 
}
 	
public
 
double
 
AudioSliderValue
 &
{
 	
get
 
=>
 
audioSliderValue
 #
;
# $
set
 
{
 
if
 
(
 
audioSliderValue
 $
!=
% '
value
( -
)
- .
{
 
audioSliderValue
 $
=
% &
value
' ,
;
, -
OnPropertyChanged
 %
(
% &
)
& '
;
' (
}
 
}
 
}
 	
public
 
bool
 
IsLoadingVisible
 $
{
 	
get
 
=>
 
isLoadingVisible
 #
;
# $
set
 
{
   
isLoadingVisible
¡¡  
=
¡¡! "
value
¡¡# (
;
¡¡( )
OnPropertyChanged
¢¢ !
(
¢¢! "
)
¢¢" #
;
¢¢# $
}
££ 
}
¤¤ 	
private
¨¨ 
ICommand
¨¨ 
repeatChange
¨¨ %
;
¨¨% &
public
©© 
ICommand
©© 
RepeatChange
©© $
{
ªª 	
get
«« 
{
¬¬ 
if
­­ 
(
­­ 
repeatChange
­­  
==
­­! #
null
­­$ (
)
­­( )
repeatChange
®®  
=
®®! "
new
®®# &
ActionCommand
®®' 4
(
®®4 5
	parameter
®®5 >
=>
®®? A
{
¯¯ 
int
°° 
oldMode
°° #
=
°°$ %
(
°°& '
int
°°' *
)
°°* +

GlobalData
°°+ 5
.
°°5 6
Current
°°6 =
.
°°= >

PlayerMode
°°> H
;
°°H I
int
±± 
newMode
±± #
=
±±$ %
oldMode
±±& -
+
±±. /
$num
±±0 1
;
±±1 2
if
²² 
(
²² 
newMode
²² #
==
²²$ &
$num
²²' (
)
²²( )
newMode
³³ #
=
³³$ %
$num
³³& '
;
³³' (

GlobalData
µµ "
.
µµ" #
Current
µµ# *
.
µµ* +

PlayerMode
µµ+ 5
=
µµ6 7
(
µµ8 9

PlayerMode
µµ9 C
)
µµC D
newMode
µµD K
;
µµK L

GlobalData
¶¶ "
.
¶¶" #
Current
¶¶# *
.
¶¶* +

SaveConfig
¶¶+ 5
(
¶¶5 6
)
¶¶6 7
;
¶¶7 8
}
·· 
)
·· 
;
·· 
return
¹¹ 
repeatChange
¹¹ #
;
¹¹# $
}
ºº 
}
»» 	
private
½½ 
ICommand
½½ 
previousTrack
½½ &
;
½½& '
public
¾¾ 
ICommand
¾¾ 
PreviousTrack
¾¾ %
{
¿¿ 	
get
ÀÀ 
{
ÁÁ 
if
ÂÂ 
(
ÂÂ 
previousTrack
ÂÂ !
==
ÂÂ" $
null
ÂÂ% )
)
ÂÂ) *
previousTrack
ÃÃ !
=
ÃÃ" #
new
ÃÃ$ '
ActionCommand
ÃÃ( 5
(
ÃÃ5 6
	parameter
ÃÃ6 ?
=>
ÃÃ@ B
{
ÄÄ 

GlobalData
ÅÅ "
.
ÅÅ" #
Current
ÅÅ# *
.
ÅÅ* +
MediaPlayer
ÅÅ+ 6
.
ÅÅ6 7
Prev
ÅÅ7 ;
(
ÅÅ; <
)
ÅÅ< =
;
ÅÅ= >
if
ÆÆ 
(
ÆÆ 
!
ÆÆ 
isPlayImage
ÆÆ (
)
ÆÆ( )

GlobalData
ÇÇ &
.
ÇÇ& '
Current
ÇÇ' .
.
ÇÇ. /
MediaPlayer
ÇÇ/ :
.
ÇÇ: ;
Play
ÇÇ; ?
(
ÇÇ? @
)
ÇÇ@ A
;
ÇÇA B
}
ÈÈ 
)
ÈÈ 
;
ÈÈ 
return
ÊÊ 
previousTrack
ÊÊ $
;
ÊÊ$ %
}
ËË 
}
ÌÌ 	
private
ÎÎ 
ICommand
ÎÎ 
playOrPause
ÎÎ $
;
ÎÎ$ %
public
ÏÏ 
ICommand
ÏÏ 
PlayOrPause
ÏÏ #
{
ÐÐ 	
get
ÑÑ 
{
ÒÒ 
if
ÓÓ 
(
ÓÓ 
playOrPause
ÓÓ 
==
ÓÓ  "
null
ÓÓ# '
)
ÓÓ' (
playOrPause
ÔÔ 
=
ÔÔ  !
new
ÔÔ" %
ActionCommand
ÔÔ& 3
(
ÔÔ3 4
	parameter
ÔÔ4 =
=>
ÔÔ> @
{
ÕÕ 
if
ÖÖ 
(
ÖÖ 

GlobalData
ÖÖ &
.
ÖÖ& '
Current
ÖÖ' .
.
ÖÖ. /
MediaSource
ÖÖ/ :
!=
ÖÖ; =
null
ÖÖ> B
)
ÖÖB C
{
×× 
if
ØØ 
(
ØØ  

GlobalData
ØØ  *
.
ØØ* +
Current
ØØ+ 2
.
ØØ2 3
MediaPlayer
ØØ3 >
.
ØØ> ?
	IsPlaying
ØØ? H
)
ØØH I

GlobalData
ÙÙ  *
.
ÙÙ* +
Current
ÙÙ+ 2
.
ÙÙ2 3
MediaPlayer
ÙÙ3 >
.
ÙÙ> ?
Pause
ÙÙ? D
(
ÙÙD E
)
ÙÙE F
;
ÙÙF G
else
ÚÚ  

GlobalData
ÛÛ  *
.
ÛÛ* +
Current
ÛÛ+ 2
.
ÛÛ2 3
MediaPlayer
ÛÛ3 >
.
ÛÛ> ?
Play
ÛÛ? C
(
ÛÛC D
)
ÛÛD E
;
ÛÛE F
}
ÜÜ 
}
ÝÝ 
)
ÝÝ 
;
ÝÝ 
return
ßß 
playOrPause
ßß "
;
ßß" #
}
àà 
}
áá 	
private
ãã 
ICommand
ãã 
	nextTrack
ãã "
;
ãã" #
public
ää 
ICommand
ää 
	NextTrack
ää !
{
åå 	
get
ææ 
{
çç 
if
èè 
(
èè 
	nextTrack
èè 
==
èè  
null
èè! %
)
èè% &
	nextTrack
éé 
=
éé 
new
éé  #
ActionCommand
éé$ 1
(
éé1 2
	parameter
éé2 ;
=>
éé< >
{
êê 

GlobalData
ëë "
.
ëë" #
Current
ëë# *
.
ëë* +
MediaPlayer
ëë+ 6
.
ëë6 7
Next
ëë7 ;
(
ëë; <
)
ëë< =
;
ëë= >
if
ìì 
(
ìì 
!
ìì 
isPlayImage
ìì (
)
ìì( )

GlobalData
íí &
.
íí& '
Current
íí' .
.
íí. /
MediaPlayer
íí/ :
.
íí: ;
Play
íí; ?
(
íí? @
)
íí@ A
;
ííA B
}
îî 
)
îî 
;
îî 
return
ðð 
	nextTrack
ðð  
;
ðð  !
}
ññ 
}
òò 	
private
ôô 
ICommand
ôô 
menuButtonCommand
ôô *
;
ôô* +
public
õõ 
ICommand
õõ 
MenuButtonCommand
õõ )
{
öö 	
get
÷÷ 
{
øø 
if
ùù 
(
ùù 
menuButtonCommand
ùù %
==
ùù& (
null
ùù) -
)
ùù- .
menuButtonCommand
úú %
=
úú& '
new
úú( +
ActionCommand
úú, 9
(
úú9 :
	parameter
úú: C
=>
úúD F
{
ûû  
ContextMenuBuilder
üü *
.
üü* +
BuildForTrack
üü+ 8
(
üü8 9
(
üü9 :
Xamarin
üü: A
.
üüA B
Forms
üüB G
.
üüG H
View
üüH L
)
üüL M
	parameter
üüM V
,
üüV W

GlobalData
üüX b
.
üüb c
Current
üüc j
.
üüj k
MediaSource
üük v
.
üüv w
FilePath
üüw 
+üü 

GlobalDataüü 
.üü 
	SEPARATORüü 
)üü 
;üü 
}
ýý 
)
ýý 
;
ýý 
return
ÿÿ 
menuButtonCommand
ÿÿ (
;
ÿÿ( )
}
 
}
 	
private
 
ICommand
 

expandList
 #
;
# $
public
 
ICommand
 

ExpandList
 "
{
 	
get
 
{
 
if
 
(
 

expandList
 
==
 !
null
" &
)
& '

expandList
 
=
  
new
! $
ActionCommand
% 2
(
2 3
async
3 8
(
9 :
	parameter
: C
)
C D
=>
E G
{
 
await
 
Global
 $
.
$ % 
NavigationInstance
% 7
.
7 8
PushModalAsync
8 F
(
F G
new
G J
	ModalPage
K T
(
T U
new
U X!
CurrentPlaylistPage
Y l
(
l m
)
m n
,
n o
$str
p r
,
r s
false
t y
,
y z
false{ 
) 
) 
; 
}
 
)
 
;
 
return
 

expandList
 !
;
! "
}
 
}
 	
public
 !
FullScreenViewModel
 "
(
" #
)
# $
{
 	
MiddleButton
 
=
 
ImageSource
 &
.
& '
FromFile
' /
(
/ 0
$str
0 >
)
> ?
;
? @

ModeButton
 
=
 
ImageSource
 $
.
$ %
FromFile
% -
(
- .
$str
. >
)
> ?
;
? @
}
 	
public
 
void
 
	Appearing
 
(
 
)
 
{
 	
var
 
src
 
=
 
System
 
.
 
Reactive
 %
.
% &
Linq
& *
.
* +

Observable
+ 5
.
5 6
Timer
6 ;
(
; <
TimeSpan
< D
.
D E
Zero
E I
,
I J
TimeSpan
K S
.
S T
FromMilliseconds
T d
(
d e
$num
e h
)
h i
)
i j
.
j k
	Timestamp
k t
(
t u
)
u v
;
v w
loopSubscription
 
=
 
src
 "
.
" #
	Subscribe
# ,
(
, -
time
- 1
=>
2 4
Tick
5 9
(
9 :
)
: ;
)
; <
;
< =
}
 	
public
   
void
   
Disappearing
    
(
    !
)
  ! "
{
¡¡ 	
loopSubscription
¢¢ 
?
¢¢ 
.
¢¢ 
Dispose
¢¢ %
(
¢¢% &
)
¢¢& '
;
¢¢' (
loopSubscription
££ 
=
££ 
null
££ #
;
££# $
}
¤¤ 	
public
¦¦ 
void
¦¦ )
AudioSlider_ValueNewChanged
¦¦ /
(
¦¦/ 0 
AudioSliderControl
¦¦0 B
.
¦¦B C
ValueChangedArgs
¦¦C S
e
¦¦T U
)
¦¦U V
{
§§ 	
if
¨¨ 
(
¨¨ 

GlobalData
¨¨ 
.
¨¨ 
Current
¨¨ "
.
¨¨" #
MediaPlayer
¨¨# .
.
¨¨. /
	IsPlaying
¨¨/ 8
)
¨¨8 9
{
©© 

GlobalData
ªª 
.
ªª 
Current
ªª "
.
ªª" #
MediaPlayer
ªª# .
.
ªª. /
Seek
ªª/ 3
(
ªª3 4
e
ªª4 5
.
ªª5 6
Value
ªª6 ;
)
ªª; <
;
ªª< =
}
«« 
}
¬¬ 	
private
°° 
bool
°° 
Tick
°° 
(
°° 
)
°° 
{
±± 	"
TrackCurrentPosition
²²  
=
²²! "
TimeSpan
²²# +
.
²²+ ,
FromSeconds
²², 7
(
²²7 8

GlobalData
²²8 B
.
²²B C
Current
²²C J
.
²²J K
MediaPlayer
²²K V
.
²²V W
CurrentPosition
²²W f
)
²²f g
.
²²g h
ToString
²²h p
(
²²p q
$str
²²q z
)
²²z {
;
²²{ |
TrackDuration
³³ 
=
³³ 

GlobalData
³³ &
.
³³& '
Current
³³' .
.
³³. /
MediaSource
³³/ :
.
³³: ;
Duration
³³; C
.
³³C D
ToString
³³D L
(
³³L M
$str
³³M V
)
³³V W
;
³³W X
Artist
´´ 
=
´´ 

GlobalData
´´ 
.
´´  
Current
´´  '
.
´´' (
MediaSource
´´( 3
.
´´3 4
Artist
´´4 :
;
´´: ;
Title
µµ 
=
µµ 

GlobalData
µµ 
.
µµ 
Current
µµ &
.
µµ& '
MediaSource
µµ' 2
.
µµ2 3
Title
µµ3 8
;
µµ8 9
IsLoadingVisible
¶¶ 
=
¶¶ 

GlobalData
¶¶ )
.
¶¶) *
Current
¶¶* 1
.
¶¶1 2
MediaPlayer
¶¶2 =
.
¶¶= >
	IsLoading
¶¶> G
;
¶¶G H
if
¸¸ 
(
¸¸ 
playedTrack
¸¸ 
!=
¸¸ 

GlobalData
¸¸ )
.
¸¸) *
Current
¸¸* 1
.
¸¸1 2
MediaSourcePath
¸¸2 A
)
¸¸A B
{
¹¹ #
BackgroundGridVisible
ºº %
=
ºº& '

GlobalData
ºº( 2
.
ºº2 3
Current
ºº3 :
.
ºº: ;
MediaSource
ºº; F
.
ººF G
Image
ººG L
!=
ººM O
null
ººP T
;
ººT U
if
¼¼ 
(
¼¼ 

GlobalData
¼¼ 
.
¼¼ 
Current
¼¼ &
.
¼¼& '
MediaSource
¼¼' 2
.
¼¼2 3
Image
¼¼3 8
!=
¼¼9 ;
null
¼¼< @
&&
¼¼A C

GlobalData
¼¼D N
.
¼¼N O
Current
¼¼O V
.
¼¼V W
MediaSource
¼¼W b
.
¼¼b c
Image
¼¼c h
.
¼¼h i
Length
¼¼i o
>
¼¼p q
$num
¼¼r s
)
¼¼s t
{
½½ 
	TrackBlur
¾¾ 
=
¾¾ 
ImageProcessing
¾¾  /
.
¾¾/ 0
Blur
¾¾0 4
(
¾¾4 5
ImageProcessing
¾¾5 D
.
¾¾D E
	FromArray
¾¾E N
(
¾¾N O

GlobalData
¾¾O Y
.
¾¾Y Z
Current
¾¾Z a
.
¾¾a b
MediaSource
¾¾b m
.
¾¾m n
Image
¾¾n s
)
¾¾s t
)
¾¾t u
;
¾¾u v

TrackImage
¿¿ 
=
¿¿  
ImageProcessing
¿¿! 0
.
¿¿0 1
	FromArray
¿¿1 :
(
¿¿: ;

GlobalData
¿¿; E
.
¿¿E F
Current
¿¿F M
.
¿¿M N
MediaSource
¿¿N Y
.
¿¿Y Z
Image
¿¿Z _
)
¿¿_ `
;
¿¿` a
}
ÀÀ 
else
ÁÁ 
{
ÂÂ 

TrackImage
ÃÃ 
=
ÃÃ  
ImageSource
ÃÃ! ,
.
ÃÃ, -
FromFile
ÃÃ- 5
(
ÃÃ5 6
$str
ÃÃ6 F
)
ÃÃF G
;
ÃÃG H
}
ÄÄ 
playedTrack
ÆÆ 
=
ÆÆ 

GlobalData
ÆÆ (
.
ÆÆ( )
Current
ÆÆ) 0
.
ÆÆ0 1
MediaSourcePath
ÆÆ1 @
;
ÆÆ@ A
}
ÇÇ 
if
ÈÈ 
(
ÈÈ 
isPlayImage
ÈÈ 
&&
ÈÈ 

GlobalData
ÈÈ )
.
ÈÈ) *
Current
ÈÈ* 1
.
ÈÈ1 2
MediaPlayer
ÈÈ2 =
.
ÈÈ= >
	IsPlaying
ÈÈ> G
)
ÈÈG H
{
ÉÉ 
MiddleButton
ÊÊ 
=
ÊÊ 
ImageSource
ÊÊ *
.
ÊÊ* +
FromFile
ÊÊ+ 3
(
ÊÊ3 4
$str
ÊÊ4 C
)
ÊÊC D
;
ÊÊD E
isPlayImage
ËË 
=
ËË 
false
ËË #
;
ËË# $
}
ÌÌ 
if
ÎÎ 
(
ÎÎ 
!
ÎÎ 
isPlayImage
ÎÎ 
&&
ÎÎ 
!
ÎÎ  !

GlobalData
ÎÎ! +
.
ÎÎ+ ,
Current
ÎÎ, 3
.
ÎÎ3 4
MediaPlayer
ÎÎ4 ?
.
ÎÎ? @
	IsPlaying
ÎÎ@ I
)
ÎÎI J
{
ÏÏ 
MiddleButton
ÐÐ 
=
ÐÐ 
ImageSource
ÐÐ *
.
ÐÐ* +
FromFile
ÐÐ+ 3
(
ÐÐ3 4
$str
ÐÐ4 B
)
ÐÐB C
;
ÐÐC D
isPlayImage
ÑÑ 
=
ÑÑ 
true
ÑÑ "
;
ÑÑ" #
}
ÒÒ 
if
ÓÓ 
(
ÓÓ 

GlobalData
ÓÓ 
.
ÓÓ 
Current
ÓÓ "
.
ÓÓ" #
MediaPlayer
ÓÓ# .
.
ÓÓ. /
	IsPlaying
ÓÓ/ 8
)
ÓÓ8 9
{
ÔÔ 
AudioSliderMax
ÕÕ 
=
ÕÕ  

GlobalData
ÕÕ! +
.
ÕÕ+ ,
Current
ÕÕ, 3
.
ÕÕ3 4
MediaPlayer
ÕÕ4 ?
.
ÕÕ? @
Duration
ÕÕ@ H
;
ÕÕH I
AudioSliderValue
ÖÖ  
=
ÖÖ! "

GlobalData
ÖÖ# -
.
ÖÖ- .
Current
ÖÖ. 5
.
ÖÖ5 6
MediaPlayer
ÖÖ6 A
.
ÖÖA B
CurrentPosition
ÖÖB Q
;
ÖÖQ R
}
ØØ 
if
ÚÚ 
(
ÚÚ 

GlobalData
ÚÚ 
.
ÚÚ 
Current
ÚÚ "
.
ÚÚ" #

PlayerMode
ÚÚ# -
!=
ÚÚ. 0

playerMode
ÚÚ1 ;
)
ÚÚ; <
{
ÛÛ 
if
ÜÜ 
(
ÜÜ 

GlobalData
ÜÜ 
.
ÜÜ 
Current
ÜÜ &
.
ÜÜ& '

PlayerMode
ÜÜ' 1
==
ÜÜ2 4

PlayerMode
ÜÜ5 ?
.
ÜÜ? @
All
ÜÜ@ C
)
ÜÜC D

ModeButton
ÝÝ 
=
ÝÝ  
ImageSource
ÝÝ! ,
.
ÝÝ, -
FromFile
ÝÝ- 5
(
ÝÝ5 6
$str
ÝÝ6 F
)
ÝÝF G
;
ÝÝG H
else
ÞÞ 
if
ÞÞ 
(
ÞÞ 

GlobalData
ÞÞ #
.
ÞÞ# $
Current
ÞÞ$ +
.
ÞÞ+ ,

PlayerMode
ÞÞ, 6
==
ÞÞ7 9

PlayerMode
ÞÞ: D
.
ÞÞD E
One
ÞÞE H
)
ÞÞH I

ModeButton
ßß 
=
ßß  
ImageSource
ßß! ,
.
ßß, -
FromFile
ßß- 5
(
ßß5 6
$str
ßß6 I
)
ßßI J
;
ßßJ K
else
àà 

ModeButton
áá 
=
áá  
ImageSource
áá! ,
.
áá, -
FromFile
áá- 5
(
áá5 6
$str
áá6 F
)
ááF G
;
ááG H

playerMode
ãã 
=
ãã 

GlobalData
ãã '
.
ãã' (
Current
ãã( /
.
ãã/ 0

PlayerMode
ãã0 :
;
ãã: ;
}
ää 
return
åå 
!
åå 
	stopTimer
åå 
;
åå 
}
ææ 	
}
éé 
}êê Ð
ND:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\LanguageSelectViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
{		 
public

 

class

 #
LanguageSelectViewModel

 (
:

) *
PropertyChangedBase

+ >
{ 
private 
ICommand 
english  
;  !
public 
ICommand 
English 
{ 	
get 
{ 
if 
( 
english 
== 
null #
)# $
english 
= 
new !
ActionCommand" /
(/ 0
	parameter0 9
=>: <
{ 
ChangeLanguage &
(& '
$str' +
)+ ,
;, -
} 
) 
; 
return 
english 
; 
} 
} 	
private 
ICommand 
polish 
;  
public 
ICommand 
Polish 
{ 	
get 
{   
if!! 
(!! 
polish!! 
==!! 
null!! "
)!!" #
polish"" 
="" 
new""  
ActionCommand""! .
("". /
	parameter""/ 8
=>""9 ;
{## 
ChangeLanguage$$ &
($$& '
$str$$' +
)$$+ ,
;$$, -
}%% 
)%% 
;%% 
return'' 
polish'' 
;'' 
}(( 
})) 	
private++ 
ICommand++ 
russian++  
;++  !
public,, 
ICommand,, 
Russian,, 
{-- 	
get.. 
{// 
if00 
(00 
russian00 
==00 
null00 #
)00# $
russian11 
=11 
new11 !
ActionCommand11" /
(11/ 0
	parameter110 9
=>11: <
{22 
ChangeLanguage33 &
(33& '
$str33' +
)33+ ,
;33, -
}44 
)44 
;44 
return66 
russian66 
;66 
}77 
}88 	
public;; #
LanguageSelectViewModel;; &
(;;& '
);;' (
{<< 	
}== 	
privateAA 
voidAA 
ChangeLanguageAA #
(AA# $
stringAA$ *
langAA+ /
)AA/ 0
{BB 	

GlobalDataCC 
.CC 
CurrentCC 
.CC 
CurrentLanguageCC .
=CC/ 0
langCC1 5
;CC5 6
LocalizationDD 
.DD 
RefreshLanguageDD (
(DD( )
)DD) *
;DD* +
ifEE 
(EE 
GlobalEE 
.EE 
TVEE 
)EE 
AppFF 
.FF 
InstanceFF 
.FF 
MainPageFF %
=FF& '
newFF( +
ViewsFF, 1
.FF1 2
TVFF2 4
.FF4 5
PermissionPageFF5 C
(FFC D
)FFD E
;FFE F
elseGG 
{HH 
AppII 
.II 
InstanceII 
.II 
MainPageII %
=II& '
newII( +
PermissionPageII, :
(II: ;
)II; <
;II< =
}JJ 
}KK 	
}MM 
}NN =
ED:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\ModalViewModel.cs
	namespace		 	
Newtone		
 
.		 
Mobile		 
.		 
UI		 
.		 

ViewModels		 &
{

 
public 

class 
ModalViewModel 
:  !
PropertyChangedBase" 5
{ 
private 
string 

modalTitle !
;! "
private 
string 
badge 
; 
private 
bool 
badgeVisible !
;! "
private 
bool 
topPanelVisible $
;$ %
public 
string 

ModalTitle  
{ 	
get 
=> 

modalTitle 
; 
set 
{ 

modalTitle 
= 
value "
;" #
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
public 
string 
Badge 
{   	
get!! 
=>!! 
badge!! 
;!! 
set"" 
{## 
badge$$ 
=$$ 
value$$ 
;$$ 
OnPropertyChanged%% !
(%%! "
)%%" #
;%%# $
}&& 
}'' 	
public(( 
bool(( 
BadgeVisible((  
{)) 	
get** 
=>** 
badgeVisible** 
;**  
set++ 
{,, 
badgeVisible-- 
=-- 
value-- $
;--$ %
OnPropertyChanged.. !
(..! "
).." #
;..# $
}// 
}00 	
public22 
bool22 
TopPanelVisible22 #
{33 	
get44 
=>44 
topPanelVisible44 "
;44" #
set55 
{66 
topPanelVisible77 
=77  !
value77" '
;77' (
OnPropertyChanged88 !
(88! "
)88" #
;88# $
}99 
}:: 	
public<< 
bool<< 
BackButtonVisible<< %
=><<& (
Device<<) /
.<</ 0
RuntimePlatform<<0 ?
==<<@ B
Device<<C I
.<<I J
iOS<<J M
;<<M N
public>> 
Grid>> 
	Container>> 
{>> 
get>>  #
;>># $
private>>% ,
set>>- 0
;>>0 1
}>>2 3
public?? 
bool?? !
DownloadButtonVisible?? )
=>??* ,
!??- .
(??. /
	Container??/ 8
.??8 9
Children??9 A
.??A B
Count??B G
>??H I
$num??J K
&&??L N
	Container??O X
.??X Y
Children??Y a
[??a b
$num??b c
]??c d
is??e g
DownloadPage??h t
)??t u
;??u v
privateCC 
ICommandCC 
toFullScreenCC %
;CC% &
publicDD 
ICommandDD 
ToFullScreenDD $
{EE 	
getFF 
{GG 
ifHH 
(HH 
toFullScreenHH  
==HH! #
nullHH$ (
)HH( )
toFullScreenII  
=II! "
newII# &
ActionCommandII' 4
(II4 5
asyncII5 :
(II; <
	parameterII< E
)IIE F
=>IIG I
{JJ 
ifKK 
(KK 

GlobalDataKK &
.KK& '
CurrentKK' .
.KK. /
MediaSourceKK/ :
!=KK; =
nullKK> B
)KKB C
{LL 
awaitMM !
GlobalMM" (
.MM( )
NavigationInstanceMM) ;
.MM; <
PushModalAsyncMM< J
(MMJ K
newMMK N
FullScreenPageMMO ]
(MM] ^
)MM^ _
)MM_ `
;MM` a
}NN 
}OO 
)OO 
;OO 
returnQQ 
toFullScreenQQ #
;QQ# $
}RR 
}SS 	
privateUU 
ICommandUU 
toDownloadPageUU '
;UU' (
publicVV 
ICommandVV 
ToDownloadPageVV &
{WW 	
getXX 
{YY 
ifZZ 
(ZZ 
toDownloadPageZZ "
==ZZ# %
nullZZ& *
)ZZ* +
toDownloadPage[[ "
=[[# $
new[[% (
ActionCommand[[) 6
([[6 7
async[[7 <
([[= >
	parameter[[> G
)[[G H
=>[[I K
{\\ 
await]] 
Global]] $
.]]$ %
NavigationInstance]]% 7
.]]7 8
PushModalAsync]]8 F
(]]F G
new]]G J
	ModalPage]]K T
(]]T U
new]]U X
DownloadPage]]Y e
(]]e f
)]]f g
,]]g h
Localization]]i u
.]]u v
TitleDownloads	]]v 
)
]] 
)
]] 
;
]] 
}^^ 
)^^ 
;^^ 
return`` 
toDownloadPage`` %
;``% &
}aa 
}bb 	
privatedd 
ICommanddd 
backCommanddd $
;dd$ %
publicee 
ICommandee 
BackCommandee #
{ff 	
getgg 
{hh 
ifii 
(ii 
backCommandii 
==ii  "
nullii# '
)ii' (
backCommandjj 
=jj  !
newjj" %
ActionCommandjj& 3
(jj3 4
asyncjj4 9
(jj: ;
	parameterjj; D
)jjD E
=>jjF H
{kk 
awaitll 
Globalll $
.ll$ %
NavigationInstancell% 7
.ll7 8
PopModalAsyncll8 E
(llE F
)llF G
;llG H
}mm 
)mm 
;mm 
returnoo 
backCommandoo "
;oo" #
}pp 
}qq 	
publictt 
ModalViewModeltt 
(tt 
Gridtt "
	containertt# ,
,tt, -
stringtt. 4
titlett5 :
,tt: ;
booltt< @
topPanelVisiblettA P
=ttQ R
truettS W
)ttW X
{uu 	

ModalTitlevv 
=vv 
titlevv 
;vv 
TopPanelVisibleww 
=ww 
topPanelVisibleww -
;ww- .
	Containerxx 
=xx 
	containerxx !
;xx! "
}yy 	
public}} 
void}} 
	Appearing}} 
(}} 
)}} 
{~~ 	
}
 	
public
 
void
 
Disappearing
  
(
  !
)
! "
{
 	
}
 	
public
 
void
 
Tick
 
(
 
)
 
{
 	
Badge
 
=
  
DownloadProcessing
 &
.
& '

BadgeCount
' 1
.
1 2
ToString
2 :
(
: ;
)
; <
;
< =
BadgeVisible
 
=
  
DownloadProcessing
 -
.
- .

BadgeCount
. 8
>
9 :
$num
; <
;
< =
if
 
(
 
	Container
 
.
 
Children
 "
.
" #
Count
# (
>
) *
$num
+ ,
&&
- /
	Container
0 9
.
9 :
Children
: B
[
B C
$num
C D
]
D E
is
F H
ITimerContent
I V
content
W ^
)
^ _
content
 
.
 
Tick
 
(
 
)
 
;
 
}
 	
}
 
} Ä
FD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\NormalViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
{ 
public 

class 
NormalViewModel  
:! "
PropertyChangedBase# 6
{ 
private 
readonly 

TracksPage #

tracksPage$ .
=/ 0
new1 4

TracksPage5 ?
(? @
)@ A
;A B
private 
readonly 

ArtistPage #

artistPage$ .
=/ 0
new1 4

ArtistPage5 ?
(? @
)@ A
;A B
private 
PlaylistPage 
playlistPage )
;) *
private 
SettingsPage 
settingsPage )
;) *
private 
string 
	pageTitle  
;  !
private 
string 
searchPlaceholder (
;( )
private 
bool 
badgeSyncVisible %
;% &
private   
string   
	badgeSync    
;    !
private!! 
bool!! 
badgeVisible!! !
;!!! "
private"" 
string"" 
badge"" 
;"" 
private## 
int## 
currentButtonIndex## &
=##' (
-##) *
$num##* +
;##+ ,
private$$ 
bool$$ 
titleVisible$$ !
=$$" #
true$$$ (
;$$( )
private%% 
bool%% 
entryVisible%% !
=%%" #
false%%$ )
;%%) *
private&& 
string&& 
	entryText&&  
;&&  !
private(( 
bool(( 
tracksButtonToggled(( (
;((( )
private)) 
bool))  
artistsButtonToggled)) )
;))) *
private** 
bool** "
playlistsButtonToggled** +
;**+ ,
private++ 
bool++ !
settingsButtonToggled++ *
;++* +
private,, 
PlayerPanel,, 
playerPanel,, '
;,,' (
private-- 
IDisposable-- 
loopSubscription-- ,
;--, -
private// 
bool// 
searchCancelVisible// (
;//( )
private00  
ObservableCollection00 $
<00$ %
HistoryModel00% 1
>001 2
suggestionItems003 B
;00B C
private11 
bool11 $
searchSuggestionsVisible11 -
=11. /
false110 5
;115 6
private22 
readonly22 
Entry22 
searchEntry22 *
;22* +
private33 
bool33 
spinnerVisible33 #
;33# $
public77 
string77 
	PageTitle77 
{88 	
get99 
=>99 
	pageTitle99 
;99 
set:: 
{;; 
	pageTitle<< 
=<< 
value<< !
;<<! "
OnPropertyChanged== !
(==! "
)==" #
;==# $
}>> 
}?? 	
publicAA 
boolAA 
BadgeSyncVisibleAA $
{BB 	
getCC 
=>CC 
badgeSyncVisibleCC #
;CC# $
setDD 
{EE 
badgeSyncVisibleFF  
=FF! "
valueFF# (
;FF( )
OnPropertyChangedGG !
(GG! "
)GG" #
;GG# $
}HH 
}II 	
publicKK 
stringKK 
	BadgeSyncKK 
{LL 	
getMM 
=>MM 
	badgeSyncMM 
;MM 
setNN 
{OO 
	badgeSyncPP 
=PP 
valuePP !
;PP! "
OnPropertyChangedQQ !
(QQ! "
)QQ" #
;QQ# $
}RR 
}SS 	
publicUU 
boolUU 
BadgeVisibleUU  
{VV 	
getWW 
=>WW 
badgeVisibleWW 
;WW  
setXX 
{YY 
badgeVisibleZZ 
=ZZ 
valueZZ $
;ZZ$ %
OnPropertyChanged[[ !
([[! "
)[[" #
;[[# $
}\\ 
}]] 	
public__ 
string__ 
Badge__ 
{`` 	
getaa 
=>aa 
badgeaa 
;aa 
setbb 
{cc 
badgedd 
=dd 
valuedd 
;dd 
OnPropertyChangedee !
(ee! "
)ee" #
;ee# $
}ff 
}gg 	
publicii 
Gridii 
	Containerii 
{ii 
getii  #
;ii# $
privateii% ,
setii- 0
;ii0 1
}ii2 3
publickk 
boolkk 
TracksButtonToggledkk '
{ll 	
getmm 
=>mm 
tracksButtonToggledmm &
;mm& '
setnn 
{oo 
tracksButtonToggledpp #
=pp$ %
valuepp& +
;pp+ ,
OnPropertyChangedqq !
(qq! "
)qq" #
;qq# $
}rr 
}ss 	
publicuu 
booluu  
ArtistsButtonToggleduu (
{vv 	
getww 
=>ww  
artistsButtonToggledww '
;ww' (
setxx 
{yy  
artistsButtonToggledzz $
=zz% &
valuezz' ,
;zz, -
OnPropertyChanged{{ !
({{! "
){{" #
;{{# $
}|| 
}}} 	
public 
bool "
PlaylistsButtonToggled *
{
 	
get
 
=>
 $
playlistsButtonToggled
 )
;
) *
set
 
{
 $
playlistsButtonToggled
 &
=
' (
value
) .
;
. /
OnPropertyChanged
 !
(
! "
)
" #
;
# $
}
 
}
 	
public
 
bool
 #
SettingsButtonToggled
 )
{
 	
get
 
=>
 #
settingsButtonToggled
 (
;
( )
set
 
{
 #
settingsButtonToggled
 %
=
& '
value
( -
;
- .
OnPropertyChanged
 !
(
! "
)
" #
;
# $
}
 
}
 	
public
 
PlayerPanel
 
PlayerPanel
 &
{
 	
get
 
=>
 
playerPanel
 
;
 
set
 
{
 
playerPanel
 
=
 
value
 #
;
# $
OnPropertyChanged
 !
(
! "
)
" #
;
# $
}
 
}
 	
public
 
string
 
SearchPlaceholder
 '
{
 	
get
 
=>
 
searchPlaceholder
 $
;
$ %
set
   
{
¡¡ 
searchPlaceholder
¢¢ !
=
¢¢" #
value
¢¢$ )
;
¢¢) *
OnPropertyChanged
££ !
(
££! "
)
££" #
;
££# $
}
¤¤ 
}
¥¥ 	
public
¦¦ 
bool
¦¦ 
TitleVisible
¦¦  
{
§§ 	
get
¨¨ 
=>
¨¨ 
titleVisible
¨¨ 
;
¨¨  
set
©© 
{
ªª 
titleVisible
«« 
=
«« 
value
«« $
;
««$ %
OnPropertyChanged
¬¬ !
(
¬¬! "
)
¬¬" #
;
¬¬# $
}
­­ 
}
®® 	
public
¯¯ 
bool
¯¯ 
EntryVisible
¯¯  
{
°° 	
get
±± 
=>
±± 
entryVisible
±± 
;
±±  
set
²² 
{
³³ 
entryVisible
´´ 
=
´´ 
value
´´ $
;
´´$ %
OnPropertyChanged
µµ !
(
µµ! "
)
µµ" #
;
µµ# $
}
¶¶ 
}
·· 	
public
¸¸ 
string
¸¸ 
	EntryText
¸¸ 
{
¹¹ 	
get
ºº 
=>
ºº 
	entryText
ºº 
;
ºº 
set
»» 
{
¼¼ 
	entryText
½½ 
=
½½ 
value
½½ !
;
½½! "
OnPropertyChanged
¾¾ !
(
¾¾! "
)
¾¾" #
;
¾¾# $!
SearchCancelVisible
ÀÀ #
=
ÀÀ$ %
	entryText
ÀÀ& /
.
ÀÀ/ 0
Length
ÀÀ0 6
>
ÀÀ7 8
$num
ÀÀ9 :
;
ÀÀ: ;
}
ÁÁ 
}
ÂÂ 	
public
ÄÄ 
bool
ÄÄ !
SearchCancelVisible
ÄÄ '
{
ÅÅ 	
get
ÆÆ 
=>
ÆÆ !
searchCancelVisible
ÆÆ &
;
ÆÆ& '
set
ÇÇ 
{
ÈÈ !
searchCancelVisible
ÉÉ #
=
ÉÉ$ %
value
ÉÉ& +
;
ÉÉ+ ,
OnPropertyChanged
ÊÊ !
(
ÊÊ! "
)
ÊÊ" #
;
ÊÊ# $
}
ËË 
}
ÌÌ 	
public
ÎÎ "
ObservableCollection
ÎÎ #
<
ÎÎ# $
HistoryModel
ÎÎ$ 0
>
ÎÎ0 1
SuggestionItems
ÎÎ2 A
{
ÏÏ 	
get
ÐÐ 
=>
ÐÐ 
suggestionItems
ÐÐ "
;
ÐÐ" #
set
ÑÑ 
{
ÒÒ 
suggestionItems
ÓÓ 
=
ÓÓ  !
value
ÓÓ" '
;
ÓÓ' (
OnPropertyChanged
ÔÔ !
(
ÔÔ! "
)
ÔÔ" #
;
ÔÔ# $
}
ÕÕ 
}
ÖÖ 	
public
ØØ 
bool
ØØ &
SearchSuggestionsVisible
ØØ ,
{
ÙÙ 	
get
ÚÚ 
=>
ÚÚ &
searchSuggestionsVisible
ÚÚ +
;
ÚÚ+ ,
set
ÛÛ 
{
ÜÜ &
searchSuggestionsVisible
ÝÝ (
=
ÝÝ) *
value
ÝÝ+ 0
;
ÝÝ0 1
OnPropertyChanged
ÞÞ !
(
ÞÞ! "
)
ÞÞ" #
;
ÞÞ# $
}
ßß 
}
àà 	
public
ââ 
bool
ââ 
SpinnerVisible
ââ "
{
ãã 	
get
ää 
=>
ää 
spinnerVisible
ää !
;
ää! "
set
åå 
{
ææ 
spinnerVisible
çç 
=
çç  
value
çç! &
;
çç& '
OnPropertyChanged
èè !
(
èè! "
)
èè" #
;
èè# $
}
éé 
}
êê 	
private
îî 
ICommand
îî 
gotoPlayerCommand
îî *
;
îî* +
public
ïï 
ICommand
ïï 

GotoPlayer
ïï "
{
ðð 	
get
ññ 
{
òò 
if
óó 
(
óó 
gotoPlayerCommand
óó %
==
óó& (
null
óó) -
)
óó- .
gotoPlayerCommand
ôô %
=
ôô& '
new
ôô( +
ActionCommand
ôô, 9
(
ôô9 :
async
ôô: ?
(
ôô@ A
	parameter
ôôA J
)
ôôJ K
=>
ôôL N
{
õõ 
if
öö 
(
öö 

GlobalData
öö &
.
öö& '
Current
öö' .
.
öö. /
MediaSource
öö/ :
!=
öö; =
null
öö> B
)
ööB C
{
÷÷ 
await
ùù !
Global
ùù" (
.
ùù( ) 
NavigationInstance
ùù) ;
.
ùù; <
PushModalAsync
ùù< J
(
ùùJ K
new
ùùK N
FullScreenPage
ùùO ]
(
ùù] ^
)
ùù^ _
)
ùù_ `
;
ùù` a
}
úú 
}
ûû 
)
ûû 
;
ûû 
return
üü 
gotoPlayerCommand
üü (
;
üü( )
}
ýý 
}
þþ 	
private
 
ICommand
 
gotoTracksCommand
 *
;
* +
public
 
ICommand
 

GotoTracks
 "
{
 	
get
 
{
 
if
 
(
 
gotoTracksCommand
 %
==
& (
null
) -
)
- .
gotoTracksCommand
 %
=
& '
new
( +
ActionCommand
, 9
(
9 :
	parameter
: C
=>
D F
{
 
if
 
(
  
currentButtonIndex
 .
!=
/ 1
$num
2 3
||
4 6
(
7 8
	parameter
8 A
as
B D
bool
E I
?
I J
)
J K
==
L N
true
O S
)
S T
{
 
SetContainer
 (
(
( )

tracksPage
) 3
,
3 4
Localization
5 A
.
A B
Tracks
B H
)
H I
;
I J
Toggle
 "
(
" #
$num
# $
)
$ %
;
% &
}
 
}
 
)
 
;
 
return
 
gotoTracksCommand
 (
;
( )
}
 
}
 	
private
 
ICommand
  
gotoArtistsCommand
 +
;
+ ,
public
 
ICommand
 
GotoArtists
 #
{
 	
get
 
{
 
if
 
(
  
gotoArtistsCommand
 &
==
' )
null
* .
)
. / 
gotoArtistsCommand
 &
=
' (
new
) ,
ActionCommand
- :
(
: ;
	parameter
; D
=>
E G
{
 
if
 
(
  
currentButtonIndex
 .
!=
/ 1
$num
2 3
||
4 6
(
7 8
	parameter
8 A
as
B D
bool
E I
?
I J
)
J K
==
L N
true
O S
)
S T
{
 
SetContainer
 (
(
( )

artistPage
) 3
,
3 4
Localization
5 A
.
A B
Artists
B I
)
I J
;
J K
Toggle
 "
(
" #
$num
# $
)
$ %
;
% &
}
 
}
   
)
   
;
   
return
¢¢  
gotoArtistsCommand
¢¢ )
;
¢¢) *
}
££ 
}
¤¤ 	
private
¦¦ 
ICommand
¦¦ "
gotoPlaylistsCommand
¦¦ -
;
¦¦- .
public
§§ 
ICommand
§§ 
GotoPlaylists
§§ %
{
¨¨ 	
get
©© 
{
ªª 
if
«« 
(
«« "
gotoPlaylistsCommand
«« (
==
««) +
null
««, 0
)
««0 1"
gotoPlaylistsCommand
¬¬ (
=
¬¬) *
new
¬¬+ .
ActionCommand
¬¬/ <
(
¬¬< =
	parameter
¬¬= F
=>
¬¬G I
{
­­ 
if
®® 
(
®®  
currentButtonIndex
®® .
!=
®®/ 1
$num
®®2 3
)
®®3 4
{
¯¯ 
if
°° 
(
°°  
playlistPage
°°  ,
==
°°- /
null
°°0 4
)
°°4 5
playlistPage
±±  ,
=
±±- .
new
±±/ 2
PlaylistPage
±±3 ?
(
±±? @
)
±±@ A
;
±±A B
SetContainer
²² (
(
²²( )
playlistPage
²²) 5
,
²²5 6
Localization
²²7 C
.
²²C D
	Playlists
²²D M
)
²²M N
;
²²N O
Toggle
³³ "
(
³³" #
$num
³³# $
)
³³$ %
;
³³% &
}
´´ 
}
µµ 
)
µµ 
;
µµ 
return
·· "
gotoPlaylistsCommand
·· +
;
··+ ,
}
¸¸ 
}
¹¹ 	
private
»» 
ICommand
»» !
gotoSettingsCommand
»» ,
;
»», -
public
¼¼ 
ICommand
¼¼ 
GotoSettings
¼¼ $
{
½½ 	
get
¾¾ 
{
¿¿ 
if
ÀÀ 
(
ÀÀ !
gotoSettingsCommand
ÀÀ '
==
ÀÀ( *
null
ÀÀ+ /
)
ÀÀ/ 0!
gotoSettingsCommand
ÁÁ '
=
ÁÁ( )
new
ÁÁ* -
ActionCommand
ÁÁ. ;
(
ÁÁ; <
	parameter
ÁÁ< E
=>
ÁÁF H
{
ÂÂ 
if
ÃÃ 
(
ÃÃ  
currentButtonIndex
ÃÃ .
!=
ÃÃ/ 1
$num
ÃÃ2 3
)
ÃÃ3 4
{
ÄÄ 
if
ÅÅ 
(
ÅÅ  
settingsPage
ÅÅ  ,
==
ÅÅ- /
null
ÅÅ0 4
)
ÅÅ4 5
settingsPage
ÆÆ  ,
=
ÆÆ- .
new
ÆÆ/ 2
SettingsPage
ÆÆ3 ?
(
ÆÆ? @
)
ÆÆ@ A
;
ÆÆA B
SetContainer
ÇÇ (
(
ÇÇ( )
settingsPage
ÇÇ) 5
,
ÇÇ5 6
Localization
ÇÇ7 C
.
ÇÇC D
Settings
ÇÇD L
)
ÇÇL M
;
ÇÇM N
Toggle
ÈÈ "
(
ÈÈ" #
$num
ÈÈ# $
)
ÈÈ$ %
;
ÈÈ% &
}
ÉÉ 
}
ÊÊ 
)
ÊÊ 
;
ÊÊ 
return
ÌÌ !
gotoSettingsCommand
ÌÌ *
;
ÌÌ* +
}
ÍÍ 
}
ÎÎ 	
private
ÐÐ 
ICommand
ÐÐ !
gotoDownloadCommand
ÐÐ ,
;
ÐÐ, -
public
ÑÑ 
ICommand
ÑÑ 
GotoDownload
ÑÑ $
{
ÒÒ 	
get
ÓÓ 
{
ÔÔ 
if
ÕÕ 
(
ÕÕ !
gotoDownloadCommand
ÕÕ '
==
ÕÕ( *
null
ÕÕ+ /
)
ÕÕ/ 0!
gotoDownloadCommand
ÖÖ '
=
ÖÖ( )
new
ÖÖ* -
ActionCommand
ÖÖ. ;
(
ÖÖ; <
async
ÖÖ< A
(
ÖÖB C
	parameter
ÖÖC L
)
ÖÖL M
=>
ÖÖN P
{
×× 
await
ØØ 
Global
ØØ $
.
ØØ$ % 
NavigationInstance
ØØ% 7
.
ØØ7 8
PushModalAsync
ØØ8 F
(
ØØF G
new
ØØG J
	ModalPage
ØØK T
(
ØØT U
new
ØØU X
DownloadPage
ØØY e
(
ØØe f
)
ØØf g
,
ØØg h
Localization
ØØi u
.
ØØu v
TitleDownloadsØØv 
)ØØ 
)ØØ 
;ØØ 
}
ÙÙ 
)
ÙÙ 
;
ÙÙ 
return
ÛÛ !
gotoDownloadCommand
ÛÛ *
;
ÛÛ* +
}
ÜÜ 
}
ÝÝ 	
private
ßß 
ICommand
ßß  
clearSearchCommand
ßß +
;
ßß+ ,
public
àà 
ICommand
àà 
ClearSearchText
àà '
{
áá 	
get
ââ 
{
ãã 
if
ää 
(
ää  
clearSearchCommand
ää &
==
ää' )
null
ää* .
)
ää. / 
clearSearchCommand
åå &
=
åå' (
new
åå) ,
ActionCommand
åå- :
(
åå: ;
	parameter
åå; D
=>
ååE G
{
ææ 
searchEntry
çç #
.
çç# $
Unfocus
çç$ +
(
çç+ ,
)
çç, -
;
çç- .
	EntryText
èè !
=
èè" #
$str
èè$ &
;
èè& '
}
éé 
)
éé 
;
éé 
return
ëë  
clearSearchCommand
ëë )
;
ëë) *
}
ìì 
}
íí 	
public
ðð 
NormalViewModel
ðð 
(
ðð 
Grid
ðð #
	container
ðð$ -
,
ðð- .
PlayerPanel
ðð/ :
panel
ðð; @
,
ðð@ A
Entry
ððB G
searchEntry
ððH S
)
ððS T
{
ññ 	
this
òò 
.
òò 
searchEntry
òò 
=
òò 
searchEntry
òò *
;
òò* +
SuggestionItems
óó 
=
óó 
new
óó !"
ObservableCollection
óó" 6
<
óó6 7
HistoryModel
óó7 C
>
óóC D
(
óóD E
)
óóE F
;
óóF G
	Container
ôô 
=
ôô 
	container
ôô !
;
ôô! "
PlayerPanel
õõ 
=
õõ 
panel
õõ 
;
õõ  
SpinnerVisible
öö 
=
öö 
true
öö !
;
öö! "
	Directory
øø 
.
øø 
CreateDirectory
øø %
(
øø% &

GlobalData
øø& 0
.
øø0 1
Current
øø1 8
.
øø8 9
	MusicPath
øø9 B
)
øøB C
;
øøC D
GotoArtists
ùù 
.
ùù 
Execute
ùù 
(
ùù  
true
ùù  $
)
ùù$ %
;
ùù% &
if
úú 
(
úú 
!
úú 
Global
úú 
.
úú 
Loaded
úú 
)
úú 
{
ûû 

GlobalData
üü 
.
üü 
Current
üü "
.
üü" #
LoadTags
üü# +
(
üü+ ,
)
üü, -
;
üü- .

GlobalData
ýý 
.
ýý 
Current
ýý "
.
ýý" #
LoadSavedTracks
ýý# 2
(
ýý2 3
)
ýý3 4
;
ýý4 5
Task
þþ 
task
þþ 
=
þþ 
Task
þþ  
.
þþ  !
Run
þþ! $
(
þþ$ %
async
þþ% *
(
þþ* +
)
þþ+ ,
=>
þþ- /
{
ÿÿ 
if
 
(
 
CacheLoader
 #
.
# $
IsCacheAvailable
$ 4
(
4 5
)
5 6
)
6 7
CacheLoader
 #
.
# $
	LoadCache
$ -
(
- .
)
. /
;
/ 0
await
 
GlobalLoader
 &
.
& '
Load
' +
(
+ ,
)
, -
;
- .
}
 
)
 
;
 
task
 
.
 
ContinueWith
 !
(
! "
t
" #
=>
$ &
{
 

GlobalData
 
.
 
Current
 &
.
& '

LoadConfig
' 1
(
1 2
)
2 3
;
3 4
Global
 
.
 
Loaded
 !
=
" #
true
$ (
;
( )
if
 
(
 

GlobalData
 "
.
" #
Current
# *
.
* +
AutoDownload
+ 7
&&
8 :
Global
; A
.
A B
Application
B M
.
M N
HasInternet
N Y
(
Y Z
)
Z [
)
[ \
{
 
Task
 
.
 
Run
  
(
  !
async
! &
(
' (
)
( )
=>
* ,
{
 
YoutubeClient
 )
client
* 0
=
1 2
new
3 6
YoutubeClient
7 D
(
D E
)
E F
;
F G
foreach
 #
(
$ %
var
% (
key
) ,
in
- /

GlobalData
0 :
.
: ;
Current
; B
.
B C!
WebToLocalPlaylists
C V
.
V W
Keys
W [
.
[ \
ToList
\ b
(
b c
)
c d
)
d e
{
 
if
  "
(
# $

GlobalData
$ .
.
. /
Current
/ 6
.
6 7
	Playlists
7 @
.
@ A
ContainsKey
A L
(
L M

GlobalData
M W
.
W X
Current
X _
.
_ `!
WebToLocalPlaylists
` s
[
s t
key
t w
]
w x
)
x y
)
y z 
DownloadProcessing
$ 6
.
6 7
AddRange
7 ?
(
? @
await
@ E
client
F L
.
L M
	Playlists
M V
.
V W
GetVideosAsync
W e
(
e f
key
f i
)
i j
,
j k

GlobalData
l v
.
v w
Current
w ~
.
~ "
WebToLocalPlaylists 
[ 
key 
] 
, 
key 
, 
true ¢
)¢ £
;£ ¤
}
 
}
 
)
 
;
 
}
 
}
 
)
 
;
 
}
 
}
 	
public
 
void
 
	Appearing
 
(
 
)
 
{
 	
var
 
src
 
=
 
System
 
.
 
Reactive
 %
.
% &
Linq
& *
.
* +

Observable
+ 5
.
5 6
Timer
6 ;
(
; <
TimeSpan
< D
.
D E
Zero
E I
,
I J
TimeSpan
K S
.
S T
FromMilliseconds
T d
(
d e
$num
e h
)
h i
)
i j
.
j k
	Timestamp
k t
(
t u
)
u v
;
v w
loopSubscription
 
=
 
src
 "
.
" #
	Subscribe
# ,
(
, -
time
- 1
=>
2 4
Tick
5 9
(
9 :
)
: ;
)
; <
;
< =
if
   
(
   
	Container
   
.
   
Children
   "
.
  " #
Count
  # (
>
  ) *
$num
  + ,
&&
  - /
	Container
  0 9
.
  9 :
Children
  : B
[
  B C
$num
  C D
]
  D E
is
  F H
IVisibleContent
  I X
)
  X Y
(
¡¡ 
	Container
¡¡ 
.
¡¡ 
Children
¡¡ #
[
¡¡# $
$num
¡¡$ %
]
¡¡% &
as
¡¡' )
IVisibleContent
¡¡* 9
)
¡¡9 :
.
¡¡: ;
	Appearing
¡¡; D
(
¡¡D E
)
¡¡E F
;
¡¡F G
if
££ 
(
££ 

GlobalData
££ 
.
££ 
Current
££ "
.
££" #
Audios
££# )
.
££) *
Count
££* /
==
££0 2
$num
££3 4
&&
££5 7

GlobalData
££8 B
.
££B C
Current
££C J
.
££J K
SavedTracks
££K V
.
££V W
Count
££W \
==
££] _
$num
££` a
)
££a b
{
¤¤ 

GlobalData
¥¥ 
.
¥¥ 
Current
¥¥ "
.
¥¥" #
LoadTags
¥¥# +
(
¥¥+ ,
)
¥¥, -
;
¥¥- .
CacheLoader
¦¦ 
.
¦¦ 
	LoadCache
¦¦ %
(
¦¦% &
)
¦¦& '
;
¦¦' (

GlobalData
§§ 
.
§§ 
Current
§§ "
.
§§" #
LoadSavedTracks
§§# 2
(
§§2 3
)
§§3 4
;
§§4 5

GlobalData
¨¨ 
.
¨¨ 
Current
¨¨ "
.
¨¨" #

LoadConfig
¨¨# -
(
¨¨- .
)
¨¨. /
;
¨¨/ 0
}
©© 
}
ªª 	
public
¬¬ 
void
¬¬ 
Disappearing
¬¬  
(
¬¬  !
)
¬¬! "
{
­­ 	
loopSubscription
®® 
?
®® 
.
®® 
Dispose
®® %
(
®®% &
)
®®& '
;
®®' (
loopSubscription
¯¯ 
=
¯¯ 
null
¯¯ #
;
¯¯# $
}
°° 	
public
²² 
void
²² 
Tick
²² 
(
²² 
)
²² 
{
³³ 	
SearchPlaceholder
´´ 
=
´´ 
Localization
´´  ,
.
´´, -
Search
´´- 3
;
´´3 4
Badge
µµ 
=
µµ  
DownloadProcessing
µµ &
.
µµ& '

BadgeCount
µµ' 1
.
µµ1 2
ToString
µµ2 :
(
µµ: ;
)
µµ; <
;
µµ< =
BadgeVisible
¶¶ 
=
¶¶  
DownloadProcessing
¶¶ -
.
¶¶- .

BadgeCount
¶¶. 8
>
¶¶9 :
$num
¶¶; <
;
¶¶< =
SpinnerVisible
·· 
=
·· 
	Container
·· &
.
··& '
Children
··' /
.
··/ 0
Count
··0 5
==
··6 8
$num
··9 :
||
··; =
!
··> ?
Global
··? E
.
··E F
Loaded
··F L
;
··L M
PlayerPanel
¸¸ 
?
¸¸ 
.
¸¸ 
Tick
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸  
foreach
ºº 
(
ºº 
var
ºº 
children
ºº !
in
ºº" $
	Container
ºº% .
.
ºº. /
Children
ºº/ 7
.
ºº7 8
ToList
ºº8 >
(
ºº> ?
)
ºº? @
)
ºº@ A
{
»» 
if
¼¼ 
(
¼¼ 
children
¼¼ 
.
¼¼ 
	IsVisible
¼¼ &
&&
¼¼' )
children
¼¼* 2
is
¼¼3 5
ITimerContent
¼¼6 C
content
¼¼D K
)
¼¼K L
content
½½ 
.
½½ 
Tick
½½  
(
½½  !
)
½½! "
;
½½" #
}
¾¾ 
}
¿¿ 	
public
ÁÁ 
void
ÁÁ 
RefreshSuggestion
ÁÁ %
(
ÁÁ% &
)
ÁÁ& '
{
ÂÂ 	
string
ÃÃ 
searchedText
ÃÃ 
=
ÃÃ  !
	EntryText
ÃÃ" +
??
ÃÃ, .
$str
ÃÃ/ 1
;
ÃÃ1 2
var
ÄÄ 
newList
ÄÄ 
=
ÄÄ 
SearchProcessing
ÄÄ *
.
ÄÄ* +'
GenerateSearchSuggestions
ÄÄ+ D
(
ÄÄD E
)
ÄÄE F
.
ÄÄF G
FindAll
ÄÄG N
(
ÄÄN O
item
ÅÅ 
=>
ÅÅ 
searchedText
ÅÅ $
.
ÅÅ$ %
ToLowerInvariant
ÅÅ% 5
(
ÅÅ5 6
)
ÅÅ6 7
.
ÅÅ7 8
Contains
ÅÅ8 @
(
ÅÅ@ A
item
ÅÅA E
.
ÅÅE F
ToLowerInvariant
ÅÅF V
(
ÅÅV W
)
ÅÅW X
)
ÅÅX Y
||
ÅÅZ \
item
ÅÅ] a
.
ÅÅa b
ToLowerInvariant
ÅÅb r
(
ÅÅr s
)
ÅÅs t
.
ÅÅt u
Contains
ÅÅu }
(
ÅÅ} ~
searchedTextÅÅ~ 
.ÅÅ  
ToLowerInvariantÅÅ 
(ÅÅ 
)ÅÅ 
)ÅÅ 
)ÅÅ 
;ÅÅ  
SuggestionItems
ÇÇ 
.
ÇÇ 
Clear
ÇÇ !
(
ÇÇ! "
)
ÇÇ" #
;
ÇÇ# $
foreach
ÈÈ 
(
ÈÈ 
var
ÈÈ 
item
ÈÈ 
in
ÈÈ  
newList
ÈÈ! (
)
ÈÈ( )
{
ÉÉ 
SuggestionItems
ÊÊ 
.
ÊÊ  
Add
ÊÊ  #
(
ÊÊ# $
new
ÊÊ$ '
HistoryModel
ÊÊ( 4
(
ÊÊ4 5
)
ÊÊ5 6
{
ÊÊ7 8
Text
ÊÊ9 =
=
ÊÊ> ?
item
ÊÊ@ D
}
ÊÊE F
)
ÊÊF G
;
ÊÊG H
}
ËË 
}
ÌÌ 	
public
ÍÍ 
async
ÍÍ 
void
ÍÍ %
SuggestionItem_Selected
ÍÍ 1
(
ÍÍ1 2
object
ÍÍ2 8
sender
ÍÍ9 ?
,
ÍÍ? @*
SelectedItemChangedEventArgs
ÍÍA ]
e
ÍÍ^ _
)
ÍÍ_ `
{
ÎÎ 	
int
ÏÏ 
index
ÏÏ 
=
ÏÏ 
e
ÏÏ 
.
ÏÏ 
SelectedItemIndex
ÏÏ +
;
ÏÏ+ ,
if
ÑÑ 
(
ÑÑ 
index
ÑÑ 
>=
ÑÑ 
$num
ÑÑ 
&&
ÑÑ 
index
ÑÑ #
<
ÑÑ$ %
SuggestionItems
ÑÑ& 5
.
ÑÑ5 6
Count
ÑÑ6 ;
)
ÑÑ; <
{
ÒÒ 
if
ÓÓ 
(
ÓÓ 
Global
ÓÓ 
.
ÓÓ 
Application
ÓÓ &
.
ÓÓ& '
HasInternet
ÓÓ' 2
(
ÓÓ2 3
)
ÓÓ3 4
)
ÓÓ4 5
await
ÔÔ 
Global
ÔÔ  
.
ÔÔ  ! 
NavigationInstance
ÔÔ! 3
.
ÔÔ3 4
PushModalAsync
ÔÔ4 B
(
ÔÔB C
new
ÔÔC F
	ModalPage
ÔÔG P
(
ÔÔP Q
new
ÔÔQ T
SearchResultPage
ÔÔU e
(
ÔÔe f
SuggestionItems
ÔÔf u
[
ÔÔu v
index
ÔÔv {
]
ÔÔ{ |
.
ÔÔ| }
TextÔÔ} 
)ÔÔ 
,ÔÔ 
SuggestionItemsÔÔ 
[ÔÔ 
indexÔÔ 
]ÔÔ 
.ÔÔ 
TextÔÔ 
)ÔÔ  
)ÔÔ  ¡
;ÔÔ¡ ¢
else
ÕÕ 
await
ÖÖ 
Global
ÖÖ  
.
ÖÖ  !
Page
ÖÖ! %
.
ÖÖ% &
DisplayAlert
ÖÖ& 2
(
ÖÖ2 3
Localization
ÖÖ3 ?
.
ÖÖ? @
Warning
ÖÖ@ G
,
ÖÖG H
Localization
ÖÖI U
.
ÖÖU V
NoConnection
ÖÖV b
,
ÖÖb c
Localization
ÖÖd p
.
ÖÖp q
Cancel
ÖÖq w
)
ÖÖw x
;
ÖÖx y
(
ØØ 
sender
ØØ 
as
ØØ 
ListView
ØØ #
)
ØØ# $
.
ØØ$ %
SelectedItem
ØØ% 1
=
ØØ2 3
null
ØØ4 8
;
ØØ8 9
}
ÙÙ 
}
ÚÚ 	
private
àà 
void
àà 
Toggle
àà 
(
àà 
int
àà 
buttonIndex
àà  +
=
àà, -
$num
àà. /
)
àà/ 0
{
áá 	!
TracksButtonToggled
ââ 
=
ââ  !
buttonIndex
ââ" -
==
ââ. 0
$num
ââ1 2
;
ââ2 3"
ArtistsButtonToggled
ãã  
=
ãã! "
buttonIndex
ãã# .
==
ãã/ 1
$num
ãã2 3
;
ãã3 4$
PlaylistsButtonToggled
ää "
=
ää# $
buttonIndex
ää% 0
==
ää1 3
$num
ää4 5
;
ää5 6#
SettingsButtonToggled
åå !
=
åå" #
buttonIndex
åå$ /
==
åå0 2
$num
åå3 4
;
åå4 5 
currentButtonIndex
ææ 
=
ææ  
buttonIndex
ææ! ,
;
ææ, -
}
çç 	
private
éé 
void
éé 
SetContainer
éé !
(
éé! "
ContentView
éé" -
content
éé. 5
,
éé5 6
string
éé7 =
title
éé> C
)
ééC D
{
êê 	
if
ëë 
(
ëë 
!
ëë 
	Container
ëë 
.
ëë 
Children
ëë #
.
ëë# $
Contains
ëë$ ,
(
ëë, -
content
ëë- 4
)
ëë4 5
)
ëë5 6
	Container
ìì 
.
ìì 
Children
ìì "
.
ìì" #
Add
ìì# &
(
ìì& '
content
ìì' .
)
ìì. /
;
ìì/ 0
else
íí 
{
îî 
	Container
ïï 
.
ïï 
Children
ïï "
.
ïï" #
Remove
ïï# )
(
ïï) *
content
ïï* 1
)
ïï1 2
;
ïï2 3
	Container
ðð 
.
ðð 
Children
ðð "
.
ðð" #
Add
ðð# &
(
ðð& '
content
ðð' .
)
ðð. /
;
ðð/ 0
}
ññ 
if
òò 
(
òò 
	Container
òò 
.
òò 
Children
òò "
.
òò" #
Count
òò# (
>
òò) *
$num
òò+ ,
)
òò, -
{
óó 
foreach
ôô 
(
ôô 
var
ôô 
children
ôô %
in
ôô& (
	Container
ôô) 2
.
ôô2 3
Children
ôô3 ;
)
ôô; <
{
õõ 
if
÷÷ 
(
÷÷ 
children
÷÷  
.
÷÷  !
	IsVisible
÷÷! *
)
÷÷* +
{
øø 
if
ùù 
(
ùù 
children
ùù $
is
ùù% '
IVisibleContent
ùù( 7
)
ùù7 8
(
úú 
children
úú %
as
úú& (
IVisibleContent
úú) 8
)
úú8 9
.
úú9 :
Disappearing
úú: F
(
úúF G
)
úúG H
;
úúH I
children
ûû  
.
ûû  !
	IsVisible
ûû! *
=
ûû+ ,
false
ûû- 2
;
ûû2 3
}
üü 
if
þþ 
(
þþ 
children
þþ  
==
þþ! #
content
þþ$ +
)
þþ+ ,
{
ÿÿ 
if
 
(
 
children
 $
is
% '
IVisibleContent
( 7
)
7 8
(
 
children
 %
as
& (
IVisibleContent
) 8
)
8 9
.
9 :
	Appearing
: C
(
C D
)
D E
;
E F
children
  
.
  !
	IsVisible
! *
=
+ ,
true
- 1
;
1 2
}
 
else
 
children
  
.
  !
	IsVisible
! *
=
+ ,
false
- 2
;
2 3
}
 
}
 
	PageTitle
 
=
 
title
 
;
 
}
 	
}
 
} È
JD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\PermissionViewModel.cs
	namespace		 	
Newtone		
 
.		 
Mobile		 
.		 
UI		 
.		 

ViewModels		 &
{

 
public 

class 
PermissionViewModel $
{ 
private 
ICommand 
grant 
; 
public 
ICommand 
Grant 
{ 	
get 
{ 
if 
( 
grant 
== 
null !
)! "
grant 
= 
new 
ActionCommand  -
(- .
	parameter. 7
=>8 :
{ 
System 
. 
Diagnostics *
.* +
Debug+ 0
.0 1
	WriteLine1 :
(: ;
$str; M
)M N
;N O
Global 
. 
Permissions *
.* +
Request+ 2
(2 3
)3 4
;4 5
} 
) 
; 
return 
grant 
; 
} 
} 	
public 
PermissionViewModel "
(" #
)# $
{ 	
Device   
.   

StartTimer   
(   
TimeSpan   &
.  & '
FromSeconds  ' 2
(  2 3
$num  3 6
)  6 7
,  7 8
Check  9 >
)  > ?
;  ? @
}!! 	
private$$ 
bool$$ 
Check$$ 
($$ 
)$$ 
{%% 	
if&& 
(&& 
Global&& 
.&& 
Permissions&& "
.&&" #
IsValid&&# *
(&&* +
)&&+ ,
)&&, -
{'' 

GlobalData(( 
.(( 
Current(( "
.((" #

SaveConfig((# -
(((- .
)((. /
;((/ 0
if** 
(** 
Global** 
.** 
TV** 
)** 
{++ 
App,, 
.,, 
Instance,,  
.,,  !
MainPage,,! )
=,,* +
new,,, /
Views,,0 5
.,,5 6
TV,,6 8
.,,8 9

NormalPage,,9 C
(,,C D
),,D E
;,,E F
}-- 
else.. 
{// 
App00 
.00 
Instance00  
.00  !
MainPage00! )
=00* +
new00, /

NormalPage000 :
(00: ;
)00; <
;00< =
}11 
Task33 
.33 
Run33 
(33 
async33 
(33  
)33  !
=>33" $
{33% &
await44 
PopToRootAsync44 (
(44( )
)44) *
;44* +
}55 
)55 
.55 
Wait55 
(55 
)55 
;55 
return77 
false77 
;77 
}88 
else99 
{:: 
return;; 
true;; 
;;; 
}<< 
}== 	
private?? 
async?? 
Task?? 
PopToRootAsync?? )
(??) *
)??* +
{@@ 	
whileAA 
(AA 
AppAA 
.AA 
InstanceAA 
.AA  
MainPageAA  (
.AA( )

NavigationAA) 3
.AA3 4

ModalStackAA4 >
.AA> ?
CountAA? D
>AAE F
$numAAG H
)AAH I
{BB 
awaitCC 
AppCC 
.CC 
InstanceCC "
.CC" #
MainPageCC# +
.CC+ ,

NavigationCC, 6
.CC6 7
PopModalAsyncCC7 D
(CCD E
falseCCE J
)CCJ K
;CCK L
}DD 
}EE 	
}HH 
}II â.
HD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\PlaylistViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
{ 
public 

class 
PlaylistViewModel "
{ 
public  
ObservableCollection #
<# $
PlaylistModel$ 1
>1 2
Items3 8
{9 :
get; >
;> ?
private@ G
setH K
;K L
}M N
public  
ObservableCollection #
<# $
NListViewItem$ 1
>1 2
	ListItems3 <
{= >
get? B
;B C
privateD K
setL O
;O P
}Q R
public 
Func 
< 
NListViewItem !
,! "
View# '
>' (
ItemTemplate) 5
{ 	
get 
{ 
return 
item 
=> 
new "
Views# (
.( )
TV) +
.+ ,
	ViewCells, 5
.5 6
PlaylistGridItem6 F
(F G
itemG K
)K L
;L M
} 
} 	
public 
bool 
IsInitializing "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
PlaylistViewModel  
(  !
)! "
{ 	
Items   
=   
new    
ObservableCollection   ,
<  , -
PlaylistModel  - :
>  : ;
(  ; <
)  < =
;  = >
	ListItems!! 
=!! 
new!!  
ObservableCollection!! 0
<!!0 1
NListViewItem!!1 >
>!!> ?
(!!? @
)!!@ A
;!!A B

Initialize"" 
("" 
)"" 
;"" 
}## 	
public&& 
void&& 

Initialize&& 
(&& 
)&&  
{'' 	
IsInitializing(( 
=(( 
true(( !
;((! "
Items)) 
.)) 
Clear)) 
()) 
))) 
;)) 
	ListItems** 
.** 
Clear** 
(** 
)** 
;** 
List++ 
<++ 
string++ 
>++ 

beforeSort++ #
=++$ %
new++& )
List++* .
<++. /
string++/ 5
>++5 6
(++6 7
)++7 8
;++8 9
foreach-- 
(-- 
string-- 
playlist-- $
in--% '

GlobalData--( 2
.--2 3
Current--3 :
.--: ;
	Playlists--; D
.--D E
Keys--E I
)--I J
{.. 

beforeSort// 
.// 
Add// 
(// 
playlist// '
)//' (
;//( )
}00 
List22 
<22 
string22 
>22 
	afterSort22 "
=22# $

beforeSort22% /
.22/ 0
OrderBy220 7
(227 8
o228 9
=>22: <
o22= >
)22> ?
.22? @
ToList22@ F
(22F G
)22G H
;22H I
foreach44 
(44 
var44 
playlistName44 %
in44& (
	afterSort44) 2
)442 3
{55 
ImageSource66 
image66 !
=66" #
ImageSource66$ /
.66/ 0
FromFile660 8
(668 9
$str669 I
)66I J
;66J K
foreach77 
(77 
string77 
filePath77  (
in77) +

GlobalData77, 6
.776 7
Current777 >
.77> ?
	Playlists77? H
[77H I
playlistName77I U
]77U V
)77V W
{88 
MediaSource99 
source99  &
=99' (
null99) -
;99- .
if:: 
(:: 
filePath::  
.::  !
Length::! '
==::( *
$num::+ -
)::- .
source;; 
=;;  

GlobalData;;! +
.;;+ ,
Current;;, 3
.;;3 4
SavedTracks;;4 ?
[;;? @
filePath;;@ H
];;H I
;;;I J
else<< 
source== 
===  

GlobalData==! +
.==+ ,
Current==, 3
.==3 4
Audios==4 :
[==: ;
filePath==; C
]==C D
;==D E
if>> 
(>> 
source>> 
.>> 
Image>> $
!=>>% '
null>>( ,
)>>, -
{?? 
image@@ 
=@@ 
ImageProcessing@@  /
.@@/ 0
	FromArray@@0 9
(@@9 :
source@@: @
.@@@ A
Image@@A F
)@@F G
;@@G H
breakAA 
;AA 
}BB 
}CC 
ItemsEE 
.EE 
AddEE 
(EE 
newEE 
PlaylistModelEE +
(EE+ ,
)EE, -
{EE. /
ImageEE0 5
=EE6 7
imageEE8 =
,EE= >
NameEE? C
=EED E
playlistNameEEF R
,EER S

TrackCountEET ^
=EE_ `

GlobalDataEEa k
.EEk l
CurrentEEl s
.EEs t
	PlaylistsEEt }
[EE} ~
playlistName	EE~ 
]
EE 
.
EE 
Count
EE 
}
EE 
)
EE 
;
EE 
	ListItemsFF 
.FF 
AddFF 
(FF 
ItemsFF #
[FF# $
ItemsFF$ )
.FF) *
CountFF* /
-FF0 1
$numFF2 3
]FF3 4
)FF4 5
;FF5 6
}GG 
IsInitializingHH 
=HH 
falseHH "
;HH" #
}II 	
}KK 
}LL Ç¤
LD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\SearchResultViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
{ 
public 

class !
SearchResultViewModel &
:' (
PropertyChangedBase) <
{ 
private  
ObservableCollection $
<$ %
Models% +
.+ ,
SearchResultModel, =
>= >
items? D
;D E
private 
readonly 
ObservableBridge )
<) *
Newtone* 1
.1 2
Core2 6
.6 7
Models7 =
.= >
SearchResultModel> O
>O P
rawItemsQ Y
;Y Z
private 
int 
currentPage 
=  !
$num" #
;# $
private 
bool 

pageLoaded 
=  !
false" '
;' (
private 
readonly 
string 
searchedText  ,
;, -
private 
bool 
spinnerVisible #
=$ %
false& +
;+ ,
private 
int 
maxItems 
; 
public""  
ObservableCollection"" #
<""# $
Models""$ *
.""* +
SearchResultModel""+ <
>""< =
Items""> C
{## 	
get$$ 
=>$$ 
items$$ 
;$$ 
set%% 
{&& 
items'' 
='' 
value'' 
;'' 
OnPropertyChanged(( !
(((! "
)((" #
;((# $
})) 
}** 	
public,, 
bool,, 
SpinnerVisible,, "
{-- 	
get.. 
=>.. 
spinnerVisible.. !
;..! "
set// 
{00 
spinnerVisible11 
=11  
value11! &
;11& '
OnPropertyChanged22 !
(22! "
)22" #
;22# $
}33 
}44 	
public66  
ObservableCollection66 #
<66# $
NListViewItem66$ 1
>661 2
	ListItems663 <
{66= >
get66? B
;66B C
private66D K
set66L O
;66O P
}66Q R
public77 
Func77 
<77 
NListViewItem77 !
,77! "
View77# '
>77' (
ItemTemplate77) 5
=>776 8
item779 =
=>77> @
new77A D 
SearchResultViewCell77E Y
(77Y Z
item77Z ^
)77^ _
;77_ `
private:: 
ICommand::  
itemAppearingCommand:: -
;::- .
public;; 
ICommand;; 
ItemAppearing;; %
{<< 	
get== 
{>> 
if?? 
(??  
itemAppearingCommand?? (
==??) +
null??, 0
)??0 1 
itemAppearingCommand@@ (
=@@) *
new@@+ .
ActionCommand@@/ <
(@@< =
	parameter@@= F
=>@@G I
{AA 
intBB 
	itemIndexBB %
=BB& '
(BB( )
intBB) ,
)BB, -
	parameterBB- 6
;BB6 7
ifDD 
(DD 

pageLoadedDD &
&&DD' )
	itemIndexDD* 3
==DD4 6
ItemsDD7 <
.DD< =
CountDD= B
-DDC D
$numDDE F
&&DDG I
(DDJ K
maxItemsDDK S
==DDT V
-DDW X
$numDDX Y
||DDZ \
ItemsDD] b
.DDb c
CountDDc h
<DDi j
maxItemsDDk s
)DDs t
)DDt u
{EE 

pageLoadedFF &
=FF' (
falseFF) .
;FF. /
currentPageGG '
++GG' )
;GG) *
TaskII  
.II  !
RunII! $
(II$ %
asyncII% *
(II+ ,
)II, -
=>II. 0
{JJ 
SpinnerVisibleKK  .
=KK/ 0
trueKK1 5
;KK5 6
ifLL  "
(LL# $
GlobalLL$ *
.LL* +
ApplicationLL+ 6
.LL6 7
HasInternetLL7 B
(LLB C
)LLC D
)LLD E
maxItemsMM$ ,
=MM- .
awaitMM/ 4
SearchProcessingMM5 E
.MME F
SearchMMF L
(MML M
searchedTextMMM Y
,MMY Z
rawItemsMM[ c
,MMc d
currentPageMMe p
)MMp q
;MMq r
usingOO  %
(OO& '
	WebClientOO' 0
	webClientOO1 :
=OO; <
newOO= @
	WebClientOOA J
(OOJ K
)OOK L
)OOL M
{PP  !
forQQ$ '
(QQ( )
intQQ) ,
aQQ- .
=QQ/ 0
$numQQ1 2
;QQ2 3
aQQ4 5
<QQ6 7
ItemsQQ8 =
.QQ= >
CountQQ> C
;QQC D
aQQE F
++QQF H
)QQH I
{RR$ %
ifSS( *
(SS+ ,
!SS, -
stringSS- 3
.SS3 4
IsNullOrEmptySS4 A
(SSA B
ItemsSSB G
[SSG H
aSSH I
]SSI J
.SSJ K
ThumbUrlSSK S
)SSS T
)SST U
{TT( )
byteUU, 0
[UU0 1
]UU1 2
dataUU3 7
=UU8 9
	webClientUU: C
.UUC D
DownloadDataUUD P
(UUP Q
ItemsUUQ V
[UUV W
aUUW X
]UUX Y
.UUY Z
ThumbUrlUUZ b
)UUb c
;UUc d
ItemsVV, 1
[VV1 2
aVV2 3
]VV3 4
.VV4 5
ImageVV5 :
=VV; <
dataVV= A
;VVA B
}WW( )
elseXX( ,
{YY( )
ItemsZZ, 1
[ZZ1 2
aZZ2 3
]ZZ3 4
.ZZ4 5
ThumbZZ5 :
=ZZ; <
ImageProcessingZZ= L
.ZZL M
	FromArrayZZM V
(ZZV W
ItemsZZW \
[ZZ\ ]
aZZ] ^
]ZZ^ _
.ZZ_ `
ImageZZ` e
)ZZe f
;ZZf g
}[[( )
Items\\( -
[\\- .
a\\. /
]\\/ 0
.\\0 1
CheckChanges\\1 =
(\\= >
)\\> ?
;\\? @
}]]$ %

pageLoaded__$ .
=__/ 0
true__1 5
;__5 6
}``  !
SpinnerVisiblebb  .
=bb/ 0
falsebb1 6
;bb6 7
}cc 
)cc 
;cc 
}dd 
}ee 
)ee 
;ee 
returngg  
itemAppearingCommandgg +
;gg+ ,
}hh 
}ii 	
publicll !
SearchResultViewModelll $
(ll$ %
stringll% +
searchedTextll, 8
)ll8 9
{mm 	
thisnn 
.nn 
searchedTextnn 
=nn 
searchedTextnn  ,
;nn, -
Itemsoo 
=oo 
newoo  
ObservableCollectionoo ,
<oo, -
Modelsoo- 3
.oo3 4
SearchResultModeloo4 E
>ooE F
(ooF G
)ooG H
;ooH I
	ListItemspp 
=pp 
newpp  
ObservableCollectionpp 0
<pp0 1
NListViewItempp1 >
>pp> ?
(pp? @
)pp@ A
;ppA B
rawItemsrr 
=rr 
newrr 
ObservableBridgerr +
<rr+ ,
Newtonerr, 3
.rr3 4
Corerr4 8
.rr8 9
Modelsrr9 ?
.rr? @
SearchResultModelrr@ Q
>rrQ R
{ss 
Actiontt 
=tt 
modeltt 
=>tt !
{uu 
Devicevv 
.vv #
BeginInvokeOnMainThreadvv 2
(vv2 3
(vv3 4
)vv4 5
=>vv6 8
{ww 
Itemsxx 
.xx 
Addxx !
(xx! "
newxx" %
Modelsxx& ,
.xx, -
SearchResultModelxx- >
(xx> ?
modelxx? D
)xxD E
)xxE F
;xxF G
	ListItemsyy !
.yy! "
Addyy" %
(yy% &
Itemsyy& +
[yy+ ,
^yy, -
$numyy- .
]yy. /
)yy/ 0
;yy0 1
}zz 
)zz 
;zz 
}{{ 
}|| 
;|| 
Task~~ 
.~~ 
Run~~ 
(~~ 
async~~ 
(~~ 
)~~ 
=>~~  
{ 
SpinnerVisible
 
=
  
true
! %
;
% &
SearchProcessing
  
.
  !
SearchOffline
! .
(
. /
searchedText
/ ;
,
; <
rawItems
= E
)
E F
;
F G
if
 
(
 
Global
 
.
 
Application
 &
.
& '
HasInternet
' 2
(
2 3
)
3 4
)
4 5
maxItems
 
=
 
await
 $
SearchProcessing
% 5
.
5 6
Search
6 <
(
< =
searchedText
= I
,
I J
rawItems
K S
)
S T
;
T U
using
 
(
 
	WebClient
  
	webClient
! *
=
+ ,
new
- 0
	WebClient
1 :
(
: ;
)
; <
)
< =
{
 
for
 
(
 
int
 
a
 
=
  
$num
! "
;
" #
a
$ %
<
& '
Items
( -
.
- .
Count
. 3
;
3 4
a
5 6
++
6 8
)
8 9
{
 
if
 
(
 
!
 
string
 #
.
# $
IsNullOrEmpty
$ 1
(
1 2
Items
2 7
[
7 8
a
8 9
]
9 :
.
: ;
ThumbUrl
; C
)
C D
)
D E
{
 
byte
  
[
  !
]
! "
data
# '
=
( )
	webClient
* 3
.
3 4
DownloadData
4 @
(
@ A
Items
A F
[
F G
a
G H
]
H I
.
I J
ThumbUrl
J R
)
R S
;
S T
Items
 !
[
! "
a
" #
]
# $
.
$ %
Image
% *
=
+ ,
data
- 1
;
1 2
}
 
else
 
{
 
if
 
(
  
Items
  %
[
% &
a
& '
]
' (
.
( )
Image
) .
==
/ 1
null
2 6
||
7 9
Items
: ?
[
? @
a
@ A
]
A B
.
B C
Image
C H
.
H I
Length
I O
>
P Q
$num
R S
)
S T
Items
  %
[
% &
a
& '
]
' (
.
( )
Thumb
) .
=
/ 0
ImageProcessing
1 @
.
@ A
	FromArray
A J
(
J K
Items
K P
[
P Q
a
Q R
]
R S
.
S T
Image
T Y
)
Y Z
;
Z [
else
  
Items
  %
[
% &
a
& '
]
' (
.
( )
Thumb
) .
=
/ 0
ImageSource
1 <
.
< =
FromFile
= E
(
E F
$str
F V
)
V W
;
W X
}
 
Items
 
[
 
a
 
]
  
.
  !
CheckChanges
! -
(
- .
)
. /
;
/ 0
Device
 
.
 %
BeginInvokeOnMainThread
 6
(
6 7
(
7 8
)
8 9
=>
: <
{
 
if
 
(
 
a
  
<
! "
Items
# (
.
( )
Count
) .
)
. /
{
 
	ListItems
  )
[
) *
a
* +
]
+ ,
=
- .
Items
/ 4
[
4 5
a
5 6
]
6 7
;
7 8
}
 
}
 
)
 
;
 
}
 

pageLoaded
¡¡ 
=
¡¡  
true
¡¡! %
;
¡¡% &
}
¢¢ 
SpinnerVisible
¤¤ 
=
¤¤  
false
¤¤! &
;
¤¤& '
}
¥¥ 
)
¥¥ 
;
¥¥ 
}
¦¦ 	
public
©© 
async
©© 
Task
©© 
Item_Selected
©© '
(
©©' (
object
©©( .
sender
©©/ 5
,
©©5 6*
SelectedItemChangedEventArgs
©©7 S
e
©©T U
)
©©U V
{
ªª 	
int
«« 
index
«« 
=
«« 
e
«« 
.
«« 
SelectedItemIndex
«« +
;
««+ ,
if
­­ 
(
­­ 
index
­­ 
>=
­­ 
$num
­­ 
&&
­­ 
index
­­ #
<
­­$ %
Items
­­& +
.
­­+ ,
Count
­­, 1
)
­­1 2
{
®® 
var
¯¯ 
item
¯¯ 
=
¯¯ 
Items
¯¯  
[
¯¯  !
index
¯¯! &
]
¯¯& '
;
¯¯' (

GlobalData
°° 
.
°° 
Current
°° "
.
°°" #
CurrentPlaylist
°°# 2
.
°°2 3
Clear
°°3 8
(
°°8 9
)
°°9 :
;
°°: ;
if
²² 
(
²² 
string
²² 
.
²² 
IsNullOrEmpty
²² (
(
²²( )
item
²²) -
.
²²- .
MixId
²². 3
)
²²3 4
)
²²4 5
{
³³ 

GlobalData
´´ 
.
´´ 
Current
´´ &
.
´´& '
PlaylistPosition
´´' 7
=
´´8 9
e
´´: ;
.
´´; <
SelectedItemIndex
´´< M
;
´´M N
foreach
¶¶ 
(
¶¶ 
var
¶¶  
_item
¶¶! &
in
¶¶' )
Items
¶¶* /
)
¶¶/ 0
{
·· 

GlobalData
¸¸ "
.
¸¸" #
Current
¸¸# *
.
¸¸* +
CurrentPlaylist
¸¸+ :
.
¸¸: ;
Add
¸¸; >
(
¸¸> ?
new
¸¸? B
Newtone
¸¸C J
.
¸¸J K
Core
¸¸K O
.
¸¸O P
Media
¸¸P U
.
¸¸U V
MediaSource
¸¸V a
(
¸¸a b
)
¸¸b c
{
¹¹ 
Artist
ºº "
=
ºº# $
_item
ºº% *
.
ºº* +
Author
ºº+ 1
,
ºº1 2
Duration
»» $
=
»»% &
_item
»»' ,
.
»», -
Duration
»»- 5
,
»»5 6
FilePath
¼¼ $
=
¼¼% &
_item
¼¼' ,
.
¼¼, -
Id
¼¼- /
,
¼¼/ 0
Image
½½ !
=
½½" #
_item
½½$ )
.
½½) *
Image
½½* /
,
½½/ 0
Title
¾¾ !
=
¾¾" #
_item
¾¾$ )
.
¾¾) *
Title
¾¾* /
,
¾¾/ 0
Type
¿¿  
=
¿¿! "
_item
¿¿# (
.
¿¿( )
Id
¿¿) +
.
¿¿+ ,
Length
¿¿, 2
==
¿¿3 5
$num
¿¿6 8
?
¿¿9 :
Newtone
¿¿; B
.
¿¿B C
Core
¿¿C G
.
¿¿G H
Media
¿¿H M
.
¿¿M N
MediaSource
¿¿N Y
.
¿¿Y Z

SourceType
¿¿Z d
.
¿¿d e
Web
¿¿e h
:
¿¿i j
Core
¿¿k o
.
¿¿o p
Media
¿¿p u
.
¿¿u v
MediaSource¿¿v 
.¿¿ 

SourceType¿¿ 
.¿¿ 
Local¿¿ 
}
ÀÀ 
)
ÀÀ 
;
ÀÀ 
}
ÁÁ 

GlobalData
ÃÃ 
.
ÃÃ 
Current
ÃÃ &
.
ÃÃ& '
MediaSource
ÃÃ' 2
=
ÃÃ3 4

GlobalData
ÃÃ5 ?
.
ÃÃ? @
Current
ÃÃ@ G
.
ÃÃG H
CurrentPlaylist
ÃÃH W
[
ÃÃW X
e
ÃÃX Y
.
ÃÃY Z
SelectedItemIndex
ÃÃZ k
]
ÃÃk l
;
ÃÃl m

GlobalData
ÅÅ 
.
ÅÅ 
Current
ÅÅ &
.
ÅÅ& '
MediaPlayer
ÅÅ' 2
.
ÅÅ2 3
LoadPlaylist
ÅÅ3 ?
(
ÅÅ? @
(
ÅÅ@ A
)
ÅÅA B
=>
ÅÅC E
{
ÆÆ 
List
ÇÇ 
<
ÇÇ 
Core
ÇÇ !
.
ÇÇ! "
Media
ÇÇ" '
.
ÇÇ' (
MediaSource
ÇÇ( 3
>
ÇÇ3 4
newPlaylist
ÇÇ5 @
=
ÇÇA B
Items
ÇÇC H
.
ÇÇH I
Select
ÇÇI O
(
ÇÇO P
_item
ÇÇP U
=>
ÇÇV X
new
ÇÇY \
Core
ÇÇ] a
.
ÇÇa b
Media
ÇÇb g
.
ÇÇg h
MediaSource
ÇÇh s
(
ÇÇs t
)
ÇÇt u
{
ÈÈ 
Artist
ÉÉ "
=
ÉÉ# $
_item
ÉÉ% *
.
ÉÉ* +
Author
ÉÉ+ 1
,
ÉÉ1 2
Duration
ÊÊ $
=
ÊÊ% &
_item
ÊÊ' ,
.
ÊÊ, -
Duration
ÊÊ- 5
,
ÊÊ5 6
FilePath
ËË $
=
ËË% &
_item
ËË' ,
.
ËË, -
Id
ËË- /
,
ËË/ 0
Image
ÌÌ !
=
ÌÌ" #
_item
ÌÌ$ )
.
ÌÌ) *
Image
ÌÌ* /
,
ÌÌ/ 0
Title
ÍÍ !
=
ÍÍ" #
_item
ÍÍ$ )
.
ÍÍ) *
Title
ÍÍ* /
,
ÍÍ/ 0
Type
ÎÎ  
=
ÎÎ! "
_item
ÎÎ# (
.
ÎÎ( )
Id
ÎÎ) +
.
ÎÎ+ ,
Length
ÎÎ, 2
==
ÎÎ3 5
$num
ÎÎ6 8
?
ÎÎ9 :
Newtone
ÎÎ; B
.
ÎÎB C
Core
ÎÎC G
.
ÎÎG H
Media
ÎÎH M
.
ÎÎM N
MediaSource
ÎÎN Y
.
ÎÎY Z

SourceType
ÎÎZ d
.
ÎÎd e
Web
ÎÎe h
:
ÎÎi j
Core
ÎÎk o
.
ÎÎo p
Media
ÎÎp u
.
ÎÎu v
MediaSourceÎÎv 
.ÎÎ 

SourceTypeÎÎ 
.ÎÎ 
LocalÎÎ 
}
ÏÏ 
)
ÏÏ 
.
ÏÏ 
ToList
ÏÏ !
(
ÏÏ! "
)
ÏÏ" #
;
ÏÏ# $
return
ÑÑ 
newPlaylist
ÑÑ *
;
ÑÑ* +
}
ÒÒ 
,
ÒÒ 
index
ÒÒ 
,
ÒÒ 
true
ÒÒ "
,
ÒÒ" #
true
ÒÒ$ (
)
ÒÒ( )
;
ÒÒ) *
}
ÓÓ 
else
ÔÔ 
{
ÕÕ 

GlobalData
ÖÖ 
.
ÖÖ 
Current
ÖÖ &
.
ÖÖ& '
MediaPlayer
ÖÖ' 2
.
ÖÖ2 3
LoadPlaylist
ÖÖ3 ?
(
ÖÖ? @
item
ÖÖ@ D
.
ÖÖD E
MixId
ÖÖE J
,
ÖÖJ K
$num
ÖÖL M
,
ÖÖM N
new
ÖÖO R
Newtone
ÖÖS Z
.
ÖÖZ [
Core
ÖÖ[ _
.
ÖÖ_ `
Media
ÖÖ` e
.
ÖÖe f
MediaSource
ÖÖf q
(
ÖÖq r
)
ÖÖr s
{
×× 
Artist
ØØ 
=
ØØ  
item
ØØ! %
.
ØØ% &
Author
ØØ& ,
,
ØØ, -
Duration
ÙÙ  
=
ÙÙ! "
item
ÙÙ# '
.
ÙÙ' (
Duration
ÙÙ( 0
,
ÙÙ0 1
FilePath
ÚÚ  
=
ÚÚ! "
item
ÚÚ# '
.
ÚÚ' (
Id
ÚÚ( *
,
ÚÚ* +
Image
ÛÛ 
=
ÛÛ 
item
ÛÛ  $
.
ÛÛ$ %
Image
ÛÛ% *
,
ÛÛ* +
Title
ÜÜ 
=
ÜÜ 
item
ÜÜ  $
.
ÜÜ$ %
Title
ÜÜ% *
,
ÜÜ* +
Type
ÝÝ 
=
ÝÝ 
Newtone
ÝÝ &
.
ÝÝ& '
Core
ÝÝ' +
.
ÝÝ+ ,
Media
ÝÝ, 1
.
ÝÝ1 2
MediaSource
ÝÝ2 =
.
ÝÝ= >

SourceType
ÝÝ> H
.
ÝÝH I
Web
ÝÝI L
}
ÞÞ 
,
ÞÞ 
true
ÞÞ 
,
ÞÞ 
true
ÞÞ !
)
ÞÞ! "
;
ÞÞ" #
}
ßß 
await
áá 
Global
áá 
.
áá  
NavigationInstance
áá /
.
áá/ 0
PushModalAsync
áá0 >
(
áá> ?
new
áá? B
FullScreenPage
ááC Q
(
ááQ R
)
ááR S
)
ááS T
;
ááT U
(
ãã 
sender
ãã 
as
ãã 
Xamarin
ãã "
.
ãã" #
Forms
ãã# (
.
ãã( )
ListView
ãã) 1
)
ãã1 2
.
ãã2 3
SelectedItem
ãã3 ?
=
ãã@ A
null
ããB F
;
ããF G
}
ää 
}
åå 	
public
çç 
void
çç *
SearchListView_ItemAppearing
çç 0
(
çç0 1
int
çç1 4
	itemIndex
çç5 >
)
çç> ?
{
èè 	
ItemAppearing
éé 
.
éé 
Execute
éé !
(
éé! "
	itemIndex
éé" +
)
éé+ ,
;
éé, -
}
êê 	
}
ìì 
}íí Ö[
FD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\SearchViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
{ 
public 

class 
SearchViewModel  
:! "
PropertyChangedBase# 6
{ 
private  
ObservableCollection $
<$ %
HistoryModel% 1
>1 2
items3 8
;8 9
private  
ObservableCollection $
<$ %
HistoryModel% 1
>1 2
suggestionItems3 B
;B C
private 
string 

searchText !
=" #
string$ *
.* +
Empty+ 0
;0 1
private 
bool $
searchSuggestionsVisible -
=. /
false0 5
;5 6
public  
ObservableCollection #
<# $
HistoryModel$ 0
>0 1
Items2 7
{ 	
get 
=> 
items 
; 
set 
{ 
items 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
}   
}!! 	
public##  
ObservableCollection## #
<### $
HistoryModel##$ 0
>##0 1
SuggestionItems##2 A
{$$ 	
get%% 
=>%% 
suggestionItems%% "
;%%" #
set&& 
{'' 
suggestionItems(( 
=((  !
value((" '
;((' (
OnPropertyChanged)) !
())! "
)))" #
;))# $
}** 
}++ 	
public-- 
string-- 

SearchText--  
{.. 	
get// 
=>// 

searchText// 
;// 
set00 
{11 

searchText22 
=22 
value22 "
;22" #
OnPropertyChanged33 !
(33! "
)33" #
;33# $
}44 
}55 	
public77 
bool77 $
SearchSuggestionsVisible77 ,
{88 	
get99 
=>99 $
searchSuggestionsVisible99 +
;99+ ,
set:: 
{;; $
searchSuggestionsVisible<< (
=<<) *
value<<+ 0
;<<0 1
OnPropertyChanged== !
(==! "
)==" #
;==# $
OnPropertyChanged>> !
(>>! "
(>>" #
)>># $
=>>>% ',
 SearchSuggestionsVisibleNegative>>( H
)>>H I
;>>I J
}?? 
}@@ 	
publicBB 
boolBB ,
 SearchSuggestionsVisibleNegativeBB 4
=>BB5 7
!BB8 9$
SearchSuggestionsVisibleBB9 Q
;BBQ R
privateEE 
ICommandEE 
clearCommandEE %
;EE% &
publicFF 
ICommandFF 
	ClearListFF !
{GG 	
getHH 
{II 
ifJJ 
(JJ 
clearCommandJJ  
==JJ! #
nullJJ$ (
)JJ( )
clearCommandKK  
=KK! "
newKK# &
ActionCommandKK' 4
(KK4 5
	parameterKK5 >
=>KK? A
{LL 
ItemsMM 
.MM 
ClearMM #
(MM# $
)MM$ %
;MM% &

GlobalDataNN "
.NN" #
CurrentNN# *
.NN* +
HistoryNN+ 2
.NN2 3
ClearNN3 8
(NN8 9
)NN9 :
;NN: ;

GlobalDataOO "
.OO" #
CurrentOO# *
.OO* +

SaveConfigOO+ 5
(OO5 6
)OO6 7
;OO7 8
}PP 
)PP 
;PP 
returnQQ 
clearCommandQQ #
;QQ# $
}RR 
}SS 	
publicWW 
SearchViewModelWW 
(WW 
)WW  
{XX 	
SuggestionItemsYY 
=YY 
newYY ! 
ObservableCollectionYY" 6
<YY6 7
HistoryModelYY7 C
>YYC D
(YYD E
)YYE F
;YYF G
ItemsZZ 
=ZZ 
newZZ  
ObservableCollectionZZ ,
<ZZ, -
HistoryModelZZ- 9
>ZZ9 :
(ZZ: ;
)ZZ; <
;ZZ< =
foreach[[ 
([[ 
var[[ 
item[[ 
in[[  

GlobalData[[! +
.[[+ ,
Current[[, 3
.[[3 4
History[[4 ;
.[[; <
Reverse[[< C
<[[C D
HistoryModel[[D P
>[[P Q
([[Q R
)[[R S
)[[S T
{\\ 
Items]] 
.]] 
Add]] 
(]] 
item]] 
)]] 
;]]  
}^^ 
}__ 	
publiccc 
asynccc 
voidcc !
SearchEntry_Completedcc /
(cc/ 0
stringcc0 6

searchTextcc7 A
)ccA B
{dd 	

SearchTextee 
=ee 

searchTextee #
;ee# $
ifff 
(ff 
!ff 
stringff 
.ff 
IsNullOrEmptyff %
(ff% &

SearchTextff& 0
)ff0 1
)ff1 2
{gg 
awaithh 
Globalhh 
.hh 
NavigationInstancehh /
.hh/ 0
PushModalAsynchh0 >
(hh> ?
newhh? B
	ModalPagehhC L
(hhL M
newhhM P
SearchResultPagehhQ a
(hha b

SearchTexthhb l
)hhl m
,hhm n

SearchTexthho y
)hhy z
)hhz {
;hh{ |
}ii 
}jj 	
publicll 
asyncll 
voidll 
Item_Selectedll '
(ll' (
objectll( .
senderll/ 5
,ll5 6(
SelectedItemChangedEventArgsll7 S
ellT U
)llU V
{mm 	
intnn 
indexnn 
=nn 
enn 
.nn 
SelectedItemIndexnn +
;nn+ ,
ifpp 
(pp 
indexpp 
>=pp 
$numpp 
&&pp 
indexpp #
<pp$ %
Itemspp& +
.pp+ ,
Countpp, 1
)pp1 2
{qq 
ifrr 
(rr 
Globalrr 
.rr 
Applicationrr &
.rr& '
HasInternetrr' 2
(rr2 3
)rr3 4
)rr4 5
awaitss 
Globalss  
.ss  !
NavigationInstancess! 3
.ss3 4
PushModalAsyncss4 B
(ssB C
newssC F
	ModalPagessG P
(ssP Q
newssQ T
SearchResultPagessU e
(sse f
Itemsssf k
[ssk l
indexssl q
]ssq r
.ssr s
Textsss w
)ssw x
,ssx y
Itemsssz 
[	ss 
index
ss 
]
ss 
.
ss 
Text
ss 
)
ss 
)
ss 
;
ss 
elsett 
awaituu 
Globaluu  
.uu  !
Pageuu! %
.uu% &
DisplayAlertuu& 2
(uu2 3
Localizationuu3 ?
.uu? @
Warninguu@ G
,uuG H
LocalizationuuI U
.uuU V
NoConnectionuuV b
,uub c
Localizationuud p
.uup q
Canceluuq w
)uuw x
;uux y
(ww 
senderww 
asww 
Xamarinww "
.ww" #
Formsww# (
.ww( )
ListViewww) 1
)ww1 2
.ww2 3
SelectedItemww3 ?
=ww@ A
nullwwB F
;wwF G
}xx 
}yy 	
public{{ 
async{{ 
void{{ #
SuggestionItem_Selected{{ 1
({{1 2
object{{2 8
sender{{9 ?
,{{? @(
SelectedItemChangedEventArgs{{A ]
e{{^ _
){{_ `
{|| 	
int}} 
index}} 
=}} 
e}} 
.}} 
SelectedItemIndex}} +
;}}+ ,
if 
( 
index 
>= 
$num 
&& 
index #
<$ %
SuggestionItems& 5
.5 6
Count6 ;
); <
{
 
if
 
(
 
Global
 
.
 
Application
 &
.
& '
HasInternet
' 2
(
2 3
)
3 4
)
4 5
await
 
Global
  
.
  ! 
NavigationInstance
! 3
.
3 4
PushModalAsync
4 B
(
B C
new
C F
	ModalPage
G P
(
P Q
new
Q T
SearchResultPage
U e
(
e f
SuggestionItems
f u
[
u v
index
v {
]
{ |
.
| }
Text} 
) 
, 
SuggestionItems 
[ 
index 
] 
. 
Text 
)  
)  ¡
;¡ ¢
else
 
await
 
Global
  
.
  !
Page
! %
.
% &
DisplayAlert
& 2
(
2 3
Localization
3 ?
.
? @
Warning
@ G
,
G H
Localization
I U
.
U V
NoConnection
V b
,
b c
Localization
d p
.
p q
Cancel
q w
)
w x
;
x y
(
 
sender
 
as
 
Xamarin
 "
.
" #
Forms
# (
.
( )
ListView
) 1
)
1 2
.
2 3
SelectedItem
3 ?
=
@ A
null
B F
;
F G
}
 
}
 	
public
 
void
 
RefreshSuggestion
 %
(
% &
string
& ,
text
- 1
)
1 2
{
 	&
SearchSuggestionsVisible
 $
=
% &
true
' +
;
+ ,
var
 
newList
 
=
 
SearchProcessing
 *
.
* +'
GenerateSearchSuggestions
+ D
(
D E
)
E F
.
F G
FindAll
G N
(
N O
item
O S
=>
T V
item
W [
.
[ \
ToLowerInvariant
\ l
(
l m
)
m n
.
n o
Contains
o w
(
w x
text
x |
.
| }
ToLowerInvariant} 
( 
) 
) 
|| 
text 
.  
ToLowerInvariant ©
(© ª
)ª «
.« ¬
Contains¬ ´
(´ µ
itemµ ¹
.¹ º 
ToLowerInvariantº Ê
(Ê Ë
)Ë Ì
)Ì Í
)Í Î
;Î Ï
SuggestionItems
 
.
 
Clear
 !
(
! "
)
" #
;
# $
foreach
 
(
 
var
 
item
 
in
  
newList
! (
)
( )
{
 
SuggestionItems
 
.
  
Add
  #
(
# $
new
$ '
HistoryModel
( 4
(
4 5
)
5 6
{
7 8
Text
9 =
=
> ?
item
@ D
}
E F
)
F G
;
G H
}
 
}
 	
}
 
} 
HD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\SettingsViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
{ 
public 

class 
SettingsViewModel "
:# $
PropertyChangedBase% 8
{ 
private  
ObservableCollection $
<$ %
SettingsModel% 2
>2 3
items4 9
;9 :
private 
string 
version 
; 
public  
ObservableCollection #
<# $
SettingsModel$ 1
>1 2
Items3 8
{ 	
get 
=> 
items 
; 
set 
{ 
items 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
} 
}   	
public""  
ObservableCollection"" #
<""# $
NListViewItem""$ 1
>""1 2
	ListItems""3 <
{""= >
get""? B
;""B C
set""D G
;""G H
}""I J
public$$ 
string$$ 
Version$$ 
{%% 	
get&& 
=>&& 
version&& 
;&& 
set'' 
{(( 
version)) 
=)) 
value)) 
;))  
OnPropertyChanged** !
(**! "
)**" #
;**# $
}++ 
},, 	
public.. 
Func.. 
<.. 
NListViewItem.. !
,..! "
View..# '
>..' (
ItemTemplate..) 5
=>..6 8
item..9 =
=>..> @
new..A D
SettingsViewCell..E U
(..U V
item..V Z
)..Z [
;..[ \
private11 
ICommand11 
gotoWWW11  
;11  !
public22 
ICommand22 
GotoWWW22 
{33 	
get44 
{55 
if66 
(66 
gotoWWW66 
==66 
null66 #
)66# $
gotoWWW77 
=77 
new77 !
ActionCommand77" /
(77/ 0
	parameter770 9
=>77: <
{88 
Device99 
.99 
OpenUri99 &
(99& '
new99' *
Uri99+ .
(99. /
$str99/ K
)99K L
)99L M
;99M N
}:: 
):: 
;:: 
return;; 
gotoWWW;; 
;;; 
}<< 
}== 	
public@@ 
SettingsViewModel@@  
(@@  !
)@@! "
{AA 	
ItemsBB 
=BB 
newBB  
ObservableCollectionBB ,
<BB, -
SettingsModelBB- :
>BB: ;
{CC 
newDD 
SettingsModelDD !
(DD! "
)DD" #
{DD$ %
NameDD& *
=DD+ ,
LocalizationDD- 9
.DD9 :
	Settings0DD: C
}DDD E
,DDE F
newEE 
SettingsModelEE !
(EE! "
)EE" #
{EE$ %
NameEE& *
=EE+ ,
LocalizationEE- 9
.EE9 :
	Settings2EE: C
}EED E
,EEE F
newFF 
SettingsModelFF !
(FF! "
)FF" #
{FF$ %
NameFF& *
=FF+ ,
LocalizationFF- 9
.FF9 :
	Settings4FF: C
}FFD E
,FFE F
newGG 
SettingsModelGG !
(GG! "
)GG" #
{GG$ %
NameGG& *
=GG+ ,
LocalizationGG- 9
.GG9 :
	Settings5GG: C
}GGD E
,GGE F
newHH 
SettingsModelHH !
(HH! "
)HH" #
{HH$ %
NameHH& *
=HH+ ,
LocalizationHH- 9
.HH9 :
AutoDownloadHH: F
,HHF G
DescriptionHHH S
=HHT U

GlobalDataHHV `
.HH` a
CurrentHHa h
.HHh i
AutoDownloadHHi u
?HHv w
Localization	HHx 
.
HH 
Yes
HH 
:
HH 
Localization
HH 
.
HH 
No
HH 
}
HH 
,
HH 
newII 
SettingsModelII !
(II! "
)II" #
{II$ %
NameII& *
=II+ ,
LocalizationII- 9
.II9 :
	Settings3II: C
,IIC D
DescriptionIIE P
=IIQ R

GlobalDataIIS ]
.II] ^
CurrentII^ e
.IIe f
IgnoreAutoFocusIIf u
?IIv w
Localization	IIx 
.
II 
Yes
II 
:
II 
Localization
II 
.
II 
No
II 
}
II 
}JJ 
;JJ 
	ListItemsLL 
=LL 
newLL  
ObservableCollectionLL 0
<LL0 1
NListViewItemLL1 >
>LL> ?
(LL? @
)LL@ A
;LLA B
foreachMM 
(MM 
varMM 
itemMM 
inMM 
ItemsMM  %
)MM% &
{NN 
	ListItemsOO 
.OO 
AddOO 
(OO 
itemOO "
)OO" #
;OO# $
}PP 
VersionRR 
=RR 
$strRR 
+RR 
GlobalRR "
.RR" #
ApplicationRR# .
.RR. /

GetVersionRR/ 9
(RR9 :
)RR: ;
;RR; <
}SS 	
publicVV 
asyncVV 
SystemVV 
.VV 
	ThreadingVV %
.VV% &
TasksVV& +
.VV+ ,
TaskVV, 0
Item_SelectedVV1 >
(VV> ?
objectVV? E
senderVVF L
,VVL M(
SelectedItemChangedEventArgsVVN j
eVVk l
)VVl m
{WW 	
intXX 
indexXX 
=XX 
eXX 
.XX 
SelectedItemIndexXX +
;XX+ ,
ifZZ 
(ZZ 
indexZZ 
>=ZZ 
$numZZ 
&&ZZ 
indexZZ #
<ZZ$ %
ItemsZZ& +
.ZZ+ ,
CountZZ, 1
)ZZ1 2
{[[ 
if\\ 
(\\ 
e\\ 
.\\ 
SelectedItemIndex\\ '
>\\( )
$num\\* +
&&\\, .
e\\/ 0
.\\0 1
SelectedItem\\1 =
!=\\> @
null\\A E
)\\E F
{]] 
if^^ 
(^^ 
e^^ 
.^^ 
SelectedItemIndex^^ +
==^^, .
$num^^/ 0
)^^0 1
{__ 
foreach`` 
(``  !
string``! '
filepath``( 0
in``1 3

GlobalData``4 >
.``> ?
Current``? F
.``F G
Audios``G M
.``M N
Keys``N R
)``R S
{aa 
ifcc 
(cc  
!cc  !

GlobalDatacc! +
.cc+ ,
Currentcc, 3
.cc3 4
	AudioTagscc4 =
.cc= >
ContainsKeycc> I
(ccI J
filepathccJ R
)ccR S
)ccS T
{dd 
varee  #
tagee$ '
=ee( )

GlobalDataee* 4
.ee4 5
Currentee5 <
.ee< =
Audiosee= C
[eeC D
filepatheeD L
]eeL M
;eeM N
ifff  "
(ff# $
tagff$ '
.ff' (
Artistff( .
==ff/ 1
Localizationff2 >
.ff> ?
UnknownArtistff? L
)ffL M
{gg  !
FileInfohh$ ,
fileInfohh- 5
=hh6 7
newhh8 ;
FileInfohh< D
(hhD E
filepathhhE M
)hhM N
;hhN O
stringjj$ *
namejj+ /
=jj0 1
fileInfojj2 :
.jj: ;
Namejj; ?
.jj? @
Replacejj@ G
(jjG H
fileInfojjH P
.jjP Q
	ExtensionjjQ Z
,jjZ [
$strjj\ ^
)jj^ _
;jj_ `
stringkk$ *
[kk* +
]kk+ ,
splittedkk- 5
=kk6 7
namekk8 <
.kk< =
Splitkk= B
(kkB C
newkkC F
stringkkG M
[kkM N
]kkN O
{kkP Q
$strkkR W
,kkW X
$strkkY ^
,kk^ _
$strkk` d
,kkd e
$strkkf j
}kkk l
,kkl m
StringSplitOptions	kkn 
.
kk  
RemoveEmptyEntries
kk 
)
kk 
;
kk 
stringmm$ *
artistmm+ 1
=mm2 3
splittedmm4 <
.mm< =
Lengthmm= C
==mmD F
$nummmG H
?mmI J
LocalizationmmK W
.mmW X
UnknownArtistmmX e
:mmf g
splittedmmh p
[mmp q
$nummmq r
]mmr s
;mms t
stringnn$ *
titlenn+ 0
=nn1 2
splittednn3 ;
[nn; <
splittednn< D
.nnD E
LengthnnE K
==nnL N
$numnnO P
?nnQ R
$numnnS T
:nnU V
$numnnW X
]nnX Y
;nnY Z

GlobalDataoo$ .
.oo. /
Currentoo/ 6
.oo6 7
	AudioTagsoo7 @
.oo@ A
AddooA D
(ooD E
filepathooE M
,ooM N
newooO R
MediaSourceTagooS a
(ooa b
)oob c
{ood e
Authoroof l
=oom n
artistooo u
,oou v
Titleoow |
=oo} ~
title	oo 
}
oo 
)
oo 
;
oo 
}pp  !
}qq 
}rr 

GlobalDatass "
.ss" #
Currentss# *
.ss* +
SaveTagsss+ 3
(ss3 4
)ss4 5
;ss5 6
Globaltt 
.tt 
Applicationtt *
.tt* +
ShowSnackbartt+ 7
(tt7 8
Localizationtt8 D
.ttD E
ReadyttE J
)ttJ K
;ttK L
}uu 
elsevv 
ifvv 
(vv 
evv 
.vv 
SelectedItemIndexvv 0
==vv1 3
$numvv4 5
)vv5 6
{ww 
stringxx 
[xx 
]xx  
filesxx! &
=xx' (
	Directoryxx) 2
.xx2 3
GetFilesxx3 ;
(xx; <

GlobalDataxx< F
.xxF G
CurrentxxG N
.xxN O
DataPathxxO W
,xxW X
$strxxY b
)xxb c
;xxc d
foreachzz 
(zz  !
stringzz! '
filezz( ,
inzz- /
fileszz0 5
)zz5 6
{{{ 
File||  
.||  !
Delete||! '
(||' (
file||( ,
)||, -
;||- .
}}} 
UI 
. 
Global !
.! "
Application" -
.- .
ShowSnackbar. :
(: ;
Localization; G
.G H
ReadyH M
)M N
;N O
}
 
else
 
if
 
(
 
e
 
.
 
SelectedItemIndex
 0
==
1 3
$num
4 5
)
5 6
{
 
Global
 
.
 
Application
 *
.
* +
AddFolderToScan
+ :
(
: ;
)
; <
;
< =
}
 
else
 
if
 
(
 
e
 
.
 
SelectedItemIndex
 0
==
1 3
$num
4 5
)
5 6
{
 
string
 
newLang
 &
=
' (
await
) .
Global
/ 5
.
5 6
Page
6 :
.
: ; 
DisplayActionSheet
; M
(
M N
Localization
N Z
.
Z [
	Settings5
[ d
,
d e
Localization
f r
.
r s
Cancel
s y
,
y z
null
{ 
, 
Localization 
. 

LanguagePL 
, 
Localization ¦
.¦ §

LanguageEN§ ±
,± ²
Localization³ ¿
.¿ À

LanguageRUÀ Ê
)Ê Ë
;Ë Ì
if
 
(
 
newLang
 #
==
$ &
Localization
' 3
.
3 4

LanguagePL
4 >
)
> ?

GlobalData
 &
.
& '
Current
' .
.
. /
CurrentLanguage
/ >
=
? @
$str
A E
;
E F
else
 
if
 
(
  !
newLang
! (
==
) +
Localization
, 8
.
8 9

LanguageEN
9 C
)
C D

GlobalData
 &
.
& '
Current
' .
.
. /
CurrentLanguage
/ >
=
? @
$str
A E
;
E F
else
 
if
 
(
  !
newLang
! (
==
) +
Localization
, 8
.
8 9

LanguageRU
9 C
)
C D

GlobalData
 &
.
& '
Current
' .
.
. /
CurrentLanguage
/ >
=
? @
$str
A E
;
E F
Localization
 $
.
$ %
RefreshLanguage
% 4
(
4 5
)
5 6
;
6 7

GlobalData
 "
.
" #
Current
# *
.
* +

SaveConfig
+ 5
(
5 6
)
6 7
;
7 8
Global
 
.
 
Application
 *
.
* +
ShowSnackbar
+ 7
(
7 8
Localization
8 D
.
D E
SettingsChanges
E T
)
T U
;
U V
}
 
else
 
if
 
(
 
e
 
.
 
SelectedItemIndex
 0
==
1 3
$num
4 5
)
5 6
{
 
string
 
	newOption
 (
=
) *
await
+ 0
Global
1 7
.
7 8
Page
8 <
.
< = 
DisplayActionSheet
= O
(
O P
Localization
P \
.
\ ]
AutoDownload
] i
,
i j
Localization
k w
.
w x
Cancel
x ~
,
~ 
null 
, 
Localization 
. 
Yes 
, 
Localization ¤
.¤ ¥
No¥ §
)§ ¨
;¨ ©
if
 
(
 
	newOption
 %
==
& (
Localization
) 5
.
5 6
Yes
6 9
)
9 :
{
 

GlobalData
 &
.
& '
Current
' .
.
. /
AutoDownload
/ ;
=
< =
true
> B
;
B C
Items
 !
[
! "
$num
" #
]
# $
.
$ %
Description
% 0
=
1 2
Localization
3 ?
.
? @
Yes
@ C
;
C D
}
 
else
 
if
 
(
  !
	newOption
! *
==
+ -
Localization
. :
.
: ;
No
; =
)
= >
{
 

GlobalData
 &
.
& '
Current
' .
.
. /
AutoDownload
/ ;
=
< =
false
> C
;
C D
Items
 !
[
! "
$num
" #
]
# $
.
$ %
Description
% 0
=
1 2
Localization
3 ?
.
? @
No
@ B
;
B C
}
   

GlobalData
¡¡ "
.
¡¡" #
Current
¡¡# *
.
¡¡* +

SaveConfig
¡¡+ 5
(
¡¡5 6
)
¡¡6 7
;
¡¡7 8
Global
¢¢ 
.
¢¢ 
Application
¢¢ *
.
¢¢* +
ShowSnackbar
¢¢+ 7
(
¢¢7 8
Localization
¢¢8 D
.
¢¢D E
SettingsChanges
¢¢E T
)
¢¢T U
;
¢¢U V
}
££ 
else
¤¤ 
if
¤¤ 
(
¤¤ 
e
¤¤ 
.
¤¤ 
SelectedItemIndex
¤¤ 0
==
¤¤1 3
$num
¤¤4 5
)
¤¤5 6
{
¥¥ 
string
¦¦ 
	newOption
¦¦ (
=
¦¦) *
await
¦¦+ 0
Global
¦¦1 7
.
¦¦7 8
Page
¦¦8 <
.
¦¦< = 
DisplayActionSheet
¦¦= O
(
¦¦O P
Localization
¦¦P \
.
¦¦\ ]
	Settings3
¦¦] f
,
¦¦f g
Localization
¦¦h t
.
¦¦t u
Cancel
¦¦u {
,
¦¦{ |
null¦¦} 
,¦¦ 
Localization¦¦ 
.¦¦ 
Yes¦¦ 
,¦¦ 
Localization¦¦ ¡
.¦¦¡ ¢
No¦¦¢ ¤
)¦¦¤ ¥
;¦¦¥ ¦
if
¨¨ 
(
¨¨ 
	newOption
¨¨ %
==
¨¨& (
Localization
¨¨) 5
.
¨¨5 6
Yes
¨¨6 9
)
¨¨9 :
{
©© 

GlobalData
ªª &
.
ªª& '
Current
ªª' .
.
ªª. /
IgnoreAutoFocus
ªª/ >
=
ªª? @
true
ªªA E
;
ªªE F
Items
«« !
[
««! "
$num
««" #
]
««# $
.
««$ %
Description
««% 0
=
««1 2
Localization
««3 ?
.
««? @
Yes
««@ C
;
««C D
}
¬¬ 
else
­­ 
if
­­ 
(
­­  !
	newOption
­­! *
==
­­+ -
Localization
­­. :
.
­­: ;
No
­­; =
)
­­= >
{
®® 

GlobalData
¯¯ &
.
¯¯& '
Current
¯¯' .
.
¯¯. /
IgnoreAutoFocus
¯¯/ >
=
¯¯? @
false
¯¯A F
;
¯¯F G
Items
°° !
[
°°! "
$num
°°" #
]
°°# $
.
°°$ %
Description
°°% 0
=
°°1 2
Localization
°°3 ?
.
°°? @
No
°°@ B
;
°°B C
}
±± 

GlobalData
²² "
.
²²" #
Current
²²# *
.
²²* +

SaveConfig
²²+ 5
(
²²5 6
)
²²6 7
;
²²7 8
Global
³³ 
.
³³ 
Application
³³ *
.
³³* +
ShowSnackbar
³³+ 7
(
³³7 8
Localization
³³8 D
.
³³D E
Ready
³³E J
)
³³J K
;
³³K L
}
´´ 
}
µµ 
(
¶¶ 
sender
¶¶ 
as
¶¶ 
ListView
¶¶ #
)
¶¶# $
.
¶¶$ %
SelectedItem
¶¶% 1
=
¶¶2 3
null
¶¶4 8
;
¶¶8 9
}
·· 
}
¸¸ 	
}
»» 
}¼¼ ¸U
ED:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\TrackViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
{ 
public 

class 
TrackViewModel 
:  !
PropertyChangedBase" 5
{ 
private 
bool 
isRefreshing !
;! "
public  
ObservableCollection #
<# $

TrackModel$ .
>. /
Items0 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
public  
ObservableCollection #
<# $
NListViewItem$ 1
>1 2
	ListItems3 <
{= >
get? B
;B C
setD G
;G H
}I J
public 
bool 
IsRefreshing  
{ 	
get 
=> 
isRefreshing 
;  
set 
{ 
isRefreshing 
= 
value $
;$ %
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
public   
Func   
<   
NListViewItem   !
,  ! "
View  # '
>  ' (
ItemTemplate  ) 5
{!! 	
get"" 
=>"" 
item"" 
=>"" 
new"" 
Views"" $
.""$ %
TV""% '
.""' (
	ViewCells""( 1
.""1 2
TrackViewCell""2 ?
(""? @
item""@ D
)""D E
;""E F
}## 	
private&& 
ICommand&& 
refresh&&  
;&&  !
public'' 
ICommand'' 
Refresh'' 
{(( 	
get)) 
{** 
if++ 
(++ 
refresh++ 
==++ 
null++ #
)++# $
refresh,, 
=,, 
new,, !
ActionCommand,," /
(,,/ 0
	parameter,,0 9
=>,,: <
{-- 
IsRefreshing.. $
=..% &
true..' +
;..+ ,
List// 
<// 

TrackModel// '
>//' (

beforeSort//) 3
=//4 5
new//6 9
List//: >
<//> ?

TrackModel//? I
>//I J
(//J K
)//K L
;//L M
foreach00 
(00  !
var00! $
track00% *
in00+ -

GlobalData00. 8
.008 9
Current009 @
.00@ A
Audios00A G
.00G H
Values00H N
)00N O
{11 

beforeSort22 &
.22& '
Add22' *
(22* +
new22+ .

TrackModel22/ 9
(229 :
track22: ?
)22? @
.22@ A
CheckChanges22A M
(22M N
)22N O
)22O P
;22P Q
}33 
Items44 
=44 
new44  # 
ObservableCollection44$ 8
<448 9

TrackModel449 C
>44C D
(44D E

beforeSort44E O
.44O P
OrderBy44P W
(44W X
item44X \
=>44] _
item44` d
.44d e
TrackString44e p
)44p q
)44q r
;44r s
IsRefreshing55 $
=55% &
false55' ,
;55, -
}66 
)66 
;66 
return77 
refresh77 
;77 
}88 
}99 	
public<< 
TrackViewModel<< 
(<< 
)<< 
{== 	
List>> 
<>> 

TrackModel>> 
>>> 

beforeSort>> '
=>>( )
new>>* -
List>>. 2
<>>2 3

TrackModel>>3 =
>>>= >
(>>> ?
)>>? @
;>>@ A
foreach?? 
(?? 
var?? 
track?? 
in?? !

GlobalData??" ,
.??, -
Current??- 4
.??4 5
Audios??5 ;
.??; <
Values??< B
.??B C
ToList??C I
(??I J
)??J K
)??K L
{@@ 

beforeSortAA 
.AA 
AddAA 
(AA 
newAA "

TrackModelAA# -
(AA- .
trackAA. 3
)AA3 4
.AA4 5
CheckChangesAA5 A
(AAA B
)AAB C
)AAC D
;AAD E
}BB 
ItemsCC 
=CC 
newCC  
ObservableCollectionCC ,
<CC, -

TrackModelCC- 7
>CC7 8
(CC8 9

beforeSortCC9 C
.CCC D
OrderByCCD K
(CCK L
itemCCL P
=>CCQ S
itemCCT X
.CCX Y
TrackStringCCY d
)CCd e
)CCe f
;CCf g
	ListItemsDD 
=DD 
newDD  
ObservableCollectionDD 0
<DD0 1
NListViewItemDD1 >
>DD> ?
(DD? @
)DD@ A
;DDA B
foreachFF 
(FF 
varFF 
itemFF 
inFF 
ItemsFF  %
)FF% &
{GG 
	ListItemsHH 
.HH 
AddHH 
(HH 
itemHH "
)HH" #
;HH# $
}II 
}JJ 	
publicNN 
voidNN 
TickNN 
(NN 
)NN 
{OO 	
ifPP 
(PP 
ItemsPP 
.PP 
CountPP 
!=PP 

GlobalDataPP )
.PP) *
CurrentPP* 1
.PP1 2
AudiosPP2 8
.PP8 9
CountPP9 >
)PP> ?
{QQ 
ItemsRR 
.RR 
ClearRR 
(RR 
)RR 
;RR 
	ListItemsSS 
.SS 
ClearSS 
(SS  
)SS  !
;SS! "
ListTT 
<TT 

TrackModelTT 
>TT  

beforeSortTT! +
=TT, -
newTT. 1
ListTT2 6
<TT6 7

TrackModelTT7 A
>TTA B
(TTB C
)TTC D
;TTD E
foreachUU 
(UU 
varUU 
trackUU "
inUU# %

GlobalDataUU& 0
.UU0 1
CurrentUU1 8
.UU8 9
AudiosUU9 ?
.UU? @
ValuesUU@ F
.UUF G
ToListUUG M
(UUM N
)UUN O
)UUO P
{VV 

beforeSortWW 
.WW 
AddWW "
(WW" #
newWW# &

TrackModelWW' 1
(WW1 2
trackWW2 7
)WW7 8
.WW8 9
CheckChangesWW9 E
(WWE F
)WWF G
)WWG H
;WWH I
}XX 
foreachYY 
(YY 
varYY 
itemYY !
inYY" $

beforeSortYY% /
.YY/ 0
OrderByYY0 7
(YY7 8
itemYY8 <
=>YY= ?
itemYY@ D
.YYD E
TrackStringYYE P
)YYP Q
)YYQ R
{ZZ 
Items[[ 
.[[ 
Add[[ 
([[ 
item[[ "
)[[" #
;[[# $
	ListItems\\ 
.\\ 
Add\\ !
(\\! "
Items\\" '
[\\' (
^\\( )
$num\\) *
]\\* +
)\\+ ,
;\\, -
}]] 
}^^ 
foreach__ 
(__ 
var__ 
model__ 
in__ !
Items__" '
.__' (
ToList__( .
(__. /
)__/ 0
)__0 1
{`` 
ifaa 
(aa 

GlobalDataaa 
.aa 
Currentaa &
.aa& '
Audiosaa' -
.aa- .
ContainsKeyaa. 9
(aa9 :
modelaa: ?
.aa? @
FilePathaa@ H
)aaH I
)aaI J
{bb 
varcc 
sourcecc 
=cc  

GlobalDatacc! +
.cc+ ,
Currentcc, 3
.cc3 4
Audioscc4 :
[cc: ;
modelcc; @
.cc@ A
FilePathccA I
]ccI J
;ccJ K
intdd 
indexdd 
=dd 
Itemsdd  %
.dd% &
IndexOfdd& -
(dd- .
modeldd. 3
)dd3 4
;dd4 5
ifee 
(ee 
modelee 
.ee 
Artistee $
!=ee% '
sourceee( .
.ee. /
Artistee/ 5
||ee6 8
modelee9 >
.ee> ?
Titleee? D
!=eeE G
sourceeeH N
.eeN O
TitleeeO T
)eeT U
{ff 
Itemsgg 
[gg 
indexgg #
]gg# $
.gg$ %
Titlegg% *
=gg+ ,
sourcegg- 3
.gg3 4
Titlegg4 9
;gg9 :
Itemshh 
[hh 
indexhh #
]hh# $
.hh$ %
Artisthh% +
=hh, -
sourcehh. 4
.hh4 5
Artisthh5 ;
;hh; <
}ii 
modeljj 
.jj 
CheckChangesjj &
(jj& '
)jj' (
;jj( )
	ListItemskk 
[kk 
indexkk #
]kk# $
=kk% &
modelkk' ,
;kk, -
}ll 
elsemm 
{nn 
Itemsoo 
.oo 
Removeoo  
(oo  !
modeloo! &
)oo& '
;oo' (
	ListItemspp 
.pp 
Removepp $
(pp$ %
modelpp% *
)pp* +
;pp+ ,
}qq 
}rr 
}tt 	
publicvv 
voidvv 
Track_Selectedvv "
(vv" #
objectvv# )
sendervv* 0
,vv0 1(
SelectedItemChangedEventArgsvv2 N
evvO P
)vvP Q
{ww 	
intxx 
indexxx 
=xx 
exx 
.xx 
SelectedItemIndexxx +
;xx+ ,
ifzz 
(zz 
indexzz 
>=zz 
$numzz 
&&zz 
indexzz #
<zz$ %
Itemszz& +
.zz+ ,
Countzz, 1
)zz1 2
{{{ 

GlobalData|| 
.|| 
Current|| "
.||" #
MediaPlayer||# .
.||. /
LoadPlaylist||/ ;
(||; <
Items||< A
.||A B
Select||B H
(||H I
item||I M
=>||N P
item||Q U
.||U V
FilePath||V ^
)||^ _
.||_ `
ToList||` f
(||f g
)||g h
,||h i
index||j o
,||o p
true||q u
,||u v
true||w {
)||{ |
;||| }
(}} 
sender}} 
as}} 
Xamarin}} "
.}}" #
Forms}}# (
.}}( )
ListView}}) 1
)}}1 2
.}}2 3
SelectedItem}}3 ?
=}}@ A
null}}B F
;}}F G
}~~ 
} 	
}
 
} ]
UD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\TV\Custom\PlayerPanelViewModel.cs
	namespace		 	
Newtone		
 
.		 
Mobile		 
.		 
UI		 
.		 

ViewModels		 &
.		& '
TV		' )
.		) *
Custom		* 0
{

 
public 

class  
PlayerPanelViewModel %
:& '
PropertyChangedBase( ;
{ 
private 
bool !
backgroundGridVisible *
;* +
private 
string 
title 
; 
private 
string 
artist 
; 
private 
ImageSource 
	trackBlur %
;% &
private 
ImageSource 

trackImage &
;& '
private 
ImageSource 

playButton &
;& '
private 
bool 
isPlayImage  
=! "
true# '
;' (
private 
string 
playedTrack "
=# $
$str% '
;' (
private 
bool 
isPanelVisible #
;# $
private 
INFocusElement 
nextFocusUp *
;* +
private 
INFocusElement 
nextFocusUp1 +
;+ ,
public 
bool !
BackgroundGridVisible )
{ 	
get 
=> !
backgroundGridVisible (
;( )
set 
{   !
backgroundGridVisible!! %
=!!& '
value!!( -
;!!- .
OnPropertyChanged"" !
(""! "
)""" #
;""# $
}## 
}$$ 	
public&& 
string&& 
Title&& 
{'' 	
get(( 
=>(( 
title(( 
;(( 
set)) 
{** 
title++ 
=++ 
value++ 
;++ 
OnPropertyChanged,, !
(,,! "
),," #
;,,# $
}-- 
}.. 	
public00 
string00 
Artist00 
{11 	
get22 
=>22 
artist22 
;22 
set33 
{44 
artist55 
=55 
value55 
;55 
OnPropertyChanged66 !
(66! "
)66" #
;66# $
}77 
}88 	
public:: 
ImageSource:: 

TrackImage:: %
{;; 	
get<< 
=><< 

trackImage<< 
;<< 
set== 
{>> 

trackImage?? 
=?? 
value?? "
;??" #
OnPropertyChanged@@ !
(@@! "
)@@" #
;@@# $
}AA 
}BB 	
publicDD 
ImageSourceDD 
	TrackBlurDD $
{EE 	
getFF 
=>FF 
	trackBlurFF 
;FF 
setGG 
{HH 
	trackBlurII 
=II 
valueII !
;II! "
OnPropertyChangedJJ !
(JJ! "
)JJ" #
;JJ# $
}KK 
}LL 	
publicNN 
ImageSourceNN 

PlayButtonNN %
{OO 	
getPP 
=>PP 

playButtonPP 
;PP 
setQQ 
{RR 

playButtonSS 
=SS 
valueSS "
;SS" #
OnPropertyChangedTT !
(TT! "
)TT" #
;TT# $
}UU 
}VV 	
publicXX 
boolXX 
IsPanelVisibleXX "
{YY 	
getZZ 
=>ZZ 
isPanelVisibleZZ !
;ZZ! "
set[[ 
{\\ 
isPanelVisible]] 
=]]  
value]]! &
;]]& '
OnPropertyChanged^^ !
(^^! "
)^^" #
;^^# $
}__ 
}`` 	
publicbb 
INFocusElementbb 
NextFocusUpbb )
{cc 	
getdd 
=>dd 
nextFocusUpdd 
;dd 
setee 
{ff 
nextFocusUpgg 
=gg 
valuegg #
;gg# $
OnPropertyChangedhh !
(hh! "
)hh" #
;hh# $
}ii 
}jj 	
publicll 
INFocusElementll 
NextFocusUp1ll *
{mm 	
getnn 
=>nn 
nextFocusUp1nn 
;nn  
setoo 
{pp 
nextFocusUp1qq 
=qq 
valueqq $
;qq$ %
OnPropertyChangedrr !
(rr! "
)rr" #
;rr# $
}ss 
}tt 	
privatexx 
ICommandxx 
playPauseCommandxx )
;xx) *
publicyy 
ICommandyy 
	PlayPauseyy !
{zz 	
get{{ 
{|| 
if}} 
(}} 
playPauseCommand}} $
==}}% '
null}}( ,
)}}, -
playPauseCommand~~ $
=~~% &
new~~' *
ActionCommand~~+ 8
(~~8 9
	parameter~~9 B
=>~~C E
{ 
if
 
(
 

GlobalData
 &
.
& '
Current
' .
.
. /
MediaSource
/ :
!=
; =
null
> B
)
B C
{
 
if
 
(
  

GlobalData
  *
.
* +
Current
+ 2
.
2 3
MediaPlayer
3 >
.
> ?
	IsPlaying
? H
)
H I

GlobalData
  *
.
* +
Current
+ 2
.
2 3
MediaPlayer
3 >
.
> ?
Pause
? D
(
D E
)
E F
;
F G
else
  

GlobalData
  *
.
* +
Current
+ 2
.
2 3
MediaPlayer
3 >
.
> ?
Play
? C
(
C D
)
D E
;
E F
}
 
}
 
)
 
;
 
return
 
playPauseCommand
 '
;
' (
}
 
}
 	
private
 
ICommand
 
gotoPlayerCommand
 *
;
* +
public
 
ICommand
 

GotoPlayer
 "
{
 	
get
 
{
 
if
 
(
 
gotoPlayerCommand
 %
==
& (
null
) -
)
- .
gotoPlayerCommand
 %
=
& '
new
( +
ActionCommand
, 9
(
9 :
async
: ?
(
@ A
	parameter
A J
)
J K
=>
L N
{
 
if
 
(
 

GlobalData
 &
.
& '
Current
' .
.
. /
MediaSource
/ :
!=
; =
null
> B
)
B C
{
 
await
 !
Global
" (
.
( ) 
NavigationInstance
) ;
.
; <
PushModalAsync
< J
(
J K
new
K N
Views
O T
.
T U
TV
U W
.
W X
FullScreenPage
X f
(
f g
)
g h
)
h i
;
i j
}
 
}
 
)
 
;
 
return
 
gotoPlayerCommand
 (
;
( )
}
 
}
 	
public
 "
PlayerPanelViewModel
 #
(
# $
)
$ %
{
   	

PlayButton
¡¡ 
=
¡¡ 
ImageSource
¡¡ $
.
¡¡$ %
FromFile
¡¡% -
(
¡¡- .
$str
¡¡. <
)
¡¡< =
;
¡¡= >

TrackImage
¢¢ 
=
¢¢ 
ImageSource
¢¢ $
.
¢¢$ %
FromFile
¢¢% -
(
¢¢- .
$str
¢¢. >
)
¢¢> ?
;
¢¢? @
}
££ 	
public
§§ 
void
§§ 
Tick
§§ 
(
§§ 
)
§§ 
{
¨¨ 	
if
©© 
(
©© 

GlobalData
©© 
.
©© 
Current
©© "
.
©©" #
MediaSource
©©# .
!=
©©/ 1
null
©©2 6
)
©©6 7
{
ªª 
Artist
«« 
=
«« 

GlobalData
«« #
.
««# $
Current
««$ +
.
««+ ,
MediaSource
««, 7
.
««7 8
Artist
««8 >
;
««> ?
Title
¬¬ 
=
¬¬ 

GlobalData
¬¬ "
.
¬¬" #
Current
¬¬# *
.
¬¬* +
MediaSource
¬¬+ 6
.
¬¬6 7
Title
¬¬7 <
;
¬¬< =
}
­­ 
if
®® 
(
®® 
playedTrack
®® 
!=
®® 

GlobalData
®® )
.
®®) *
Current
®®* 1
.
®®1 2
MediaSourcePath
®®2 A
)
®®A B
{
¯¯ 
if
±± 
(
±± 

GlobalData
±± 
.
±± 
Current
±± &
.
±±& '
MediaSource
±±' 2
.
±±2 3
Image
±±3 8
!=
±±9 ;
null
±±< @
&&
±±A C

GlobalData
±±D N
.
±±N O
Current
±±O V
.
±±V W
MediaSource
±±W b
.
±±b c
Image
±±c h
.
±±h i
Length
±±i o
>
±±p q
$num
±±r s
)
±±s t
{
²² 

TrackImage
³³ 
=
³³  
ImageProcessing
³³! 0
.
³³0 1
	FromArray
³³1 :
(
³³: ;

GlobalData
³³; E
.
³³E F
Current
³³F M
.
³³M N
MediaSource
³³N Y
.
³³Y Z
Image
³³Z _
)
³³_ `
;
³³` a
	TrackBlur
´´ 
=
´´ 
ImageProcessing
´´  /
.
´´/ 0
Blur
´´0 4
(
´´4 5

GlobalData
´´5 ?
.
´´? @
Current
´´@ G
.
´´G H
MediaSource
´´H S
.
´´S T
Image
´´T Y
)
´´Y Z
;
´´Z [#
BackgroundGridVisible
µµ )
=
µµ* +
true
µµ, 0
;
µµ0 1
}
¶¶ 
else
·· 
{
¸¸ 

TrackImage
¹¹ 
=
¹¹  
ImageSource
¹¹! ,
.
¹¹, -
FromFile
¹¹- 5
(
¹¹5 6
$str
¹¹6 F
)
¹¹F G
;
¹¹G H#
BackgroundGridVisible
ºº )
=
ºº* +
false
ºº, 1
;
ºº1 2
}
»» 
playedTrack
½½ 
=
½½ 

GlobalData
½½ (
.
½½( )
Current
½½) 0
.
½½0 1
MediaSourcePath
½½1 @
;
½½@ A
}
¾¾ 
if
¿¿ 
(
¿¿ 
isPlayImage
¿¿ 
&&
¿¿ 

GlobalData
¿¿ )
.
¿¿) *
Current
¿¿* 1
.
¿¿1 2
MediaPlayer
¿¿2 =
.
¿¿= >
	IsPlaying
¿¿> G
)
¿¿G H
{
ÀÀ 

PlayButton
ÁÁ 
=
ÁÁ 
ImageSource
ÁÁ (
.
ÁÁ( )
FromFile
ÁÁ) 1
(
ÁÁ1 2
$str
ÁÁ2 A
)
ÁÁA B
;
ÁÁB C
isPlayImage
ÂÂ 
=
ÂÂ 
false
ÂÂ #
;
ÂÂ# $
}
ÃÃ 
if
ÅÅ 
(
ÅÅ 
!
ÅÅ 
isPlayImage
ÅÅ 
&&
ÅÅ 
!
ÅÅ  !

GlobalData
ÅÅ! +
.
ÅÅ+ ,
Current
ÅÅ, 3
.
ÅÅ3 4
MediaPlayer
ÅÅ4 ?
.
ÅÅ? @
	IsPlaying
ÅÅ@ I
)
ÅÅI J
{
ÆÆ 

PlayButton
ÇÇ 
=
ÇÇ 
ImageSource
ÇÇ (
.
ÇÇ( )
FromFile
ÇÇ) 1
(
ÇÇ1 2
$str
ÇÇ2 @
)
ÇÇ@ A
;
ÇÇA B
isPlayImage
ÈÈ 
=
ÈÈ 
true
ÈÈ "
;
ÈÈ" #
}
ÉÉ 
}
ÊÊ 	
}
ÌÌ 
}ÍÍ L
HD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\TV\ModalViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
.& '
TV' )
{ 
public 

class 
ModalViewModel 
:  !
PropertyChangedBase" 5
{ 
private 
string 

modalTitle !
;! "
private 
string 
badge 
; 
private 
bool 
badgeVisible !
;! "
private 
bool 
topPanelVisible $
;$ %
private 
INFocusElement 
focusElementUp -
;- .
private 
INFocusElement 
focusElementDown /
;/ 0
private 
INFocusElement 
focusElementFromUp 1
;1 2
private 
INFocusElement  
focusElementFromDown 3
;3 4
public 
string 

ModalTitle  
{ 	
get 
=> 

modalTitle 
; 
set 
{   

modalTitle!! 
=!! 
value!! "
;!!" #
OnPropertyChanged"" !
(""! "
)""" #
;""# $
}## 
}$$ 	
public&& 
string&& 
Badge&& 
{'' 	
get(( 
=>(( 
badge(( 
;(( 
set)) 
{** 
badge++ 
=++ 
value++ 
;++ 
OnPropertyChanged,, !
(,,! "
),," #
;,,# $
}-- 
}.. 	
public// 
bool// 
BadgeVisible//  
{00 	
get11 
=>11 
badgeVisible11 
;11  
set22 
{33 
badgeVisible44 
=44 
value44 $
;44$ %
OnPropertyChanged55 !
(55! "
)55" #
;55# $
}66 
}77 	
public99 
bool99 
TopPanelVisible99 #
{:: 	
get;; 
=>;; 
topPanelVisible;; "
;;;" #
set<< 
{== 
topPanelVisible>> 
=>>  !
value>>" '
;>>' (
OnPropertyChanged?? !
(??! "
)??" #
;??# $
}@@ 
}AA 	
publicCC 
boolCC 
BackButtonVisibleCC %
=>CC& (
DeviceCC) /
.CC/ 0
RuntimePlatformCC0 ?
==CC@ B
DeviceCCC I
.CCI J
iOSCCJ M
;CCM N
publicEE 
GridEE 
	ContainerEE 
{EE 
getEE  #
;EE# $
privateEE% ,
setEE- 0
;EE0 1
}EE2 3
publicFF 
boolFF !
DownloadButtonVisibleFF )
=>FF* ,
falseFF- 2
;FF2 3
publicHH 
INFocusElementHH 
FocusElementUpHH ,
{II 	
getJJ 
=>JJ 
focusElementUpJJ !
;JJ! "
setKK 
{LL 
focusElementUpMM 
=MM  
valueMM! &
;MM& '
OnPropertyChangedNN !
(NN! "
)NN" #
;NN# $
}OO 
}PP 	
publicRR 
INFocusElementRR 
FocusElementDownRR .
{SS 	
getTT 
=>TT 
focusElementDownTT #
;TT# $
setUU 
{VV 
focusElementDownWW  
=WW! "
valueWW# (
;WW( )
OnPropertyChangedXX !
(XX! "
)XX" #
;XX# $
}YY 
}ZZ 	
public\\ 
INFocusElement\\ 
FocusElementFromUp\\ 0
{]] 	
get^^ 
=>^^ 
focusElementFromUp^^ %
;^^% &
set__ 
{`` 
focusElementFromUpaa "
=aa# $
valueaa% *
;aa* +
OnPropertyChangedbb !
(bb! "
)bb" #
;bb# $
}cc 
}dd 	
publicff 
INFocusElementff  
FocusElementFromDownff 2
{gg 	
gethh 
=>hh  
focusElementFromDownhh '
;hh' (
setii 
{jj  
focusElementFromDownkk $
=kk% &
valuekk' ,
;kk, -
OnPropertyChangedll !
(ll! "
)ll" #
;ll# $
}mm 
}nn 	
privaterr 
ICommandrr 
toFullScreenrr %
;rr% &
publicss 
ICommandss 
ToFullScreenss $
{tt 	
getuu 
{vv 
ifww 
(ww 
toFullScreenww  
==ww! #
nullww$ (
)ww( )
toFullScreenxx  
=xx! "
newxx# &
ActionCommandxx' 4
(xx4 5
asyncxx5 :
(xx; <
	parameterxx< E
)xxE F
=>xxG I
{yy 
ifzz 
(zz 

GlobalDatazz &
.zz& '
Currentzz' .
.zz. /
MediaSourcezz/ :
!=zz; =
nullzz> B
)zzB C
{{{ 
await|| !
Global||" (
.||( )
NavigationInstance||) ;
.||; <
PushModalAsync||< J
(||J K
new||K N
FullScreenPage||O ]
(||] ^
)||^ _
)||_ `
;||` a
}}} 
}~~ 
)~~ 
;~~ 
return
 
toFullScreen
 #
;
# $
}
 
}
 	
private
 
ICommand
 
toDownloadPage
 '
;
' (
public
 
ICommand
 
ToDownloadPage
 &
{
 	
get
 
{
 
if
 
(
 
toDownloadPage
 "
==
# %
null
& *
)
* +
toDownloadPage
 "
=
# $
new
% (
ActionCommand
) 6
(
6 7
async
7 <
(
= >
	parameter
> G
)
G H
=>
I K
{
 
await
 
Global
 $
.
$ % 
NavigationInstance
% 7
.
7 8
PushModalAsync
8 F
(
F G
new
G J
	ModalPage
K T
(
T U
new
U X
DownloadPage
Y e
(
e f
)
f g
,
g h
Localization
i u
.
u v
TitleDownloadsv 
) 
) 
; 
}
 
)
 
;
 
return
 
toDownloadPage
 %
;
% &
}
 
}
 	
private
 
ICommand
 
backCommand
 $
;
$ %
public
 
ICommand
 
BackCommand
 #
{
 	
get
 
{
 
if
 
(
 
backCommand
 
==
  "
null
# '
)
' (
backCommand
 
=
  !
new
" %
ActionCommand
& 3
(
3 4
async
4 9
(
: ;
	parameter
; D
)
D E
=>
F H
{
 
await
 
Global
 $
.
$ % 
NavigationInstance
% 7
.
7 8
PopModalAsync
8 E
(
E F
)
F G
;
G H
}
 
)
 
;
 
return
 
backCommand
 "
;
" #
}
 
}
   	
public
££ 
ModalViewModel
££ 
(
££ 
Grid
££ "
	container
££# ,
,
££, -
string
££. 4
title
££5 :
,
££: ;
bool
££< @
topPanelVisible
££A P
=
££Q R
true
££S W
)
££W X
{
¤¤ 	

ModalTitle
¥¥ 
=
¥¥ 
title
¥¥ 
;
¥¥ 
TopPanelVisible
¦¦ 
=
¦¦ 
topPanelVisible
¦¦ -
;
¦¦- .
	Container
§§ 
=
§§ 
	container
§§ !
;
§§! "
}
¨¨ 	
public
¬¬ 
void
¬¬ 
	Appearing
¬¬ 
(
¬¬ 
)
¬¬ 
{
­­ 	
}
¯¯ 	
public
±± 
void
±± 
Disappearing
±±  
(
±±  !
)
±±! "
{
²² 	
}
´´ 	
public
¶¶ 
void
¶¶ 
Tick
¶¶ 
(
¶¶ 
)
¶¶ 
{
·· 	
Badge
¸¸ 
=
¸¸  
DownloadProcessing
¸¸ &
.
¸¸& '

BadgeCount
¸¸' 1
.
¸¸1 2
ToString
¸¸2 :
(
¸¸: ;
)
¸¸; <
;
¸¸< =
BadgeVisible
¹¹ 
=
¹¹  
DownloadProcessing
¹¹ -
.
¹¹- .

BadgeCount
¹¹. 8
>
¹¹9 :
$num
¹¹; <
;
¹¹< =
if
»» 
(
»» 
	Container
»» 
.
»» 
Children
»» "
.
»»" #
Count
»»# (
>
»») *
$num
»»+ ,
&&
»»- /
	Container
»»0 9
.
»»9 :
Children
»»: B
[
»»B C
$num
»»C D
]
»»D E
is
»»F H
ITimerContent
»»I V
content
»»W ^
)
»»^ _
content
¼¼ 
.
¼¼ 
Tick
¼¼ 
(
¼¼ 
)
¼¼ 
;
¼¼ 
}
½½ 	
}
¿¿ 
}ÀÀ ¡¸
ID:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\TV\NormalViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
.& '
TV' )
{ 
public 

class 
NormalViewModel  
:! "
PropertyChangedBase# 6
{ 
private 
readonly 

TracksPage #

tracksPage$ .
=/ 0
new1 4

TracksPage5 ?
(? @
)@ A
;A B
private 
readonly 

ArtistPage #

artistPage$ .
=/ 0
new1 4

ArtistPage5 ?
(? @
)@ A
;A B
private 
PlaylistPage 
playlistPage )
;) *
private 
string 
	pageTitle  
;  !
private 
string 
searchPlaceholder (
;( )
private 
bool 
badgeSyncVisible %
;% &
private   
string   
	badgeSync    
;    !
private!! 
bool!! 
badgeVisible!! !
;!!! "
private"" 
string"" 
badge"" 
;"" 
private## 
int## 
currentButtonIndex## &
=##' (
-##) *
$num##* +
;##+ ,
private$$ 
bool$$ 
titleVisible$$ !
=$$" #
true$$$ (
;$$( )
private%% 
bool%% 
entryVisible%% !
=%%" #
false%%$ )
;%%) *
private&& 
string&& 
	entryText&&  
;&&  !
private(( 
bool(( 
tracksButtonToggled(( (
;((( )
private)) 
bool))  
artistsButtonToggled)) )
;))) *
private** 
bool** "
playlistsButtonToggled** +
;**+ ,
private++ 
bool++ !
settingsButtonToggled++ *
;++* +
private,, 
PlayerPanel,, 
playerPanel,, '
;,,' (
private-- 
IDisposable-- 
loopSubscription-- ,
;--, -
private// 
bool// 
searchCancelVisible// (
;//( )
private00  
ObservableCollection00 $
<00$ %
HistoryModel00% 1
>001 2
suggestionItems003 B
;00B C
private11 
bool11 $
searchSuggestionsVisible11 -
=11. /
false110 5
;115 6
private22 
bool22 
spinnerVisible22 #
;22# $
private44 
INFocusElement44 
focusElementUp44 -
;44- .
private55 
INFocusElement55 
focusElementDown55 /
;55/ 0
private66 
INFocusElement66 
focusElementFromUp66 1
;661 2
private77 
INFocusElement77  
focusElementFromDown77 3
;773 4
public;; 
string;; 
	PageTitle;; 
{<< 	
get== 
=>== 
	pageTitle== 
;== 
set>> 
{?? 
	pageTitle@@ 
=@@ 
value@@ !
;@@! "
OnPropertyChangedAA !
(AA! "
)AA" #
;AA# $
}BB 
}CC 	
publicEE 
boolEE 
BadgeSyncVisibleEE $
{FF 	
getGG 
=>GG 
badgeSyncVisibleGG #
;GG# $
setHH 
{II 
badgeSyncVisibleJJ  
=JJ! "
valueJJ# (
;JJ( )
OnPropertyChangedKK !
(KK! "
)KK" #
;KK# $
}LL 
}MM 	
publicOO 
stringOO 
	BadgeSyncOO 
{PP 	
getQQ 
=>QQ 
	badgeSyncQQ 
;QQ 
setRR 
{SS 
	badgeSyncTT 
=TT 
valueTT !
;TT! "
OnPropertyChangedUU !
(UU! "
)UU" #
;UU# $
}VV 
}WW 	
publicYY 
boolYY 
BadgeVisibleYY  
{ZZ 	
get[[ 
=>[[ 
badgeVisible[[ 
;[[  
set\\ 
{]] 
badgeVisible^^ 
=^^ 
value^^ $
;^^$ %
OnPropertyChanged__ !
(__! "
)__" #
;__# $
}`` 
}aa 	
publiccc 
stringcc 
Badgecc 
{dd 	
getee 
=>ee 
badgeee 
;ee 
setff 
{gg 
badgehh 
=hh 
valuehh 
;hh 
OnPropertyChangedii !
(ii! "
)ii" #
;ii# $
}jj 
}kk 	
publicmm 
Gridmm 
	Containermm 
{mm 
getmm  #
;mm# $
privatemm% ,
setmm- 0
;mm0 1
}mm2 3
publicoo 
booloo 
TracksButtonToggledoo '
{pp 	
getqq 
=>qq 
tracksButtonToggledqq &
;qq& '
setrr 
{ss 
tracksButtonToggledtt #
=tt$ %
valuett& +
;tt+ ,
OnPropertyChangeduu !
(uu! "
)uu" #
;uu# $
}vv 
}ww 	
publicyy 
boolyy  
ArtistsButtonToggledyy (
{zz 	
get{{ 
=>{{  
artistsButtonToggled{{ '
;{{' (
set|| 
{}}  
artistsButtonToggled~~ $
=~~% &
value~~' ,
;~~, -
OnPropertyChanged !
(! "
)" #
;# $
}
 
}
 	
public
 
bool
 $
PlaylistsButtonToggled
 *
{
 	
get
 
=>
 $
playlistsButtonToggled
 )
;
) *
set
 
{
 $
playlistsButtonToggled
 &
=
' (
value
) .
;
. /
OnPropertyChanged
 !
(
! "
)
" #
;
# $
}
 
}
 	
public
 
bool
 #
SettingsButtonToggled
 )
{
 	
get
 
=>
 #
settingsButtonToggled
 (
;
( )
set
 
{
 #
settingsButtonToggled
 %
=
& '
value
( -
;
- .
OnPropertyChanged
 !
(
! "
)
" #
;
# $
}
 
}
 	
public
 
PlayerPanel
 
PlayerPanel
 &
{
 	
get
 
=>
 
playerPanel
 
;
 
set
 
{
 
playerPanel
 
=
 
value
 #
;
# $
OnPropertyChanged
 !
(
! "
)
" #
;
# $
}
 
}
 	
public
¡¡ 
string
¡¡ 
SearchPlaceholder
¡¡ '
{
¢¢ 	
get
££ 
=>
££ 
searchPlaceholder
££ $
;
££$ %
set
¤¤ 
{
¥¥ 
searchPlaceholder
¦¦ !
=
¦¦" #
value
¦¦$ )
;
¦¦) *
OnPropertyChanged
§§ !
(
§§! "
)
§§" #
;
§§# $
}
¨¨ 
}
©© 	
public
ªª 
bool
ªª 
TitleVisible
ªª  
{
«« 	
get
¬¬ 
=>
¬¬ 
titleVisible
¬¬ 
;
¬¬  
set
­­ 
{
®® 
titleVisible
¯¯ 
=
¯¯ 
value
¯¯ $
;
¯¯$ %
OnPropertyChanged
°° !
(
°°! "
)
°°" #
;
°°# $
}
±± 
}
²² 	
public
³³ 
bool
³³ 
EntryVisible
³³  
{
´´ 	
get
µµ 
=>
µµ 
entryVisible
µµ 
;
µµ  
set
¶¶ 
{
·· 
entryVisible
¸¸ 
=
¸¸ 
value
¸¸ $
;
¸¸$ %
OnPropertyChanged
¹¹ !
(
¹¹! "
)
¹¹" #
;
¹¹# $
}
ºº 
}
»» 	
public
¼¼ 
string
¼¼ 
	EntryText
¼¼ 
{
½½ 	
get
¾¾ 
=>
¾¾ 
	entryText
¾¾ 
;
¾¾ 
set
¿¿ 
{
ÀÀ 
	entryText
ÁÁ 
=
ÁÁ 
value
ÁÁ !
;
ÁÁ! "
OnPropertyChanged
ÂÂ !
(
ÂÂ! "
)
ÂÂ" #
;
ÂÂ# $!
SearchCancelVisible
ÄÄ #
=
ÄÄ$ %
	entryText
ÄÄ& /
.
ÄÄ/ 0
Length
ÄÄ0 6
>
ÄÄ7 8
$num
ÄÄ9 :
;
ÄÄ: ;
}
ÅÅ 
}
ÆÆ 	
public
ÈÈ 
bool
ÈÈ !
SearchCancelVisible
ÈÈ '
{
ÉÉ 	
get
ÊÊ 
=>
ÊÊ !
searchCancelVisible
ÊÊ &
;
ÊÊ& '
set
ËË 
{
ÌÌ !
searchCancelVisible
ÍÍ #
=
ÍÍ$ %
value
ÍÍ& +
;
ÍÍ+ ,
OnPropertyChanged
ÎÎ !
(
ÎÎ! "
)
ÎÎ" #
;
ÎÎ# $
}
ÏÏ 
}
ÐÐ 	
public
ÒÒ "
ObservableCollection
ÒÒ #
<
ÒÒ# $
HistoryModel
ÒÒ$ 0
>
ÒÒ0 1
SuggestionItems
ÒÒ2 A
{
ÓÓ 	
get
ÔÔ 
=>
ÔÔ 
suggestionItems
ÔÔ "
;
ÔÔ" #
set
ÕÕ 
{
ÖÖ 
suggestionItems
×× 
=
××  !
value
××" '
;
××' (
OnPropertyChanged
ØØ !
(
ØØ! "
)
ØØ" #
;
ØØ# $
}
ÙÙ 
}
ÚÚ 	
public
ÜÜ 
bool
ÜÜ &
SearchSuggestionsVisible
ÜÜ ,
{
ÝÝ 	
get
ÞÞ 
=>
ÞÞ &
searchSuggestionsVisible
ÞÞ +
;
ÞÞ+ ,
set
ßß 
{
àà &
searchSuggestionsVisible
áá (
=
áá) *
value
áá+ 0
;
áá0 1
OnPropertyChanged
ââ !
(
ââ! "
)
ââ" #
;
ââ# $
}
ãã 
}
ää 	
public
ææ 
bool
ææ 
SpinnerVisible
ææ "
{
çç 	
get
èè 
=>
èè 
spinnerVisible
èè !
;
èè! "
set
éé 
{
êê 
spinnerVisible
ëë 
=
ëë  
value
ëë! &
;
ëë& '
OnPropertyChanged
ìì !
(
ìì! "
)
ìì" #
;
ìì# $
}
íí 
}
îî 	
public
ðð 
INFocusElement
ðð 
FocusElementUp
ðð ,
{
ññ 	
get
òò 
=>
òò 
focusElementUp
òò !
;
òò! "
set
óó 
{
ôô 
focusElementUp
õõ 
=
õõ  
value
õõ! &
;
õõ& '
OnPropertyChanged
öö !
(
öö! "
)
öö" #
;
öö# $
}
÷÷ 
}
øø 	
public
úú 
INFocusElement
úú 
FocusElementDown
úú .
{
ûû 	
get
üü 
=>
üü 
focusElementDown
üü #
;
üü# $
set
ýý 
{
þþ 
focusElementDown
ÿÿ  
=
ÿÿ! "
value
ÿÿ# (
;
ÿÿ( )
OnPropertyChanged
 !
(
! "
)
" #
;
# $
}
 
}
 	
public
 
INFocusElement
  
FocusElementFromUp
 0
{
 	
get
 
=>
  
focusElementFromUp
 %
;
% &
set
 
{
  
focusElementFromUp
 "
=
# $
value
% *
;
* +
OnPropertyChanged
 !
(
! "
)
" #
;
# $
}
 
}
 	
public
 
INFocusElement
 "
FocusElementFromDown
 2
{
 	
get
 
=>
 "
focusElementFromDown
 '
;
' (
set
 
{
 "
focusElementFromDown
 $
=
% &
value
' ,
;
, -
OnPropertyChanged
 !
(
! "
)
" #
;
# $
}
 
}
 	
private
 
ICommand
 
gotoPlayerCommand
 *
;
* +
public
 
ICommand
 

GotoPlayer
 "
{
 	
get
 
{
 
if
 
(
 
gotoPlayerCommand
 %
==
& (
null
) -
)
- .
gotoPlayerCommand
   %
=
  & '
new
  ( +
ActionCommand
  , 9
(
  9 :
async
  : ?
(
  @ A
	parameter
  A J
)
  J K
=>
  L N
{
¡¡ 
if
¢¢ 
(
¢¢ 

GlobalData
¢¢ &
.
¢¢& '
Current
¢¢' .
.
¢¢. /
MediaSource
¢¢/ :
!=
¢¢; =
null
¢¢> B
)
¢¢B C
{
££ 
await
¥¥ !
Global
¥¥" (
.
¥¥( ) 
NavigationInstance
¥¥) ;
.
¥¥; <
PushModalAsync
¥¥< J
(
¥¥J K
new
¥¥K N
FullScreenPage
¥¥O ]
(
¥¥] ^
)
¥¥^ _
)
¥¥_ `
;
¥¥` a
}
¦¦ 
}
§§ 
)
§§ 
;
§§ 
return
¨¨ 
gotoPlayerCommand
¨¨ (
;
¨¨( )
}
©© 
}
ªª 	
private
¬¬ 
ICommand
¬¬ 
gotoTracksCommand
¬¬ *
;
¬¬* +
public
­­ 
ICommand
­­ 

GotoTracks
­­ "
{
®® 	
get
¯¯ 
{
°° 
if
±± 
(
±± 
gotoTracksCommand
±± %
==
±±& (
null
±±) -
)
±±- .
gotoTracksCommand
²² %
=
²²& '
new
²²( +
ActionCommand
²², 9
(
²²9 :
	parameter
²²: C
=>
²²D F
{
³³ 
if
´´ 
(
´´  
currentButtonIndex
´´ .
!=
´´/ 1
$num
´´2 3
||
´´4 6
(
´´7 8
	parameter
´´8 A
as
´´B D
bool
´´E I
?
´´I J
)
´´J K
==
´´L N
true
´´O S
)
´´S T
{
µµ 
SetContainer
¶¶ (
(
¶¶( )

tracksPage
¶¶) 3
,
¶¶3 4
Localization
¶¶5 A
.
¶¶A B
Tracks
¶¶B H
)
¶¶H I
;
¶¶I J
Toggle
·· "
(
··" #
$num
··# $
)
··$ %
;
··% &
}
¸¸ 
}
¹¹ 
)
¹¹ 
;
¹¹ 
return
»» 
gotoTracksCommand
»» (
;
»»( )
}
¼¼ 
}
½½ 	
private
¿¿ 
ICommand
¿¿  
gotoArtistsCommand
¿¿ +
;
¿¿+ ,
public
ÀÀ 
ICommand
ÀÀ 
GotoArtists
ÀÀ #
{
ÁÁ 	
get
ÂÂ 
{
ÃÃ 
if
ÄÄ 
(
ÄÄ  
gotoArtistsCommand
ÄÄ &
==
ÄÄ' )
null
ÄÄ* .
)
ÄÄ. / 
gotoArtistsCommand
ÅÅ &
=
ÅÅ' (
new
ÅÅ) ,
ActionCommand
ÅÅ- :
(
ÅÅ: ;
	parameter
ÅÅ; D
=>
ÅÅE G
{
ÆÆ 
if
ÇÇ 
(
ÇÇ  
currentButtonIndex
ÇÇ .
!=
ÇÇ/ 1
$num
ÇÇ2 3
||
ÇÇ4 6
(
ÇÇ7 8
	parameter
ÇÇ8 A
as
ÇÇB D
bool
ÇÇE I
?
ÇÇI J
)
ÇÇJ K
==
ÇÇL N
true
ÇÇO S
)
ÇÇS T
{
ÈÈ 
SetContainer
ÉÉ (
(
ÉÉ( )

artistPage
ÉÉ) 3
,
ÉÉ3 4
Localization
ÉÉ5 A
.
ÉÉA B
Artists
ÉÉB I
)
ÉÉI J
;
ÉÉJ K
Toggle
ÊÊ "
(
ÊÊ" #
$num
ÊÊ# $
)
ÊÊ$ %
;
ÊÊ% &
}
ËË 
}
ÌÌ 
)
ÌÌ 
;
ÌÌ 
return
ÎÎ  
gotoArtistsCommand
ÎÎ )
;
ÎÎ) *
}
ÏÏ 
}
ÐÐ 	
private
ÒÒ 
ICommand
ÒÒ "
gotoPlaylistsCommand
ÒÒ -
;
ÒÒ- .
public
ÓÓ 
ICommand
ÓÓ 
GotoPlaylists
ÓÓ %
{
ÔÔ 	
get
ÕÕ 
{
ÖÖ 
if
×× 
(
×× "
gotoPlaylistsCommand
×× (
==
××) +
null
××, 0
)
××0 1"
gotoPlaylistsCommand
ØØ (
=
ØØ) *
new
ØØ+ .
ActionCommand
ØØ/ <
(
ØØ< =
	parameter
ØØ= F
=>
ØØG I
{
ÙÙ 
if
ÚÚ 
(
ÚÚ  
currentButtonIndex
ÚÚ .
!=
ÚÚ/ 1
$num
ÚÚ2 3
)
ÚÚ3 4
{
ÛÛ 
if
ÜÜ 
(
ÜÜ  
playlistPage
ÜÜ  ,
==
ÜÜ- /
null
ÜÜ0 4
)
ÜÜ4 5
playlistPage
ÝÝ  ,
=
ÝÝ- .
new
ÝÝ/ 2
PlaylistPage
ÝÝ3 ?
(
ÝÝ? @
)
ÝÝ@ A
;
ÝÝA B
SetContainer
ÞÞ (
(
ÞÞ( )
playlistPage
ÞÞ) 5
,
ÞÞ5 6
Localization
ÞÞ7 C
.
ÞÞC D
	Playlists
ÞÞD M
)
ÞÞM N
;
ÞÞN O
Toggle
ßß "
(
ßß" #
$num
ßß# $
)
ßß$ %
;
ßß% &
}
àà 
}
áá 
)
áá 
;
áá 
return
ãã "
gotoPlaylistsCommand
ãã +
;
ãã+ ,
}
ää 
}
åå 	
private
çç 
ICommand
çç !
gotoSettingsCommand
çç ,
;
çç, -
public
èè 
ICommand
èè 
GotoSettings
èè $
{
éé 	
get
êê 
{
ëë 
if
ìì 
(
ìì !
gotoSettingsCommand
ìì '
==
ìì( *
null
ìì+ /
)
ìì/ 0!
gotoSettingsCommand
íí '
=
íí( )
new
íí* -
ActionCommand
íí. ;
(
íí; <
async
íí< A
(
ííA B
	parameter
ííB K
)
ííK L
=>
ííM O
{
îî 
await
ïï 
Global
ïï $
.
ïï$ % 
NavigationInstance
ïï% 7
.
ïï7 8
PushModalAsync
ïï8 F
(
ïïF G
new
ïïG J
	ModalPage
ïïK T
(
ïïT U
new
ïïU X
SettingsPage
ïïY e
(
ïïe f
)
ïïf g
,
ïïg h
Localization
ïïi u
.
ïïu v
Settings
ïïv ~
)
ïï~ 
)ïï 
;ïï 
}
ðð 
)
ðð 
;
ðð 
return
òò !
gotoSettingsCommand
òò *
;
òò* +
}
óó 
}
ôô 	
private
öö 
ICommand
öö !
gotoDownloadCommand
öö ,
;
öö, -
public
÷÷ 
ICommand
÷÷ 
GotoDownload
÷÷ $
{
øø 	
get
ùù 
{
úú 
if
ûû 
(
ûû !
gotoDownloadCommand
ûû '
==
ûû( *
null
ûû+ /
)
ûû/ 0!
gotoDownloadCommand
üü '
=
üü( )
new
üü* -
ActionCommand
üü. ;
(
üü; <
async
üü< A
(
üüB C
	parameter
üüC L
)
üüL M
=>
üüN P
{
ýý 
await
þþ 
Global
þþ $
.
þþ$ % 
NavigationInstance
þþ% 7
.
þþ7 8
PushModalAsync
þþ8 F
(
þþF G
new
þþG J
	ModalPage
þþK T
(
þþT U
new
þþU X
Views
þþY ^
.
þþ^ _
DownloadPage
þþ_ k
(
þþk l
)
þþl m
,
þþm n
Localization
þþo {
.
þþ{ |
TitleDownloadsþþ| 
)þþ 
)þþ 
;þþ 
}
ÿÿ 
)
ÿÿ 
;
ÿÿ 
return
 !
gotoDownloadCommand
 *
;
* +
}
 
}
 	
private
 
ICommand
 
gotoSearchCommand
 *
;
* +
public
 
ICommand
 

GotoSearch
 "
{
 	
get
 
{
 
if
 
(
 
gotoSearchCommand
 %
==
& (
null
) -
)
- .
gotoSearchCommand
 %
=
& '
new
( +
ActionCommand
, 9
(
9 :
async
: ?
(
? @
	parameter
@ I
)
I J
=>
K M
{
 
await
 
Global
 $
.
$ % 
NavigationInstance
% 7
.
7 8
PushModalAsync
8 F
(
F G
new
G J
	ModalPage
K T
(
T U
new
U X

SearchPage
Y c
(
c d
)
d e
,
e f
Localization
g s
.
s t
Search
t z
,
z {
false{ 
) 
) 
; 
}
 
)
 
;
 
return
 
gotoSearchCommand
 (
;
( )
}
 
}
 	
public
 
NormalViewModel
 
(
 
Grid
 #
	container
$ -
,
- .
PlayerPanel
/ :
panel
; @
,
@ A
INFocusElement
B P 
focusElementFromUp
Q c
,
c d
INFocusElement
e s#
focusElementFromDownt 
) 
{
 	 
FocusElementFromUp
 
=
   
focusElementFromUp
! 3
;
3 4"
FocusElementFromDown
  
=
! ""
focusElementFromDown
# 7
;
7 8
SuggestionItems
 
=
 
new
 !"
ObservableCollection
" 6
<
6 7
HistoryModel
7 C
>
C D
(
D E
)
E F
;
F G
	Container
 
=
 
	container
 !
;
! "
PlayerPanel
 
=
 
panel
 
;
  
SpinnerVisible
 
=
 
true
 !
;
! "
	Directory
 
.
 
CreateDirectory
 %
(
% &

GlobalData
& 0
.
0 1
Current
1 8
.
8 9
	MusicPath
9 B
)
B C
;
C D
GotoArtists
 
.
 
Execute
 
(
  
true
  $
)
$ %
;
% &
if
   
(
   
!
   
Global
   
.
   
Loaded
   
)
   
{
¡¡ 

GlobalData
¢¢ 
.
¢¢ 
Current
¢¢ "
.
¢¢" #
LoadTags
¢¢# +
(
¢¢+ ,
)
¢¢, -
;
¢¢- .

GlobalData
££ 
.
££ 
Current
££ "
.
££" #
LoadSavedTracks
££# 2
(
££2 3
)
££3 4
;
££4 5
Task
¤¤ 
task
¤¤ 
=
¤¤ 
Task
¤¤  
.
¤¤  !
Run
¤¤! $
(
¤¤$ %
async
¤¤% *
(
¤¤+ ,
)
¤¤, -
=>
¤¤. 0
{
¥¥ 
if
¦¦ 
(
¦¦ 
CacheLoader
¦¦ #
.
¦¦# $
IsCacheAvailable
¦¦$ 4
(
¦¦4 5
)
¦¦5 6
)
¦¦6 7
CacheLoader
§§ #
.
§§# $
	LoadCache
§§$ -
(
§§- .
)
§§. /
;
§§/ 0
await
©© 
GlobalLoader
©© &
.
©©& '
Load
©©' +
(
©©+ ,
)
©©, -
;
©©- .
}
ªª 
)
ªª 
;
ªª 
task
¬¬ 
.
¬¬ 
ContinueWith
¬¬ !
(
¬¬! "
t
¬¬" #
=>
¬¬$ &
{
­­ 

GlobalData
®® 
.
®® 
Current
®® &
.
®®& '

LoadConfig
®®' 1
(
®®1 2
)
®®2 3
;
®®3 4
Global
¯¯ 
.
¯¯ 
Loaded
¯¯ !
=
¯¯" #
true
¯¯$ (
;
¯¯( )
if
±± 
(
±± 

GlobalData
±± "
.
±±" #
Current
±±# *
.
±±* +
AutoDownload
±±+ 7
&&
±±8 :
Global
±±; A
.
±±A B
Application
±±B M
.
±±M N
HasInternet
±±N Y
(
±±Y Z
)
±±Z [
)
±±[ \
{
²² 
Task
³³ 
.
³³ 
Run
³³  
(
³³  !
async
³³! &
(
³³' (
)
³³( )
=>
³³* ,
{
´´ 
YoutubeClient
µµ )
client
µµ* 0
=
µµ1 2
new
µµ3 6
YoutubeClient
µµ7 D
(
µµD E
)
µµE F
;
µµF G
foreach
¶¶ #
(
¶¶$ %
var
¶¶% (
key
¶¶) ,
in
¶¶- /

GlobalData
¶¶0 :
.
¶¶: ;
Current
¶¶; B
.
¶¶B C!
WebToLocalPlaylists
¶¶C V
.
¶¶V W
Keys
¶¶W [
.
¶¶[ \
ToList
¶¶\ b
(
¶¶b c
)
¶¶c d
)
¶¶d e
{
·· 
if
¸¸  "
(
¸¸# $

GlobalData
¸¸$ .
.
¸¸. /
Current
¸¸/ 6
.
¸¸6 7
	Playlists
¸¸7 @
.
¸¸@ A
ContainsKey
¸¸A L
(
¸¸L M

GlobalData
¸¸M W
.
¸¸W X
Current
¸¸X _
.
¸¸_ `!
WebToLocalPlaylists
¸¸` s
[
¸¸s t
key
¸¸t w
]
¸¸w x
)
¸¸x y
)
¸¸y z 
DownloadProcessing
¹¹$ 6
.
¹¹6 7
AddRange
¹¹7 ?
(
¹¹? @
await
¹¹@ E
client
¹¹F L
.
¹¹L M
	Playlists
¹¹M V
.
¹¹V W
GetVideosAsync
¹¹W e
(
¹¹e f
key
¹¹f i
)
¹¹i j
,
¹¹j k

GlobalData
¹¹l v
.
¹¹v w
Current
¹¹w ~
.
¹¹~ "
WebToLocalPlaylists¹¹ 
[¹¹ 
key¹¹ 
]¹¹ 
,¹¹ 
key¹¹ 
,¹¹ 
true¹¹ ¢
)¹¹¢ £
;¹¹£ ¤
}
ºº 
}
»» 
)
»» 
;
»» 
}
¼¼ 
}
½½ 
)
½½ 
;
½½ 
}
¾¾ 
}
¿¿ 	
public
ÂÂ 
void
ÂÂ 
	Appearing
ÂÂ 
(
ÂÂ 
)
ÂÂ 
{
ÃÃ 	
var
ÄÄ 
src
ÄÄ 
=
ÄÄ 
System
ÄÄ 
.
ÄÄ 
Reactive
ÄÄ %
.
ÄÄ% &
Linq
ÄÄ& *
.
ÄÄ* +

Observable
ÄÄ+ 5
.
ÄÄ5 6
Timer
ÄÄ6 ;
(
ÄÄ; <
TimeSpan
ÄÄ< D
.
ÄÄD E
Zero
ÄÄE I
,
ÄÄI J
TimeSpan
ÄÄK S
.
ÄÄS T
FromMilliseconds
ÄÄT d
(
ÄÄd e
$num
ÄÄe h
)
ÄÄh i
)
ÄÄi j
.
ÄÄj k
	Timestamp
ÄÄk t
(
ÄÄt u
)
ÄÄu v
;
ÄÄv w
loopSubscription
ÅÅ 
=
ÅÅ 
src
ÅÅ "
.
ÅÅ" #
	Subscribe
ÅÅ# ,
(
ÅÅ, -
time
ÅÅ- 1
=>
ÅÅ2 4
Tick
ÅÅ5 9
(
ÅÅ9 :
)
ÅÅ: ;
)
ÅÅ; <
;
ÅÅ< =
if
ÆÆ 
(
ÆÆ 
	Container
ÆÆ 
.
ÆÆ 
Children
ÆÆ "
.
ÆÆ" #
Count
ÆÆ# (
>
ÆÆ) *
$num
ÆÆ+ ,
&&
ÆÆ- /
	Container
ÆÆ0 9
.
ÆÆ9 :
Children
ÆÆ: B
[
ÆÆB C
$num
ÆÆC D
]
ÆÆD E
is
ÆÆF H
IVisibleContent
ÆÆI X
)
ÆÆX Y
(
ÇÇ 
	Container
ÇÇ 
.
ÇÇ 
Children
ÇÇ #
[
ÇÇ# $
$num
ÇÇ$ %
]
ÇÇ% &
as
ÇÇ' )
IVisibleContent
ÇÇ* 9
)
ÇÇ9 :
.
ÇÇ: ;
	Appearing
ÇÇ; D
(
ÇÇD E
)
ÇÇE F
;
ÇÇF G
if
ÉÉ 
(
ÉÉ 

GlobalData
ÉÉ 
.
ÉÉ 
Current
ÉÉ "
.
ÉÉ" #
Audios
ÉÉ# )
.
ÉÉ) *
Count
ÉÉ* /
==
ÉÉ0 2
$num
ÉÉ3 4
&&
ÉÉ5 7

GlobalData
ÉÉ8 B
.
ÉÉB C
Current
ÉÉC J
.
ÉÉJ K
SavedTracks
ÉÉK V
.
ÉÉV W
Count
ÉÉW \
==
ÉÉ] _
$num
ÉÉ` a
)
ÉÉa b
{
ÊÊ 

GlobalData
ËË 
.
ËË 
Current
ËË "
.
ËË" #
LoadTags
ËË# +
(
ËË+ ,
)
ËË, -
;
ËË- .
CacheLoader
ÌÌ 
.
ÌÌ 
	LoadCache
ÌÌ %
(
ÌÌ% &
)
ÌÌ& '
;
ÌÌ' (

GlobalData
ÍÍ 
.
ÍÍ 
Current
ÍÍ "
.
ÍÍ" #
LoadSavedTracks
ÍÍ# 2
(
ÍÍ2 3
)
ÍÍ3 4
;
ÍÍ4 5

GlobalData
ÎÎ 
.
ÎÎ 
Current
ÎÎ "
.
ÎÎ" #

LoadConfig
ÎÎ# -
(
ÎÎ- .
)
ÎÎ. /
;
ÎÎ/ 0
}
ÏÏ 
}
ÐÐ 	
public
ÒÒ 
void
ÒÒ 
Disappearing
ÒÒ  
(
ÒÒ  !
)
ÒÒ! "
{
ÓÓ 	
loopSubscription
ÔÔ 
?
ÔÔ 
.
ÔÔ 
Dispose
ÔÔ %
(
ÔÔ% &
)
ÔÔ& '
;
ÔÔ' (
loopSubscription
ÕÕ 
=
ÕÕ 
null
ÕÕ #
;
ÕÕ# $
}
ÖÖ 	
public
ØØ 
void
ØØ 
Tick
ØØ 
(
ØØ 
)
ØØ 
{
ÙÙ 	
SearchPlaceholder
ÚÚ 
=
ÚÚ 
Localization
ÚÚ  ,
.
ÚÚ, -
Search
ÚÚ- 3
;
ÚÚ3 4
Badge
ÛÛ 
=
ÛÛ  
DownloadProcessing
ÛÛ &
.
ÛÛ& '

BadgeCount
ÛÛ' 1
.
ÛÛ1 2
ToString
ÛÛ2 :
(
ÛÛ: ;
)
ÛÛ; <
;
ÛÛ< =
BadgeVisible
ÜÜ 
=
ÜÜ  
DownloadProcessing
ÜÜ -
.
ÜÜ- .

BadgeCount
ÜÜ. 8
>
ÜÜ9 :
$num
ÜÜ; <
;
ÜÜ< =
SpinnerVisible
ÝÝ 
=
ÝÝ 
	Container
ÝÝ &
.
ÝÝ& '
Children
ÝÝ' /
.
ÝÝ/ 0
Count
ÝÝ0 5
==
ÝÝ6 8
$num
ÝÝ9 :
||
ÝÝ; =
!
ÝÝ> ?
Global
ÝÝ? E
.
ÝÝE F
Loaded
ÝÝF L
;
ÝÝL M
PlayerPanel
ÞÞ 
?
ÞÞ 
.
ÞÞ 
Tick
ÞÞ 
(
ÞÞ 
)
ÞÞ 
;
ÞÞ  
foreach
àà 
(
àà 
var
àà 
children
àà !
in
àà" $
	Container
àà% .
.
àà. /
Children
àà/ 7
.
àà7 8
ToList
àà8 >
(
àà> ?
)
àà? @
)
àà@ A
{
áá 
if
ââ 
(
ââ 
children
ââ 
.
ââ 
	IsVisible
ââ &
&&
ââ' )
children
ââ* 2
is
ââ3 5
ITimerContent
ââ6 C
content
ââD K
)
ââK L
content
ãã 
.
ãã 
Tick
ãã  
(
ãã  !
)
ãã! "
;
ãã" #
}
ää 
}
åå 	
public
çç 
void
çç 
RefreshSuggestion
çç %
(
çç% &
)
çç& '
{
èè 	
string
éé 
searchedText
éé 
=
éé  !
	EntryText
éé" +
??
éé, .
$str
éé/ 1
;
éé1 2
var
êê 
newList
êê 
=
êê 
SearchProcessing
êê *
.
êê* +'
GenerateSearchSuggestions
êê+ D
(
êêD E
)
êêE F
.
êêF G
FindAll
êêG N
(
êêN O
item
ëë 
=>
ëë 
searchedText
ëë $
.
ëë$ %
ToLowerInvariant
ëë% 5
(
ëë5 6
)
ëë6 7
.
ëë7 8
Contains
ëë8 @
(
ëë@ A
item
ëëA E
.
ëëE F
ToLowerInvariant
ëëF V
(
ëëV W
)
ëëW X
)
ëëX Y
||
ëëZ \
item
ëë] a
.
ëëa b
ToLowerInvariant
ëëb r
(
ëër s
)
ëës t
.
ëët u
Contains
ëëu }
(
ëë} ~
searchedTextëë~ 
.ëë  
ToLowerInvariantëë 
(ëë 
)ëë 
)ëë 
)ëë 
;ëë  
SuggestionItems
íí 
.
íí 
Clear
íí !
(
íí! "
)
íí" #
;
íí# $
foreach
îî 
(
îî 
var
îî 
item
îî 
in
îî  
newList
îî! (
)
îî( )
{
ïï 
SuggestionItems
ðð 
.
ðð  
Add
ðð  #
(
ðð# $
new
ðð$ '
HistoryModel
ðð( 4
(
ðð4 5
)
ðð5 6
{
ðð7 8
Text
ðð9 =
=
ðð> ?
item
ðð@ D
}
ððE F
)
ððF G
;
ððG H
}
ññ 
}
òò 	
public
óó 
async
óó 
void
óó %
SuggestionItem_Selected
óó 1
(
óó1 2
object
óó2 8
sender
óó9 ?
,
óó? @*
SelectedItemChangedEventArgs
óóA ]
e
óó^ _
)
óó_ `
{
ôô 	
int
õõ 
index
õõ 
=
õõ 
e
õõ 
.
õõ 
SelectedItemIndex
õõ +
;
õõ+ ,
if
÷÷ 
(
÷÷ 
index
÷÷ 
>=
÷÷ 
$num
÷÷ 
&&
÷÷ 
index
÷÷ #
<
÷÷$ %
SuggestionItems
÷÷& 5
.
÷÷5 6
Count
÷÷6 ;
)
÷÷; <
{
øø 
if
ùù 
(
ùù 
Global
ùù 
.
ùù 
Application
ùù &
.
ùù& '
HasInternet
ùù' 2
(
ùù2 3
)
ùù3 4
)
ùù4 5
{
úú 
await
ûû 
Global
ûû  
.
ûû  ! 
NavigationInstance
ûû! 3
.
ûû3 4
PushModalAsync
ûû4 B
(
ûûB C
new
ûûC F
	ModalPage
ûûG P
(
ûûP Q
new
ûûQ T
SearchResultPage
ûûU e
(
ûûe f
SuggestionItems
ûûf u
[
ûûu v
index
ûûv {
]
ûû{ |
.
ûû| }
Textûû} 
)ûû 
,ûû 
SuggestionItemsûû 
[ûû 
indexûû 
]ûû 
.ûû 
Textûû 
)ûû  
)ûû  ¡
;ûû¡ ¢
}
üü 
else
ýý 
await
þþ 
Global
þþ  
.
þþ  !
Page
þþ! %
.
þþ% &
DisplayAlert
þþ& 2
(
þþ2 3
Localization
þþ3 ?
.
þþ? @
Warning
þþ@ G
,
þþG H
Localization
þþI U
.
þþU V
NoConnection
þþV b
,
þþb c
Localization
þþd p
.
þþp q
Cancel
þþq w
)
þþw x
;
þþx y
(
 
sender
 
as
 
ListView
 #
)
# $
.
$ %
SelectedItem
% 1
=
2 3
null
4 8
;
8 9
}
 
}
 	
private
 
void
 
Toggle
 
(
 
int
 
buttonIndex
  +
=
, -
$num
. /
)
/ 0
{
 	!
TracksButtonToggled
 
=
  !
buttonIndex
" -
==
. 0
$num
1 2
;
2 3"
ArtistsButtonToggled
  
=
! "
buttonIndex
# .
==
/ 1
$num
2 3
;
3 4$
PlaylistsButtonToggled
 "
=
# $
buttonIndex
% 0
==
1 3
$num
4 5
;
5 6#
SettingsButtonToggled
 !
=
" #
buttonIndex
$ /
==
0 2
$num
3 4
;
4 5 
currentButtonIndex
 
=
  
buttonIndex
! ,
;
, -
}
 	
private
 
void
 
SetContainer
 !
(
! "
ContentView
" -
content
. 5
,
5 6
string
7 =
title
> C
)
C D
{
 	
if
 
(
 
!
 
	Container
 
.
 
Children
 #
.
# $
Contains
$ ,
(
, -
content
- 4
)
4 5
)
5 6
	Container
 
.
 
Children
 "
.
" #
Add
# &
(
& '
content
' .
)
. /
;
/ 0
else
 
{
 
	Container
 
.
 
Children
 "
.
" #
Remove
# )
(
) *
content
* 1
)
1 2
;
2 3
	Container
 
.
 
Children
 "
.
" #
Add
# &
(
& '
content
' .
)
. /
;
/ 0
}
 
if
 
(
 
content
 
is
 
INFocusContent
 (
focusContent
) 5
)
5 6
{
 
FocusElementDown
  
=
! "
focusContent
# /
.
/ 0
BottomElement
0 =
;
= >
FocusElementUp
 
=
  
focusContent
! -
.
- .

TopElement
. 8
;
8 9
focusContent
 
.
 

TopElement
 '
.
' (
NextFocusUp
( 3
=
4 5 
FocusElementFromUp
6 H
;
H I
focusContent
   
.
   
BottomElement
   *
.
  * +
NextFocusDown
  + 8
=
  9 :"
FocusElementFromDown
  ; O
;
  O P
}
¡¡ 
if
¢¢ 
(
¢¢ 
	Container
¢¢ 
.
¢¢ 
Children
¢¢ "
.
¢¢" #
Count
¢¢# (
>
¢¢) *
$num
¢¢+ ,
)
¢¢, -
{
££ 
foreach
¤¤ 
(
¤¤ 
var
¤¤ 
children
¤¤ %
in
¤¤& (
	Container
¤¤) 2
.
¤¤2 3
Children
¤¤3 ;
)
¤¤; <
{
¥¥ 
if
§§ 
(
§§ 
children
§§  
.
§§  !
	IsVisible
§§! *
)
§§* +
{
¨¨ 
if
©© 
(
©© 
children
©© $
is
©©% '
IVisibleContent
©©( 7
)
©©7 8
(
ªª 
children
ªª %
as
ªª& (
IVisibleContent
ªª) 8
)
ªª8 9
.
ªª9 :
Disappearing
ªª: F
(
ªªF G
)
ªªG H
;
ªªH I
children
««  
.
««  !
	IsVisible
««! *
=
««+ ,
false
««- 2
;
««2 3
}
¬¬ 
if
®® 
(
®® 
children
®®  
==
®®! #
content
®®$ +
)
®®+ ,
{
¯¯ 
if
°° 
(
°° 
children
°° $
is
°°% '
IVisibleContent
°°( 7
)
°°7 8
(
±± 
children
±± %
as
±±& (
IVisibleContent
±±) 8
)
±±8 9
.
±±9 :
	Appearing
±±: C
(
±±C D
)
±±D E
;
±±E F
children
²²  
.
²²  !
	IsVisible
²²! *
=
²²+ ,
true
²²- 1
;
²²1 2
}
´´ 
else
µµ 
children
¶¶  
.
¶¶  !
	IsVisible
¶¶! *
=
¶¶+ ,
false
¶¶- 2
;
¶¶2 3
}
·· 
}
¸¸ 
	PageTitle
¹¹ 
=
¹¹ 
title
¹¹ 
;
¹¹ 
}
ºº 	
}
½½ 
}¾¾ í 
ID:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\TV\SearchViewModel.cs
	namespace

 	
Newtone


 
.

 
Mobile

 
.

 
UI

 
.

 

ViewModels

 &
.

& '
TV

' )
{ 
public 

class 
SearchViewModel  
:! "
PropertyChangedBase# 6
{ 
private 
string 

searchText !
;! "
private  
ObservableCollection $
<$ %
NListViewItem% 2
>2 3
suggestionItems4 C
;C D
public 
bool 
SearchTextVisible %
{& '
get( +
;+ ,
private- 4
set5 8
;8 9
}: ;
public 
string 

SearchText  
{ 	
get 
=> 

searchText 
; 
set 
{ 

searchText 
= 
value "
;" #
OnPropertyChanged !
(! "
)" #
;# $
SearchTextVisible !
=" #

searchText$ .
.. /
Length/ 5
>6 7
$num8 9
;9 :
OnPropertyChanged !
(! "
(" #
)# $
=>% '
SearchTextVisible( 9
)9 :
;: ;
} 
}   	
public""  
ObservableCollection"" #
<""# $
NListViewItem""$ 1
>""1 2
SuggestionItems""3 B
{## 	
get$$ 
=>$$ 
suggestionItems$$ "
;$$" #
set%% 
{&& 
suggestionItems'' 
=''  !
value''" '
;''' (
OnPropertyChanged(( !
(((! "
)((" #
;((# $
})) 
}** 	
public,, 
Func,, 
<,, 
NListViewItem,, !
,,,! "
View,,# '
>,,' (
ItemTemplate,,) 5
=>,,6 8
item,,9 =
=>,,> @
new,,A D
SuggestionViewCell,,E W
(,,W X
item,,X \
),,\ ]
;,,] ^
public// 
SearchViewModel// 
(// 
)//  
{00 	
SuggestionItems11 
=11 
new11 ! 
ObservableCollection11" 6
<116 7
NListViewItem117 D
>11D E
(11E F
)11F G
;11G H
}22 	
public55 
void55 
RefreshSuggestion55 %
(55% &
)55& '
{66 	
string77 
searchedText77 
=77  !

SearchText77" ,
??77- /
$str770 2
;772 3
var88 
newList88 
=88 
SearchProcessing88 *
.88* +%
GenerateSearchSuggestions88+ D
(88D E
)88E F
.88F G
FindAll88G N
(88N O
item99 
=>99 
searchedText99 $
.99$ %
ToLowerInvariant99% 5
(995 6
)996 7
.997 8
Contains998 @
(99@ A
item99A E
.99E F
ToLowerInvariant99F V
(99V W
)99W X
)99X Y
||99Z \
item99] a
.99a b
ToLowerInvariant99b r
(99r s
)99s t
.99t u
Contains99u }
(99} ~
searchedText	99~ 
.
99 
ToLowerInvariant
99 
(
99 
)
99 
)
99 
)
99 
;
99  
SuggestionItems;; 
.;; 
Clear;; !
(;;! "
);;" #
;;;# $
foreach<< 
(<< 
var<< 
item<< 
in<<  
newList<<! (
)<<( )
{== 
SuggestionItems>> 
.>>  
Add>>  #
(>># $
new>>$ '
SuggestionModel>>( 7
(>>7 8
)>>8 9
{>>: ;
Text>>< @
=>>A B
item>>C G
}>>H I
)>>I J
;>>J K
}?? 
}@@ 	
}BB 
}CC ¯0
XD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\ViewCells\ArtistGridItemViewModel.cs
	namespace

 	
Newtone


 
.

 
Mobile

 
.

 
UI

 
.

 

ViewModels

 &
.

& '
	ViewCells

' 0
{ 
public 

class #
ArtistGridItemViewModel (
:) *
PropertyChangedBase+ >
{ 
private 
string 

artistName !
;! "
private 
string 

tracksText !
;! "
private 
ImageSource 
image !
;! "
private 
Xamarin 
. 
Forms 
. 
View "
View# '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string 

ArtistName  
{ 	
get 
=> 

artistName 
; 
set 
{ 

artistName 
= 
value "
;" #
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
public 
string 

TracksText  
{   	
get!! 
=>!! 

tracksText!! 
;!! 
set"" 
{## 

tracksText$$ 
=$$ 
value$$ "
;$$" #
OnPropertyChanged%% !
(%%! "
)%%" #
;%%# $
}&& 
}'' 	
public)) 
ImageSource)) 
Image))  
{** 	
get++ 
=>++ 
image++ 
;++ 
set,, 
{-- 
image.. 
=.. 
value.. 
;.. 
OnPropertyChanged// !
(//! "
)//" #
;//# $
}00 
}11 	
private44 
ICommand44 
longPressedCommand44 +
;44+ ,
public55 
ICommand55 
LongPressedCommand55 *
{66 	
get77 
{88 
if99 
(99 
longPressedCommand99 &
==99' )
null99* .
)99. /
longPressedCommand:: &
=::' (
new::) ,
ActionCommand::- :
(::: ;
	parameter::; D
=>::E G
{;; 
ContextMenuBuilder<< *
.<<* +
BuildForArtist<<+ 9
(<<9 :
View<<: >
,<<> ?

ArtistName<<@ J
)<<J K
;<<K L
}== 
)== 
;== 
return?? 
longPressedCommand?? )
;??) *
}@@ 
}AA 	
privateCC 
ICommandCC 
pressedCommandCC '
;CC' (
publicDD 
ICommandDD 
PressedCommandDD &
{EE 	
getFF 
{GG 
ifHH 
(HH 
pressedCommandHH "
==HH# %
nullHH& *
)HH* +
pressedCommandII "
=II# $
newII% (
ActionCommandII) 6
(II6 7
asyncII7 <
(II= >
	parameterII> G
)IIG H
=>III K
{JJ 
awaitKK 
GlobalKK $
.KK$ %
NavigationInstanceKK% 7
.KK7 8
PushModalAsyncKK8 F
(KKF G
newKKG J
	ModalPageKKK T
(KKT U
newKKU X
CurrentTracksPageKKY j
(KKj k

GlobalDataKKk u
.KKu v
CurrentKKv }
.KK} ~
Artists	KK~ 
[
KK 

ArtistName
KK 
]
KK 
,
KK 
$str
KK 
)
KK 
,
KK 

ArtistName
KK ¢
)
KK¢ £
)
KK£ ¤
;
KK¤ ¥
}LL 
)LL 
;LL 
returnMM 
pressedCommandMM %
;MM% &
}NN 
}OO 	
publicRR #
ArtistGridItemViewModelRR &
(RR& '
stringRR' -

artistNameRR. 8
,RR8 9
XamarinRR: A
.RRA B
FormsRRB G
.RRG H
ViewRRH L
viewRRM Q
)RRQ R
{SS 	

InitializeTT 
(TT 

artistNameTT !
,TT! "
viewTT# '
)TT' (
;TT( )
}UU 	
publicXX 
voidXX 

InitializeXX 
(XX 
stringXX %

artistNameXX& 0
,XX0 1
ViewXX2 6
viewXX7 ;
)XX; <
{YY 	
ViewZZ 
=ZZ 
viewZZ 
;ZZ 

ArtistName[[ 
=[[ 

artistName[[ #
;[[# $

TracksText\\ 
=\\ 
Localization\\ %
.\\% &
Tracks\\& ,
+\\- .
$str\\/ 3
+\\4 5

GlobalData\\6 @
.\\@ A
Current\\A H
.\\H I
Artists\\I P
[\\P Q

artistName\\Q [
]\\[ \
.\\\ ]
Count\\] b
;\\b c
Image]] 
=]] 
ImageSource]] 
.]]  
FromFile]]  (
(]]( )
$str]]) 9
)]]9 :
;]]: ;
foreach__ 
(__ 
string__ 
filePath__ $
in__% '

GlobalData__( 2
.__2 3
Current__3 :
.__: ;
Artists__; B
[__B C

artistName__C M
]__M N
)__N O
{`` 
varaa 
sourceaa 
=aa 

GlobalDataaa '
.aa' (
Currentaa( /
.aa/ 0
Audiosaa0 6
[aa6 7
filePathaa7 ?
]aa? @
;aa@ A
ifbb 
(bb 
sourcebb 
.bb 
Imagebb  
!=bb! #
nullbb$ (
)bb( )
{cc 
Imagedd 
=dd 
ImageProcessingdd +
.dd+ ,
	FromArraydd, 5
(dd5 6
sourcedd6 <
.dd< =
Imagedd= B
)ddB C
;ddC D
breakee 
;ee 
}ff 
}gg 
}hh 	
}jj 
}kk ¡C
ZD:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\ViewCells\PlaylistGridItemViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
.& '
	ViewCells' 0
{ 
public 

class %
PlaylistGridItemViewModel *
:+ ,
PropertyChangedBase- @
{ 
private 
string 
playlistName #
;# $
private 
string 

tracksText !
;! "
private 
string 
playlistUrl "
;" #
private 
ImageSource 
image !
;! "
private 
Xamarin 
. 
Forms 
. 
View "
View# '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
string 
PlaylistName "
{ 	
get 
=> 
playlistName 
;  
set 
{ 
playlistName 
= 
value $
;$ %
OnPropertyChanged   !
(  ! "
)  " #
;  # $
}!! 
}"" 	
public$$ 
string$$ 
PlaylistUrl$$ !
{%% 	
get&& 
=>&& 
playlistUrl&& 
;&& 
set'' 
{(( 
playlistUrl)) 
=)) 
value)) #
;))# $
OnPropertyChanged** !
(**! "
)**" #
;**# $
}++ 
},, 	
public.. 
string.. 

TracksText..  
{// 	
get00 
=>00 

tracksText00 
;00 
set11 
{22 

tracksText33 
=33 
value33 "
;33" #
OnPropertyChanged44 !
(44! "
)44" #
;44# $
}55 
}66 	
public88 
ImageSource88 
Image88  
{99 	
get:: 
=>:: 
image:: 
;:: 
set;; 
{<< 
image== 
=== 
value== 
;== 
OnPropertyChanged>> !
(>>! "
)>>" #
;>># $
}?? 
}@@ 	
privateCC 
ICommandCC 
longPressedCommandCC +
;CC+ ,
publicDD 
ICommandDD 
LongPressedCommandDD *
{EE 	
getFF 
{GG 
ifHH 
(HH 
longPressedCommandHH &
==HH' )
nullHH* .
)HH. /
longPressedCommandII &
=II' (
newII) ,
ActionCommandII- :
(II: ;
	parameterII; D
=>IIE G
{JJ 
ifKK 
(KK 
stringKK "
.KK" #
IsNullOrEmptyKK# 0
(KK0 1
PlaylistUrlKK1 <
)KK< =
)KK= >
ContextMenuBuilderLL .
.LL. /
BuildForPlaylistLL/ ?
(LL? @
ViewLL@ D
,LLD E
PlaylistNameLLF R
)LLR S
;LLS T
}MM 
)MM 
;MM 
returnOO 
longPressedCommandOO )
;OO) *
}PP 
}QQ 	
privateSS 
ICommandSS 
pressedCommandSS '
;SS' (
publicTT 
ICommandTT 
PressedCommandTT &
{UU 	
getVV 
{WW 
ifXX 
(XX 
pressedCommandXX "
==XX# %
nullXX& *
)XX* +
pressedCommandYY "
=YY# $
newYY% (
ActionCommandYY) 6
(YY6 7
asyncYY7 <
(YY= >
	parameterYY> G
)YYG H
=>YYI K
{ZZ 
if[[ 
([[ 
string[[ "
.[[" #
IsNullOrEmpty[[# 0
([[0 1
PlaylistUrl[[1 <
)[[< =
)[[= >
{\\ 
await]] !
Global]]" (
.]]( )
NavigationInstance]]) ;
.]]; <
PushModalAsync]]< J
(]]J K
new]]K N
	ModalPage]]O X
(]]X Y
new]]Y \
CurrentTracksPage]]] n
(]]n o

GlobalData]]o y
.]]y z
Current	]]z 
.
]] 
	Playlists
]] 
[
]] 
PlaylistName
]] 
]
]] 
,
]] 
PlaylistName
]] §
)
]]§ ¨
,
]]¨ ©
PlaylistName
]]ª ¶
)
]]¶ ·
)
]]· ¸
;
]]¸ ¹
}^^ 
else__ 
{`` 
awaitaa !
Globalaa" (
.aa( )
NavigationInstanceaa) ;
.aa; <
PushModalAsyncaa< J
(aaJ K
newaaK N
	ModalPageaaO X
(aaX Y
newaaY \
SearchResultPageaa] m
(aam n
PlaylistUrlaan y
)aay z
,aaz {
PlaylistName	aa| 
)
aa 
)
aa 
;
aa 
}bb 
}cc 
)cc 
;cc 
returndd 
pressedCommanddd %
;dd% &
}ee 
}ff 	
publicii %
PlaylistGridItemViewModelii (
(ii( )
stringii) /
playlistNameii0 <
,ii< =
Xamarinii> E
.iiE F
FormsiiF K
.iiK L
ViewiiL P
viewiiQ U
)iiU V
{jj 	
Viewkk 
=kk 
viewkk 
;kk 
Imagell 
=ll 
ImageSourcell 
.ll  
FromFilell  (
(ll( )
$strll) 9
)ll9 :
;ll: ;
ifnn 
(nn 
playlistNamenn 
.nn 

StartsWithnn '
(nn' (
$strnn( 0
)nn0 1
)nn1 2
{oo 
PlaylistNamepp 
=pp 

GlobalDatapp )
.pp) *
Currentpp* 1
.pp1 2
RecomendedPlaylistspp2 E
.ppE F
KeysppF J
.ppJ K
FirstppK P
(ppP Q
itemppQ U
=>ppV X

GlobalDatappY c
.ppc d
Currentppd k
.ppk l
RecomendedPlaylistsppl 
[	pp 
item
pp 
]
pp 
==
pp 
playlistName
pp 
)
pp 
;
pp 
PlaylistUrlqq 
=qq 
playlistNameqq *
;qq* +
}rr 
elsess 
{tt 
PlaylistNameuu 
=uu 
playlistNameuu +
;uu+ ,

TracksTextvv 
=vv 
Localizationvv )
.vv) *
Tracksvv* 0
+vv1 2
$strvv3 7
+vv8 9

GlobalDatavv: D
.vvD E
CurrentvvE L
.vvL M
	PlaylistsvvM V
[vvV W
playlistNamevvW c
]vvc d
.vvd e
Countvve j
;vvj k
foreachxx 
(xx 
stringxx 
filePathxx  (
inxx) +

GlobalDataxx, 6
.xx6 7
Currentxx7 >
.xx> ?
	Playlistsxx? H
[xxH I
playlistNamexxI U
]xxU V
)xxV W
{yy 
MediaSourcezz 
sourcezz  &
=zz' (
nullzz) -
;zz- .
if|| 
(|| 
filePath||  
.||  !
Length||! '
==||( *
$num||+ -
)||- .
source}} 
=}}  

GlobalData}}! +
.}}+ ,
Current}}, 3
.}}3 4
SavedTracks}}4 ?
[}}? @
filePath}}@ H
]}}H I
;}}I J
else~~ 
source 
=  

GlobalData! +
.+ ,
Current, 3
.3 4
Audios4 :
[: ;
filePath; C
]C D
;D E
if
 
(
 
source
 
.
 
Image
 $
!=
% '
null
( ,
&&
- /
source
0 6
.
6 7
Image
7 <
.
< =
Length
= C
>
D E
$num
F G
)
G H
{
 
Image
 
=
 
ImageProcessing
  /
.
/ 0
	FromArray
0 9
(
9 :
source
: @
.
@ A
Image
A F
)
F G
;
G H
break
 
;
 
}
 
}
 
}
 
}
 	
}
 
}  
^D:\Projekty\CS\Newtone\Newtone.Mobile.UI\ViewModels\ViewCells\SearchResultViewCellViewModel.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 

ViewModels &
.& '
	ViewCells' 0
{ 
public 

class )
SearchResultViewCellViewModel .
{		 
private 
ICommand 
downloadClicked (
;( )
public 
ICommand 
DownloadClicked '
{ 	
get 
{ 
if 
( 
downloadClicked #
==$ &
null' +
)+ ,
downloadClicked #
=$ %
new& )
ActionCommand* 7
(7 8
	parameter8 A
=>B D
{ 
ContextMenuBuilder *
.* + 
BuildForSearchResult+ ?
(? @
	parameter@ I
asJ L
XamarinM T
.T U
FormsU Z
.Z [
View[ _
,_ `
(a b
	parameterb k
asl n
CustomImageButton	o 
)
 
.
 
Tag
 
)
 
;
 
} 
) 
; 
return 
downloadClicked &
;& '
} 
} 	
} 
} àJ
AD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\ArtistPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 

ArtistPage #
:$ %
ContentView& 1
,1 2
IVisibleContent3 B
,B C
ITimerContentD Q
{ 
private 
static 
IList 
< 
View !
>! "
generatedChildrens# 5
;5 6
private 
bool 
isInitializing #
=$ %
false& +
;+ ,
public 

ArtistPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
Init 
( 
) 
; 
} 	
public 
void 
	Appearing 
( 
) 
{ 	
} 	
public!! 
void!! 
Disappearing!!  
(!!  !
)!!! "
{"" 	
}$$ 	
public%% 
void%% 
Init%% 
(%% 
)%% 
{&& 	
isInitializing'' 
='' 
true'' !
;''! "
if(( 
((( 
generatedChildrens(( "
==((# %
null((& *
)((* +
{)) 
generatedChildrens** "
=**# $
new**% (
List**) -
<**- .
View**. 2
>**2 3
(**3 4
)**4 5
;**5 6
List++ 
<++ 
string++ 
>++ 

beforeSort++ '
=++( )
new++* -
List++. 2
<++2 3
string++3 9
>++9 :
(++: ;
)++; <
;++< =
string,, 
unknown,, 
=,,  
null,,! %
;,,% &
foreach.. 
(.. 
string.. 
artist..  &
in..' )

GlobalData..* 4
...4 5
Current..5 <
...< =
Artists..= D
...D E
Keys..E I
...I J
ToList..J P
(..P Q
)..Q R
)..R S
{// 
if00 
(00 
artist00 
==00 !
Localization00" .
.00. /
UnknownArtist00/ <
)00< =
unknown11 
=11  !
artist11" (
;11( )
else22 

beforeSort33 "
.33" #
Add33# &
(33& '
artist33' -
)33- .
;33. /
}44 
List66 
<66 
string66 
>66 
	afterSort66 &
=66' (

beforeSort66) 3
.663 4
OrderBy664 ;
(66; <
o66< =
=>66> @
o66A B
)66B C
.66C D
ToList66D J
(66J K
)66K L
;66L M
if88 
(88 
unknown88 
!=88 
null88 #
)88# $
	afterSort99 
.99 
Add99 !
(99! "
unknown99" )
)99) *
;99* +
int;; 
pos;; 
=;; 
$num;; 
;;; 
string<< 
model0<< 
=<< 
null<<  $
;<<$ %
foreach== 
(== 
string== 
artist==  &
in==' )
	afterSort==* 3
)==3 4
{>> 
if?? 
(?? 
pos?? 
==?? 
$num??  
)??  !
{@@ 
model0AA 
=AA  
artistAA! '
;AA' (
posBB 
=BB 
$numBB 
;BB  
}CC 
elseDD 
{EE 
XamarinFF 
.FF  
FormsFF  %
.FF% &
RelativeLayoutFF& 4
layoutFF5 ;
=FF< =
newFF> A
XamarinFFB I
.FFI J
FormsFFJ O
.FFO P
RelativeLayoutFFP ^
(FF^ _
)FF_ `
;FF` a
layoutGG 
.GG 
ChildrenGG '
.GG' (
AddGG( +
(GG+ ,
newGG, /
ArtistGridItemGG0 >
(GG> ?
thisGG? C
,GGC D
model0GGE K
)GGK L
,GGL M
nullGGN R
,GGR S
nullGGT X
,GGX Y

ConstraintGGZ d
.GGd e
RelativeToParentGGe u
(GGu v
parentGGv |
=>GG} 
parent
GG 
.
GG 
Width
GG 
*
GG 
$num
GG 
)
GG 
,
GG 

Constraint
GG 
.
GG  
Constant
GG  ¨
(
GG¨ ©
$num
GG© ¬
)
GG¬ ­
)
GG­ ®
;
GG® ¯
layoutHH 
.HH 
ChildrenHH '
.HH' (
AddHH( +
(HH+ ,
newHH, /
ArtistGridItemHH0 >
(HH> ?
thisHH? C
,HHC D
artistHHE K
)HHK L
,HHL M

ConstraintHHN X
.HHX Y
RelativeToParentHHY i
(HHi j
parentHHj p
=>HHq s
parentHHt z
.HHz {
Width	HH{ 
*
HH 
$num
HH 
)
HH 
,
HH 
null
HH 
,
HH 

Constraint
HH 
.
HH 
RelativeToParent
HH ª
(
HHª «
parent
HH« ±
=>
HH² ´
parent
HHµ »
.
HH» ¼
Width
HH¼ Á
*
HHÂ Ã
$num
HHÄ Ç
)
HHÇ È
,
HHÈ É

Constraint
HHÊ Ô
.
HHÔ Õ
Constant
HHÕ Ý
(
HHÝ Þ
$num
HHÞ á
)
HHá â
)
HHâ ã
;
HHã ä
generatedChildrensII *
.II* +
AddII+ .
(II. /
layoutII/ 5
)II5 6
;II6 7
posJJ 
=JJ 
$numJJ 
;JJ  
}KK 
}MM 
ifOO 
(OO 
posOO 
==OO 
$numOO 
)OO 
{PP 
XamarinQQ 
.QQ 
FormsQQ !
.QQ! "
RelativeLayoutQQ" 0
layoutQQ1 7
=QQ8 9
newQQ: =
XamarinQQ> E
.QQE F
FormsQQF K
.QQK L
RelativeLayoutQQL Z
(QQZ [
)QQ[ \
;QQ\ ]
layoutRR 
.RR 
ChildrenRR #
.RR# $
AddRR$ '
(RR' (
newRR( +
ArtistGridItemRR, :
(RR: ;
thisRR; ?
,RR? @
model0RRA G
)RRG H
,RRH I
nullRRJ N
,RRN O
nullRRP T
,RRT U

ConstraintRRV `
.RR` a
RelativeToParentRRa q
(RRq r
parentRRr x
=>RRy {
parent	RR| 
.
RR 
Width
RR 
)
RR 
,
RR 

Constraint
RR 
.
RR 
Constant
RR 
(
RR 
$num
RR ¢
)
RR¢ £
)
RR£ ¤
;
RR¤ ¥
generatedChildrensSS &
.SS& '
AddSS' *
(SS* +
layoutSS+ 1
)SS1 2
;SS2 3
}TT 
DeviceVV 
.VV #
BeginInvokeOnMainThreadVV .
(VV. /
(VV/ 0
)VV0 1
=>VV2 4
{WW 
	trackGridXX 
.XX 
ChildrenXX &
.XX& '
ClearXX' ,
(XX, -
)XX- .
;XX. /
generatedChildrensYY &
.YY& '
ForEachYY' .
(YY. /
	trackGridYY/ 8
.YY8 9
ChildrenYY9 A
.YYA B
AddYYB E
)YYE F
;YYF G
}ZZ 
)ZZ 
;ZZ 
}[[ 
else\\ 
{]] 
if^^ 
(^^ 
	trackGrid^^ 
.^^ 
Children^^ &
.^^& '
Count^^' ,
==^^- /
$num^^0 1
&&^^2 4
generatedChildrens^^5 G
?^^G H
.^^H I
Count^^I N
>^^O P
$num^^Q R
)^^R S
{__ 
Device`` 
.`` #
BeginInvokeOnMainThread`` 2
(``2 3
(``3 4
)``4 5
=>``6 8
generatedChildrens``9 K
.``K L
ForEach``L S
(``S T
	trackGrid``T ]
.``] ^
Children``^ f
.``f g
Add``g j
)``j k
)``k l
;``l m
}aa 
}bb 
isInitializingcc 
=cc 
falsecc "
;cc" #
}dd 	
publicff 
voidff 
Tickff 
(ff 
)ff 
{gg 	
ifhh 
(hh 

GlobalDatahh 
.hh 
Currenthh "
.hh" #
ArtistsNeedRefreshhh# 5
&&hh6 8
!hh9 :
isInitializinghh: H
&&hhI K
GlobalhhL R
.hhR S
LoadedhhS Y
)hhY Z
{ii 
generatedChildrensjj "
=jj# $
nulljj% )
;jj) *
Initll 
(ll 
)ll 
;ll 

GlobalDatamm 
.mm 
Currentmm "
.mm" #
ArtistsNeedRefreshmm# 5
=mm6 7
falsemm8 =
;mm= >
}nn 
}oo 	
}qq 
}rr 
JD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\CurrentPlaylistPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
{		 
[

 
XamlCompilation

 
(

 "
XamlCompilationOptions

 +
.

+ ,
Compile

, 3
)

3 4
]

4 5
public 

partial 
class 
CurrentPlaylistPage ,
:- .
ContentView/ :
,: ;
ITimerContent< I
{ 
private 
readonly $
CurrentPlaylistViewModel 1
	ViewModel2 ;
;; <
public 
CurrentPlaylistPage "
(" #
)# $
{ 	
InitializeComponent 
(  
)  !
;! "
	ViewModel 
= 
BindingContext &
as' )$
CurrentPlaylistViewModel* B
;B C
} 	
public 
void 
	Appearing 
( 
) 
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
public 
void 
Disappearing  
(  !
)! "
{ 	
throw 
new #
NotImplementedException -
(- .
). /
;/ 0
} 	
public"" 
void"" 
Tick"" 
("" 
)"" 
{## 	
	ViewModel$$ 
?$$ 
.$$ 
Tick$$ 
($$ 
)$$ 
;$$ 
}&& 	
private)) 
void)) &
TrackListView_ItemSelected)) /
())/ 0
object))0 6
sender))7 =
,))= >(
SelectedItemChangedEventArgs))? [
e))\ ]
)))] ^
{** 	
	ViewModel++ 
?++ 
.++ &
TrackListView_ItemSelected++ 1
(++1 2
sender++2 8
,++8 9
e++: ;
)++; <
;++< =
},, 	
}.. 
}// Î
HD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\CurrentTracksPage.xaml.cs
	namespace

 	
Newtone


 
.

 
Mobile

 
.

 
UI

 
.

 
Views

 !
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
CurrentTracksPage *
:+ ,
ContentView- 8
,8 9
ITimerContent: G
{ 
private "
CurrentTracksViewModel &
	ViewModel' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
CurrentTracksPage  
(  !
List! %
<% &
string& ,
>, -
tracks. 4
,4 5
string6 <
playlistName= I
)I J
{ 	
InitializeComponent 
(  
)  !
;! "
BindingContext 
= 
	ViewModel &
=' (
new) ,"
CurrentTracksViewModel- C
(C D
tracksD J
,J K
playlistNameL X
)X Y
;Y Z
} 	
public 
void 
Tick 
( 
) 
{ 	
	ViewModel 
? 
. 
Tick 
( 
) 
; 
} 	
private"" 
void"" &
TrackListView_ItemSelected"" /
(""/ 0
object""0 6
sender""7 =
,""= >(
SelectedItemChangedEventArgs""? [
e""\ ]
)""] ^
{## 	
	ViewModel$$ 
?$$ 
.$$ &
TrackListView_ItemSelected$$ 1
($$1 2
sender$$2 8
,$$8 9
e$$: ;
)$$; <
;$$< =
}%% 	
public'' 
void'' 
	Appearing'' 
('' 
)'' 
{(( 	
throw)) 
new)) #
NotImplementedException)) -
())- .
))). /
;))/ 0
}** 	
public,, 
void,, 
Disappearing,,  
(,,  !
),,! "
{-- 	
throw.. 
new.. #
NotImplementedException.. -
(..- .
)... /
;../ 0
}// 	
}11 
}22 ,
KD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\Custom\AudioSliderControl.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
Custom" (
{ 
public 

class 
AudioSliderControl #
:$ %
Slider& ,
{ 
private 
static 
AudioSliderControl )
Instance* 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public		 
static		 
readonly		 
BindableProperty		 /*
ValueWithoutBaseEventsProperty		0 N
=		O P
BindableProperty		Q a
.		a b
Create		b h
(		h i
$str			i 
,
		 
typeof
		 
(
		 
double
		 
)
		 
,
		 
typeof
		 
(
		  
AudioSliderControl
		 ¬
)
		¬ ­
,
		­ ®
null
		¯ ³
,
		³ ´
propertyChanged
		µ Ä
:
		Ä Å-
OnValueWithoutBaseEventsChanged
		Æ å
)
		å æ
;
		æ ç
public

 
static

 
readonly

 
BindableProperty

 /(
MaxWithoutBaseEventsProperty

0 L
=

M N
BindableProperty

O _
.

_ `
Create

` f
(

f g
$str

g }
,

} ~
typeof	

 
(


 
double


 
)


 
,


 
typeof


 
(


  
AudioSliderControl


 ¨
)


¨ ©
,


© ª
null


« ¯
,


¯ °
propertyChanged


± À
:


À Á+
OnMaxWithoutBaseEventsChanged


Â ß
)


ß à
;


à á
public 
double "
ValueWithoutBaseEvents ,
{ 	
get 
=> 
Value 
; 
set 
{ 
InvokeEvents 
= 
false $
;$ %
Value 
= 
value 
; 
OnPropertyChanged !
(! "
$str" )
)) *
;* +
} 
} 	
public 
double  
MaxWithoutBaseEvents *
{ 	
get 
=> 
Maximum 
; 
set 
{ 
InvokeEvents 
= 
false $
;$ %
Maximum 
= 
value 
;  
OnPropertyChanged !
(! "
$str" +
)+ ,
;, -
} 
}   	
private"" 
bool"" 
InvokeEvents"" !
{""" #
get""$ '
;""' (
set"") ,
;"", -
}"". /
public%% 
delegate%% 
void%% 
ValueChangedHandler%% 0
(%%0 1
object%%1 7
sender%%8 >
,%%> ?
ValueChangedArgs%%@ P
e%%Q R
)%%R S
;%%S T
public&& 
event&& 
ValueChangedHandler&& (
ValueNewChanged&&) 8
;&&8 9
public)) 
AudioSliderControl)) !
())! "
)))" #
{** 	
ValueChanged++ 
+=++ $
AudioSlider_ValueChanged++ 4
;++4 5
Instance,, 
=,, 
this,, 
;,, 
InvokeEvents-- 
=-- 
true-- 
;--  
}.. 	
private11 
void11 $
AudioSlider_ValueChanged11 -
(11- .
object11. 4
sender115 ;
,11; <!
ValueChangedEventArgs11= R
e11S T
)11T U
{22 	
if33 
(33 
InvokeEvents33 
)33 
ValueNewChanged44 
?44  
.44  !
Invoke44! '
(44' (
sender44( .
,44. /
new440 3
ValueChangedArgs444 D
(44D E
)44E F
{44G H
Value44I N
=44O P
e44Q R
.44R S
NewValue44S [
}44\ ]
)44] ^
;44^ _
InvokeEvents66 
=66 
true66 
;66  
}77 	
private88 
static88 
void88 +
OnValueWithoutBaseEventsChanged88 ;
(88; <
BindableObject88< J
bindable88K S
,88S T
object88U [
oldValue88\ d
,88d e
object88f l
newValue88m u
)88u v
{99 	
Instance:: 
.:: "
ValueWithoutBaseEvents:: +
=::, -
(::. /
double::/ 5
)::5 6
newValue::6 >
;::> ?
};; 	
private== 
static== 
void== )
OnMaxWithoutBaseEventsChanged== 9
(==9 :
BindableObject==: H
bindable==I Q
,==Q R
object==S Y
oldValue==Z b
,==b c
object==d j
newValue==k s
)==s t
{>> 	
Instance?? 
.??  
MaxWithoutBaseEvents?? )
=??* +
(??, -
double??- 3
)??3 4
newValue??4 <
;??< =
}@@ 	
publicCC 
classCC 
ValueChangedArgsCC %
{DD 	
publicEE 
doubleEE 
ValueEE 
{EE  !
getEE" %
;EE% &
setEE' *
;EE* +
}EE, -
}FF 	
}HH 
}II æ#
JD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\Custom\CustomImageButton.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
Custom" (
{ 
public 

class 
CustomImageButton "
:# $
ImageButton% 0
{ 
public

 
event

 
EventHandler

 !
<

! "
ToggledEventArgs

" 2
>

2 3
Toggled

4 ;
;

; <
public 
static 
BindableProperty &
IsToggledProperty' 8
=9 :
BindableProperty 
. 
Create #
(# $
$str$ /
,/ 0
typeof1 7
(7 8
bool8 <
)< =
,= >
typeof? E
(E F
CustomImageButtonF W
)W X
,X Y
falseZ _
,_ `
propertyChanged$ 3
:3 4
OnIsToggledChanged5 G
)G H
;H I
public 
bool 
	IsToggled 
{ 	
set 
{ 
SetValue 
( 
IsToggledProperty ,
,, -
value. 3
)3 4
;4 5
}6 7
get 
{ 
return 
( 
bool 
) 
GetValue '
(' (
IsToggledProperty( 9
)9 :
;: ;
}< =
} 	
public 
static 
BindableProperty &
TagProperty' 2
=3 4
BindableProperty 
. 
Create #
(# $
$str$ )
,) *
typeof+ 1
(1 2
string2 8
)8 9
,9 :
typeof; A
(A B
CustomImageButtonB S
)S T
,T U
defaultV ]
(] ^
string^ d
)d e
)e f
;f g
public 
string 
Tag 
{ 	
set 
{ 
SetValue 
( 
TagProperty &
,& '
value( -
)- .
;. /
}0 1
get 
{ 
return 
( 
string  
)  !
GetValue! )
() *
TagProperty* 5
)5 6
;6 7
}8 9
} 	
public!! 
CustomImageButton!!  
(!!  !
)!!! "
{"" 	
Clicked## 
+=## %
CustomImageButton_Clicked## 0
;##0 1
}$$ 	
private'' 
static'' 
void'' 
OnIsToggledChanged'' .
(''. /
BindableObject''/ =
bindable''> F
,''F G
object''H N
oldValue''O W
,''W X
object''Y _
newValue''` h
)''h i
{(( 	
CustomImageButton)) 
toggleButton)) *
=))+ ,
())- .
CustomImageButton)). ?
)))? @
bindable))@ H
;))H I
bool** 
	isToggled** 
=** 
(** 
bool** "
)**" #
newValue**# +
;**+ ,
toggleButton-- 
.-- 
Toggled--  
?--  !
.--! "
Invoke--" (
(--( )
toggleButton--) 5
,--5 6
new--7 :
ToggledEventArgs--; K
(--K L
	isToggled--L U
)--U V
)--V W
;--W X
Debug.. 
... 
	WriteLine.. 
(.. 
$str.. /
+..0 1
	isToggled..2 ;
)..; <
;..< =
VisualStateManager00 
.00 
	GoToState00 (
(00( )
toggleButton00) 5
,005 6
	isToggled007 @
?00A B
$str00C N
:00O P
$str00Q Y
)00Y Z
;00Z [
}11 	
private33 
void33 %
CustomImageButton_Clicked33 .
(33. /
object33/ 5
sender336 <
,33< =
	EventArgs33> G
e33H I
)33I J
{44 	
VisualStateManager55 
.55 
	GoToState55 (
(55( )
this55) -
,55- .
	IsToggled55/ 8
?559 :
$str55; F
:55G H
$str55I Q
)55Q R
;55R S
}66 	
}88 
}99 Ê
ID:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\Custom\PlayerPanel.xaml.cs
	namespace

 	
Newtone


 
.

 
Mobile

 
.

 
UI

 
.

 
Views

 !
.

! "
Custom

" (
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
PlayerPanel $
:% &
ContentView' 2
,2 3
ITimerContent4 A
{ 
private  
PlayerPanelViewModel $
	ViewModel% .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
PlayerPanel 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
	ViewModel 
= 
BindingContext &
as' ) 
PlayerPanelViewModel* >
;> ?
backgroundImage 
. 
On 
< 
iOS "
>" #
(# $
)$ %
.% &
UseBlurEffect& 3
(3 4
BlurEffectStyle4 C
.C D
LightD I
)I J
;J K
} 	
public 
void 
Tick 
( 
) 
{ 	
	ViewModel 
? 
. 
Tick 
( 
) 
; 
} 	
public   
void   
	Appearing   
(   
)   
{!! 	
throw"" 
new"" #
NotImplementedException"" -
(""- .
)"". /
;""/ 0
}## 	
public%% 
void%% 
Disappearing%%  
(%%  !
)%%! "
{&& 	
throw'' 
new'' #
NotImplementedException'' -
(''- .
)''. /
;''/ 0
}(( 	
}** 
}++ Õ
ID:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\Custom\PressGestureMask.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
Custom" (
{ 
public 

class 
PressGestureMask !
:" #
Xamarin$ +
.+ ,
Forms, 1
.1 2
Image2 7
{ 
public

 
static

 
BindableProperty

 &"
PressedCommandProperty

' =
=

> ?
BindableProperty 
. 
Create #
(# $
$str$ 4
,4 5
typeof6 <
(< =
ICommand= E
)E F
,F G
typeofH N
(N O
PressGestureMaskO _
)_ `
)` a
;a b
public 
static 
BindableProperty &&
LongPressedCommandProperty' A
=B C
BindableProperty 
. 
Create #
(# $
$str$ 8
,8 9
typeof: @
(@ A
ICommandA I
)I J
,J K
typeofL R
(R S
PressGestureMaskS c
)c d
)d e
;e f
public 
event 
EventHandler !
LongPressed" -
;- .
public 
event 
EventHandler !
Pressed" )
;) *
public 
ICommand 
PressedCommand &
{ 	
get 
=> 
( 
ICommand 
) 
GetValue %
(% &"
PressedCommandProperty& <
)< =
;= >
set 
=> 
SetValue 
( "
PressedCommandProperty 2
,2 3
value4 9
)9 :
;: ;
} 	
public 
ICommand 
LongPressedCommand *
{ 	
get 
=> 
( 
ICommand 
) 
GetValue %
(% &&
LongPressedCommandProperty& @
)@ A
;A B
set 
=> 
SetValue 
( &
LongPressedCommandProperty 6
,6 7
value8 =
)= >
;> ?
} 	
public$$ 
void$$ 
HandleLongPress$$ #
($$# $
object$$$ *
sender$$+ 1
,$$1 2
	EventArgs$$3 <
e$$= >
)$$> ?
{%% 	
LongPressed&& 
?&& 
.&& 
Invoke&& 
(&&  
sender&&  &
,&&& '
e&&( )
)&&) *
;&&* +
LongPressedCommand'' 
?'' 
.''  
Execute''  '
(''' (
null''( ,
)'', -
;''- .
})) 	
public++ 
void++ 
HandlePress++ 
(++  
object++  &
sender++' -
,++- .
	EventArgs++/ 8
e++9 :
)++: ;
{,, 	
Pressed-- 
?-- 
.-- 
Invoke-- 
(-- 
sender-- "
,--" #
e--$ %
)--% &
;--& '
PressedCommand.. 
?.. 
... 
Execute.. #
(..# $
null..$ (
)..( )
;..) *
}// 	
}11 
}22 
CD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\DownloadPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
{ 
[		 
XamlCompilation		 
(		 "
XamlCompilationOptions		 +
.		+ ,
Compile		, 3
)		3 4
]		4 5
public

 

partial

 
class

 
DownloadPage

 %
:

& '
ContentView

( 3
,

3 4
ITimerContent

5 B
{ 
private 
DownloadViewModel !
	ViewModel" +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
DownloadPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
	ViewModel 
= 
BindingContext &
as' )
DownloadViewModel* ;
;; <
} 	
public 
void 
Tick 
( 
) 
{ 	
	ViewModel 
? 
. 
Tick 
( 
) 
; 
} 	
public 
void 
	Appearing 
( 
) 
{ 	
} 	
public!! 
void!! 
Disappearing!!  
(!!  !
)!!! "
{"" 	
}$$ 	
}&& 
}'' 
ED:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\FirstStartPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public		 

partial		 
class		 
FirstStartPage		 '
:		( )
ContentPage		* 5
{

 
public 
static 
FirstStartPage $
Instance% -
{. /
get0 3
;3 4
private5 <
set= @
;@ A
}B C
public 
FirstStartPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
Instance 
= 
this 
; 
SetPage 
( 
new 
FirstStartSearch (
(( )
)) *
)* +
;+ ,
} 	
public 
void 
SetPage 
( 
ContentView '
view( ,
), -
{ 	
mainGrid 
. 
Children 
. 
Clear #
(# $
)$ %
;% &
mainGrid 
. 
Children 
. 
Add !
(! "
view" &
,& '
$num( )
,) *
$num+ ,
), -
;- .
} 	
} 
}  
RD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\FirstStart\FirstStartSearch.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "

FirstStart" ,
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
FirstStartSearch )
:* +
ContentView, 7
{ 
public

 
FirstStartSearch

 
(

  
)

  !
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
} 
} ½
ED:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\FullScreenPage.xaml.cs
	namespace

 	
Newtone


 
.

 
Mobile

 
.

 
UI

 
.

 
Views

 !
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
FullScreenPage '
:( )
ContentPage* 5
,5 6 
INavigationContainer7 K
{ 
private 
FullScreenViewModel #
	ViewModel$ -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
FullScreenPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
On 
< 
iOS 
> 
( 
) 
. 
SetUseSafeArea $
($ %
true% )
)) *
;* +
var 
safeAreaInset 
= 
On  "
<" #
iOS# &
>& '
(' (
)( )
.) *
SafeAreaInsets* 8
(8 9
)9 :
;: ;
Padding 
= 
safeAreaInset #
;# $
	ViewModel 
= 
BindingContext &
as' )
FullScreenViewModel* =
;= >
	Appearing 
+= 
PageAppearing &
;& '
Disappearing 
+= 
PageDisappearing ,
;, -
audioSlider 
. 
ValueNewChanged '
+=( *'
AudioSlider_ValueNewChanged+ F
;F G
	trackBlur 
. 
On 
< 
iOS 
> 
( 
) 
.  
UseBlurEffect  -
(- .
BlurEffectStyle. =
.= >
Light> C
)C D
;D E
} 	
private!! 
void!! '
AudioSlider_ValueNewChanged!! 0
(!!0 1
object!!1 7
sender!!8 >
,!!> ?
Custom!!@ F
.!!F G
AudioSliderControl!!G Y
.!!Y Z
ValueChangedArgs!!Z j
e!!k l
)!!l m
{"" 	
	ViewModel## 
?## 
.## '
AudioSlider_ValueNewChanged## 2
(##2 3
e##3 4
)##4 5
;##5 6
}$$ 	
private&& 
void&& 
PageDisappearing&& %
(&&% &
object&&& ,
sender&&- 3
,&&3 4
	EventArgs&&5 >
e&&? @
)&&@ A
{'' 	
	ViewModel(( 
?(( 
.(( 
Disappearing(( #
(((# $
)(($ %
;((% &
})) 	
private++ 
void++ 
PageAppearing++ "
(++" #
object++# )
sender++* 0
,++0 1
	EventArgs++2 ;
e++< =
)++= >
{,, 	
	ViewModel-- 
?-- 
.-- 
	Appearing--  
(--  !
)--! "
;--" #
}.. 	
public00 
void00 
Block00 
(00 
)00 
{11 	
blocker22 
.22 
	IsVisible22 
=22 
true22  $
;22$ %
}33 	
public55 
void55 
Unblock55 
(55 
)55 
{66 	
blocker77 
.77 
	IsVisible77 
=77 
false77  %
;77% &
}88 	
public:: 
bool:: 
	IsBlocked:: 
(:: 
):: 
{;; 	
return<< 
blocker<< 
.<< 
	IsVisible<< $
;<<$ %
}== 	
}?? 
}@@ ô
ID:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\LanguageSelectPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
LanguageSelectPage +
:, -
ContentPage. 9
{ 
public

 
LanguageSelectPage

 !
(

! "
)

" #
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
} 
} ã2
@D:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\ModalPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
	ModalPage "
:# $
ContentPage% 0
,0 1 
INavigationContainer2 F
{ 
private 
IDisposable 
loopSubscription ,
;, -
private 
ModalViewModel 
	ViewModel (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
	ModalPage 
( 
ContentView $
content% ,
,, -
string. 4
title5 :
,: ;
bool< @
topPanelVisibleA P
=Q R
trueS W
,W X
boolY ]
playerPanelVisible^ p
=q r
trues w
)w x
{ 	
InitializeComponent 
(  
)  !
;! "
On 
< 
iOS 
> 
( 
) 
. 
SetUseSafeArea $
($ %
true% )
)) *
;* +
var 
safeAreaInset 
= 
On  "
<" #
iOS# &
>& '
(' (
)( )
.) *
SafeAreaInsets* 8
(8 9
)9 :
;: ;
page 
. 
Padding 
= 
safeAreaInset (
;( )
BindingContext 
= 
	ViewModel &
=' (
new) ,
ModalViewModel- ;
(; <
	container< E
,E F
titleG L
,L M
topPanelVisibleN ]
)] ^
;^ _
	container 
. 
Children 
. 
Add "
(" #
content# *
)* +
;+ ,
	Appearing!! 
+=!! 
PageAppearing!! &
;!!& '
Disappearing"" 
+="" 
PageDisappearing"" ,
;"", -
playerPanel$$ 
.$$ 
	IsVisible$$ !
=$$" #
playerPanelVisible$$$ 6
;$$6 7
	ViewModel%% 
.%% 
OnPropertyChanged%% '
(%%' (
(%%( )
)%%) *
=>%%+ -
	ViewModel%%. 7
.%%7 8!
DownloadButtonVisible%%8 M
)%%M N
;%%N O
}&& 	
private)) 
void)) 
PageDisappearing)) %
())% &
object))& ,
sender))- 3
,))3 4
	EventArgs))5 >
e))? @
)))@ A
{** 	
	ViewModel++ 
?++ 
.++ 
Disappearing++ #
(++# $
)++$ %
;++% &
loopSubscription,, 
?,, 
.,, 
Dispose,, %
(,,% &
),,& '
;,,' (
loopSubscription-- 
=-- 
null-- #
;--# $
}.. 	
private00 
void00 
PageAppearing00 "
(00" #
object00# )
sender00* 0
,000 1
	EventArgs002 ;
e00< =
)00= >
{11 	
var22 
src22 
=22 
System22 
.22 
Reactive22 %
.22% &
Linq22& *
.22* +

Observable22+ 5
.225 6
Timer226 ;
(22; <
TimeSpan22< D
.22D E
Zero22E I
,22I J
TimeSpan22K S
.22S T
FromMilliseconds22T d
(22d e
$num22e h
)22h i
)22i j
.22j k
	Timestamp22k t
(22t u
)22u v
;22v w
loopSubscription33 
=33 
src33 "
.33" #
	Subscribe33# ,
(33, -
time33- 1
=>332 4
Tick335 9
(339 :
)33: ;
)33; <
;33< =
	ViewModel44 
?44 
.44 
	Appearing44  
(44  !
)44! "
;44" #
}55 	
private77 
void77 
Tick77 
(77 
)77 
{88 	
if99 
(99 
playerPanel99 
!=99 
null99 #
)99# $
{:: 
Device;; 
.;; #
BeginInvokeOnMainThread;; .
(;;. /
(;;/ 0
);;0 1
=>;;2 4
playerPanel;;5 @
.;;@ A
	IsVisible;;A J
=;;K L

GlobalData;;M W
.;;W X
Current;;X _
.;;_ `
MediaSource;;` k
!=;;l n
null;;o s
);;s t
;;;t u
playerPanel<< 
?<< 
.<< 
Tick<< !
(<<! "
)<<" #
;<<# $
}== 
	ViewModel?? 
??? 
.?? 
Tick?? 
(?? 
)?? 
;?? 
}@@ 	
publicBB 
voidBB 
BlockBB 
(BB 
)BB 
{CC 	
blockerDD 
.DD 
	IsVisibleDD 
=DD 
trueDD  $
;DD$ %
}EE 	
publicGG 
voidGG 
UnblockGG 
(GG 
)GG 
{HH 	
blockerII 
.II 
	IsVisibleII 
=II 
falseII  %
;II% &
}JJ 	
publicLL 
boolLL 
	IsBlockedLL 
(LL 
)LL 
{MM 	
returnNN 
blockerNN 
.NN 
	IsVisibleNN $
;NN$ %
}OO 	
publicQQ 
TypeQQ 
GetContentTypeQQ "
(QQ" #
)QQ# $
{RR 	
returnSS 
	containerSS 
.SS 
ChildrenSS %
.SS% &
CountSS& +
==SS, .
$numSS/ 0
?SS1 2
nullSS3 7
:SS8 9
	containerSS: C
.SSC D
ChildrenSSD L
[SSL M
$numSSM N
]SSN O
.SSO P
GetTypeSSP W
(SSW X
)SSX Y
;SSY Z
}TT 	
}VV 
}WW î0
AD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\NormalPage.xaml.cs
	namespace

 	
Newtone


 
.

 
Mobile

 
.

 
UI

 
.

 
Views

 !
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 

NormalPage #
:$ %
ContentPage& 1
,1 2 
INavigationContainer3 G
{ 
private 
NormalViewModel 
	ViewModel  )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 

NormalPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
On 
< 
iOS 
> 
( 
) 
. 
SetUseSafeArea $
($ %
true% )
)) *
;* +
var 
safeAreaInset 
= 
On  "
<" #
iOS# &
>& '
(' (
)( )
.) *
SafeAreaInsets* 8
(8 9
)9 :
;: ;
page 
. 
Padding 
= 
safeAreaInset (
;( )
BindingContext 
= 
	ViewModel &
=' (
new) ,
NormalViewModel- <
(< =
	container= F
,F G
playerPanelH S
,S T
searchEntryU `
)` a
;a b
Global 
. 
NavigationInstance %
=& '
new( +
NavigationWrapper, =
(= >
this> B
.B C

NavigationC M
)M N
;N O
Global 
. 
Page 
= 
this 
; 
	Appearing 
+= 
PageAppearing &
;& '
Disappearing 
+= 
PageDisappearing ,
;, -
} 	
public!! 
void!! 
Block!! 
(!! 
)!! 
{"" 	
blocker## 
.## 
	IsVisible## 
=## 
true##  $
;##$ %
}$$ 	
public&& 
void&& 
Unblock&& 
(&& 
)&& 
{'' 	
blocker(( 
.(( 
	IsVisible(( 
=(( 
false((  %
;((% &
})) 	
public** 
bool** 
	IsBlocked** 
(** 
)** 
{++ 	
return,, 
blocker,, 
.,, 
	IsVisible,, $
;,,$ %
}-- 	
private00 
void00 
PageDisappearing00 %
(00% &
object00& ,
sender00- 3
,003 4
	EventArgs005 >
e00? @
)00@ A
{11 	
	ViewModel22 
?22 
.22 
Disappearing22 #
(22# $
)22$ %
;22% &
}33 	
private55 
void55 
PageAppearing55 "
(55" #
object55# )
sender55* 0
,550 1
	EventArgs552 ;
e55< =
)55= >
{66 	
	ViewModel77 
?77 
.77 
	Appearing77  
(77  !
)77! "
;77" #
}88 	
private:: 
async:: 
void:: 
Entry_Completed:: *
(::* +
object::+ 1
sender::2 8
,::8 9
	EventArgs::: C
e::D E
)::E F
{;; 	
if<< 
(<< 
!<< 
string<< 
.<< 
IsNullOrEmpty<< %
(<<% &
	ViewModel<<& /
?<</ 0
.<<0 1
	EntryText<<1 :
)<<: ;
)<<; <
{== 
await>> 
Global>> 
.>> 
NavigationInstance>> /
.>>/ 0
PushModalAsync>>0 >
(>>> ?
new>>? B
	ModalPage>>C L
(>>L M
new>>M P
SearchResultPage>>Q a
(>>a b
	ViewModel>>b k
?>>k l
.>>l m
	EntryText>>m v
)>>v w
,>>w x
	ViewModel	>>y 
?
>> 
.
>> 
	EntryText
>> 
)
>> 
)
>> 
;
>> 
}?? 
}@@ 	
privateAA 
voidAA 
Entry_FocusedAA "
(AA" #
objectAA# )
senderAA* 0
,AA0 1
FocusEventArgsAA2 @
eAAA B
)AAB C
{BB 	
	ViewModelCC 
.CC $
SearchSuggestionsVisibleCC .
=CC/ 0
trueCC1 5
;CC5 6
	ViewModelDD 
?DD 
.DD 
RefreshSuggestionDD (
(DD( )
)DD) *
;DD* +
}EE 	
privateGG 
voidGG 
Entry_UnfocusedGG $
(GG$ %
objectGG% +
senderGG, 2
,GG2 3
FocusEventArgsGG4 B
eGGC D
)GGD E
{HH 	
	ViewModelII 
.II $
SearchSuggestionsVisibleII .
=II/ 0
falseII1 6
;II6 7
}JJ 	
privateLL 
voidLL 
Entry_TextChangedLL &
(LL& '
objectLL' -
senderLL. 4
,LL4 5 
TextChangedEventArgsLL6 J
eLLK L
)LLL M
{MM 	
	ViewModelNN 
?NN 
.NN 
RefreshSuggestionNN (
(NN( )
)NN) *
;NN* +
}OO 	
privateQQ 
voidQQ '
SuggestionList_ItemSelectedQQ 0
(QQ0 1
objectQQ1 7
senderQQ8 >
,QQ> ?(
SelectedItemChangedEventArgsQQ@ \
eQQ] ^
)QQ^ _
{RR 	
	ViewModelSS 
?SS 
.SS #
SuggestionItem_SelectedSS .
(SS. /
senderSS/ 5
,SS5 6
eSS7 8
)SS8 9
;SS9 :
}TT 	
}VV 
}WW è
ED:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\PermissionPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
PermissionPage '
:( )
ContentPage* 5
{ 
public

 
PermissionPage

 
(

 
)

 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
} 
} t
CD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\PlaylistPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
PlaylistPage %
:& '
ContentView( 3
,3 4
IVisibleContent5 D
,D E
ITimerContentF S
{ 
private 
static 
IList 
< 
View !
>! "
generatedChildrens# 5
;5 6
private 
bool 
isInitializing #
=$ %
false& +
;+ ,
public 
PlaylistPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
Init 
( 
) 
; 
} 	
public 
void 
Init 
( 
) 
{ 	
isInitializing 
= 
true !
;! "
if   
(   
generatedChildrens   "
==  # %
null  & *
)  * +
{!! 
List"" 
<"" 
string"" 
>"" 

beforeSort"" '
=""( )
new""* -
List"". 2
<""2 3
string""3 9
>""9 :
("": ;
)""; <
;""< =
foreach$$ 
($$ 
string$$ 
playlist$$  (
in$$) +

GlobalData$$, 6
.$$6 7
Current$$7 >
.$$> ?
	Playlists$$? H
.$$H I
Keys$$I M
.$$M N
ToList$$N T
($$T U
)$$U V
)$$V W
{%% 

beforeSort&& 
.&& 
Add&& "
(&&" #
playlist&&# +
)&&+ ,
;&&, -
}'' 
List)) 
<)) 
string)) 
>)) 
	afterSort)) &
=))' (

beforeSort))) 3
.))3 4
OrderBy))4 ;
()); <
o))< =
=>))> @
o))A B
)))B C
.))C D
ToList))D J
())J K
)))K L
;))L M
generatedChildrens++ "
=++# $
new++% (
List++) -
<++- .
View++. 2
>++2 3
(++3 4
)++4 5
;++5 6
int,, 
pos,, 
=,, 
$num,, 
;,, 
string-- 
model0-- 
=-- 
null--  $
;--$ %
foreach// 
(// 
string// 
playlist//  (
in//) +
	afterSort//, 5
)//5 6
{00 
if11 
(11 
pos11 
==11 
$num11  
)11  !
{22 
model033 
=33  
playlist33! )
;33) *
pos44 
=44 
$num44 
;44  
}55 
else66 
{77 
Xamarin88 
.88  
Forms88  %
.88% &
RelativeLayout88& 4
layout885 ;
=88< =
new88> A
Xamarin88B I
.88I J
Forms88J O
.88O P
RelativeLayout88P ^
(88^ _
)88_ `
;88` a
layout99 
.99 
Children99 '
.99' (
Add99( +
(99+ ,
new99, /
PlaylistGridItem990 @
(99@ A
this99A E
,99E F
model099G M
)99M N
,99N O
null99P T
,99T U
null99V Z
,99Z [

Constraint99\ f
.99f g
RelativeToParent99g w
(99w x
parent99x ~
=>	99 
parent
99 
.
99 
Width
99 
*
99 
$num
99 
)
99 
,
99 

Constraint
99 ¡
.
99¡ ¢
Constant
99¢ ª
(
99ª «
$num
99« ®
)
99® ¯
)
99¯ °
;
99° ±
layout:: 
.:: 
Children:: '
.::' (
Add::( +
(::+ ,
new::, /
PlaylistGridItem::0 @
(::@ A
this::A E
,::E F
playlist::G O
)::O P
,::P Q

Constraint::R \
.::\ ]
RelativeToParent::] m
(::m n
parent::n t
=>::u w
parent::x ~
.::~ 
Width	:: 
*
:: 
$num
:: 
)
:: 
,
:: 
null
:: 
,
:: 

Constraint
:: 
.
:: 
RelativeToParent
:: ®
(
::® ¯
parent
::¯ µ
=>
::¶ ¸
parent
::¹ ¿
.
::¿ À
Width
::À Å
*
::Æ Ç
$num
::È Ë
)
::Ë Ì
,
::Ì Í

Constraint
::Î Ø
.
::Ø Ù
Constant
::Ù á
(
::á â
$num
::â å
)
::å æ
)
::æ ç
;
::ç è
generatedChildrens<< *
.<<* +
Add<<+ .
(<<. /
layout<</ 5
)<<5 6
;<<6 7
pos== 
=== 
$num== 
;==  
}>> 
}?? 
ifAA 
(AA 
posAA 
==AA 
$numAA 
)AA 
{BB 
XamarinCC 
.CC 
FormsCC !
.CC! "
RelativeLayoutCC" 0
layoutCC1 7
=CC8 9
newCC: =
XamarinCC> E
.CCE F
FormsCCF K
.CCK L
RelativeLayoutCCL Z
(CCZ [
)CC[ \
;CC\ ]
layoutDD 
.DD 
ChildrenDD #
.DD# $
AddDD$ '
(DD' (
newDD( +
PlaylistGridItemDD, <
(DD< =
thisDD= A
,DDA B
model0DDC I
)DDI J
,DDJ K
nullDDL P
,DDP Q
nullDDR V
,DDV W

ConstraintDDX b
.DDb c
RelativeToParentDDc s
(DDs t
parentDDt z
=>DD{ }
parent	DD~ 
.
DD 
Width
DD 
)
DD 
,
DD 

Constraint
DD 
.
DD 
Constant
DD  
(
DD  ¡
$num
DD¡ ¤
)
DD¤ ¥
)
DD¥ ¦
;
DD¦ §
generatedChildrensEE &
.EE& '
AddEE' *
(EE* +
layoutEE+ 1
)EE1 2
;EE2 3
}FF 
GenerateRecomendedHH "
(HH" #
)HH# $
;HH$ %
DeviceJJ 
.JJ #
BeginInvokeOnMainThreadJJ .
(JJ. /
(JJ/ 0
)JJ0 1
=>JJ2 4
{KK 
	trackGridLL 
.LL 
ChildrenLL &
.LL& '
ClearLL' ,
(LL, -
)LL- .
;LL. /
foreachMM 
(MM 
varMM  
itemMM! %
inMM& (
generatedChildrensMM) ;
.MM; <
ToListMM< B
(MMB C
)MMC D
)MMD E
{NN 
	trackGridOO !
.OO! "
ChildrenOO" *
.OO* +
AddOO+ .
(OO. /
itemOO/ 3
)OO3 4
;OO4 5
}PP 
}QQ 
)QQ 
;QQ 
}RR 
elseSS 
{TT 
ifUU 
(UU 
	trackGridUU 
.UU 
ChildrenUU &
.UU& '
CountUU' ,
==UU- /
$numUU0 1
&&UU2 4
generatedChildrensUU5 G
?UUG H
.UUH I
CountUUI N
>UUO P
$numUUQ R
)UUR S
{VV 
DeviceWW 
.WW #
BeginInvokeOnMainThreadWW 2
(WW2 3
(WW3 4
)WW4 5
=>WW6 8
generatedChildrensWW9 K
.WWK L
ForEachWWL S
(WWS T
	trackGridWWT ]
.WW] ^
ChildrenWW^ f
.WWf g
AddWWg j
)WWj k
)WWk l
;WWl m
}XX 
}YY 
isInitializingZZ 
=ZZ 
falseZZ "
;ZZ" #
}[[ 	
public\\ 
void\\ 
	Appearing\\ 
(\\ 
)\\ 
{]] 	
}__ 	
publicaa 
voidaa 
Disappearingaa  
(aa  !
)aa! "
{bb 	
}dd 	
publicff 
voidff 
Tickff 
(ff 
)ff 
{gg 	
ifhh 
(hh 

GlobalDatahh 
.hh 
Currenthh "
.hh" # 
PlaylistsNeedRefreshhh# 7
&&hh8 :
!hh; <
isInitializinghh< J
&&hhK M
GlobalhhN T
.hhT U
LoadedhhU [
)hh[ \
{ii 
ifjj 
(jj 
generatedChildrensjj &
!=jj' )
nulljj* .
)jj. /
generatedChildrenskk &
=kk' (
nullkk) -
;kk- .
Initmm 
(mm 
)mm 
;mm 

GlobalDatann 
.nn 
Currentnn "
.nn" # 
PlaylistsNeedRefreshnn# 7
=nn8 9
falsenn: ?
;nn? @
}oo 
}pp 	
privatess 
voidss 
GenerateRecomendedss '
(ss' (
)ss( )
{tt 	
ifuu 
(uu 
Globaluu 
.uu 
Applicationuu "
.uu" #
HasInternetuu# .
(uu. /
)uu/ 0
)uu0 1
{vv 

GlobalDataww 
.ww 
Currentww "
.ww" #
RecomendedPlaylistsww# 6
=ww7 8
RecomendedPlaylistsww9 L
.wwL M"
GetRecomendedPlaylistswwM c
(wwc d
)wwd e
;wwe f
}xx 
intzz 
poszz 
=zz 
$numzz 
;zz 
string{{ 
model0{{ 
={{ 
null{{  
;{{  !
foreach}} 
(}} 
var}} 
key}} 
in}} 

GlobalData}}  *
.}}* +
Current}}+ 2
.}}2 3
RecomendedPlaylists}}3 F
.}}F G
Keys}}G K
)}}K L
{~~ 
if 
( 
pos 
== 
$num 
) 
{
 
model0
 
=
 

GlobalData
 '
.
' (
Current
( /
.
/ 0!
RecomendedPlaylists
0 C
[
C D
key
D G
]
G H
;
H I
pos
 
=
 
$num
 
;
 
}
 
else
 
{
 
Xamarin
 
.
 
Forms
 !
.
! "
RelativeLayout
" 0
layout
1 7
=
8 9
new
: =
Xamarin
> E
.
E F
Forms
F K
.
K L
RelativeLayout
L Z
(
Z [
)
[ \
;
\ ]
layout
 
.
 
Children
 #
.
# $
Add
$ '
(
' (
new
( +!
PlaylistWebGridItem
, ?
(
? @
this
@ D
,
D E
model0
F L
)
L M
,
M N
null
O S
,
S T
null
U Y
,
Y Z

Constraint
[ e
.
e f
RelativeToParent
f v
(
v w
parent
w }
=>~ 
parent 
. 
Width 
* 
$num 
) 
, 

Constraint  
.  ¡
Constant¡ ©
(© ª
$numª ­
)­ ®
)® ¯
;¯ °
layout
 
.
 
Children
 #
.
# $
Add
$ '
(
' (
new
( +!
PlaylistWebGridItem
, ?
(
? @
this
@ D
,
D E

GlobalData
F P
.
P Q
Current
Q X
.
X Y!
RecomendedPlaylists
Y l
[
l m
key
m p
]
p q
)
q r
,
r s

Constraint
t ~
.
~ 
RelativeToParent 
( 
parent 
=> 
parent  
.  ¡
Width¡ ¦
*§ ¨
$num© ¬
)¬ ­
,­ ®
null¯ ³
,³ ´

Constraintµ ¿
.¿ À 
RelativeToParentÀ Ð
(Ð Ñ
parentÑ ×
=>Ø Ú
parentÛ á
.á â
Widthâ ç
*è é
$numê í
)í î
,î ï

Constraintð ú
.ú û
Constantû 
( 
$num 
) 
) 
;  
generatedChildrens
 &
.
& '
Add
' *
(
* +
layout
+ 1
)
1 2
;
2 3
pos
 
=
 
$num
 
;
 
}
 
}
 
if
 
(
 
pos
 
==
 
$num
 
)
 
{
 
Xamarin
 
.
 
Forms
 
.
 
RelativeLayout
 ,
layout
- 3
=
4 5
new
6 9
Xamarin
: A
.
A B
Forms
B G
.
G H
RelativeLayout
H V
(
V W
)
W X
;
X Y
layout
 
.
 
Children
 
.
  
Add
  #
(
# $
new
$ '!
PlaylistWebGridItem
( ;
(
; <
this
< @
,
@ A
model0
B H
)
H I
,
I J
null
K O
,
O P
null
Q U
,
U V

Constraint
W a
.
a b
RelativeToParent
b r
(
r s
parent
s y
=>
z |
parent} 
. 
Width 
) 
, 

Constraint 
. 
Constant 
(  
$num  £
)£ ¤
)¤ ¥
;¥ ¦ 
generatedChildrens
 "
.
" #
Add
# &
(
& '
layout
' -
)
- .
;
. /
}
 
}
 	
}
 
} 
GD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\SearchResultPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public		 

partial		 
class		 
SearchResultPage		 )
:		* +
ContentView		, 7
{

 
private !
SearchResultViewModel %
	ViewModel& /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
SearchResultPage 
(  
string  &
searchedText' 3
)3 4
{ 	
InitializeComponent 
(  
)  !
;! "
BindingContext 
= 
	ViewModel &
=' (
new) ,!
SearchResultViewModel- B
(B C
searchedTextC O
)O P
;P Q
} 	
private 
async 
void '
SearchListView_ItemSelected 6
(6 7
object7 =
sender> D
,D E(
SelectedItemChangedEventArgsF b
ec d
)d e
{ 	
await 
	ViewModel 
? 
. 
Item_Selected *
(* +
sender+ 1
,1 2
e3 4
)4 5
;5 6
} 	
private 
void (
SearchListView_ItemAppearing 1
(1 2
object2 8
sender9 ?
,? @#
ItemVisibilityEventArgsA X
eY Z
)Z [
{ 	
	ViewModel 
? 
. (
SearchListView_ItemAppearing 3
(3 4
e4 5
.5 6
	ItemIndex6 ?
)? @
;@ A
} 	
}!! 
}"" Ú
CD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\SettingsPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
SettingsPage %
:& '
ContentView( 3
{		 
private 
SettingsViewModel !
	ViewModel" +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
SettingsPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
	ViewModel 
= 
BindingContext &
as' )
SettingsViewModel* ;
;; <
} 	
private 
async 
void %
SettingsList_ItemSelected 4
(4 5
object5 ;
sender< B
,B C(
SelectedItemChangedEventArgsD `
ea b
)b c
{ 	
await 
	ViewModel 
? 
. 
Item_Selected *
(* +
sender+ 1
,1 2
e3 4
)4 5
;5 6
} 	
} 
} ±
AD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TracksPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
{ 
[		 
XamlCompilation		 
(		 "
XamlCompilationOptions		 +
.		+ ,
Compile		, 3
)		3 4
]		4 5
public

 

partial

 
class

 

TracksPage

 #
:

$ %
ContentView

& 1
,

1 2
ITimerContent

3 @
{ 
private 
TrackViewModel 
	ViewModel (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 

TracksPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
	ViewModel 
= 
BindingContext &
as' )
TrackViewModel* 8
;8 9
} 	
public 
void 
Tick 
( 
) 
{ 	
	ViewModel 
? 
. 
Tick 
( 
) 
; 
} 	
private 
void &
TrackListView_ItemSelected /
(/ 0
object0 6
sender7 =
,= >(
SelectedItemChangedEventArgs? [
e\ ]
)] ^
{ 	
	ViewModel   
?   
.   
Track_Selected   %
(  % &
sender  & ,
,  , -
e  . /
)  / 0
;  0 1
}!! 	
public## 
void## 
	Appearing## 
(## 
)## 
{$$ 	
}&& 	
public(( 
void(( 
Disappearing((  
(((  !
)((! "
{)) 	
}++ 	
}-- 
}.. Ó
DD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\ArtistPage.xaml.cs
	namespace		 	
Newtone		
 
.		 
Mobile		 
.		 
UI		 
.		 
Views		 !
.		! "
TV		" $
{

 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 

ArtistPage #
:$ %
ContentView& 1
,1 2
ITimerContent3 @
,@ A
INFocusContentB P
{ 
public 
INFocusElement 

TopElement (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
INFocusElement 
BottomElement +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 

ArtistPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "

TopElement 
= 

artistList #
;# $
BottomElement 
= 

artistList &
;& '
} 	
public 
void 
	Appearing 
( 
) 
{ 	
} 	
public   
void   
Disappearing    
(    !
)  ! "
{!! 	
}## 	
public%% 
void%% 
FocusAction%% 
(%%  
)%%  !
{&& 	
throw'' 
new'' 
System'' 
.'' #
NotImplementedException'' 4
(''4 5
)''5 6
;''6 7
}(( 	
public** 
void** 
	FocusDown** 
(** 
)** 
{++ 	
throw,, 
new,, 
System,, 
.,, #
NotImplementedException,, 4
(,,4 5
),,5 6
;,,6 7
}-- 	
public// 
void// 
	FocusLeft// 
(// 
)// 
{00 	
throw11 
new11 
System11 
.11 #
NotImplementedException11 4
(114 5
)115 6
;116 7
}22 	
public44 
void44 

FocusRight44 
(44 
)44  
{55 	
throw66 
new66 
System66 
.66 #
NotImplementedException66 4
(664 5
)665 6
;666 7
}77 	
public99 
void99 
FocusUp99 
(99 
)99 
{:: 	
throw;; 
new;; 
System;; 
.;; #
NotImplementedException;; 4
(;;4 5
);;5 6
;;;6 7
}<< 	
public>> 
void>> 
Tick>> 
(>> 
)>> 
{?? 	
if@@ 
(@@ 

GlobalData@@ 
.@@ 
Current@@ "
.@@" #
ArtistsNeedRefresh@@# 5
&&@@6 8
!@@9 :
(@@: ;
BindingContext@@; I
as@@J L
ArtistViewModel@@M \
)@@\ ]
.@@] ^
IsInitializing@@^ l
&&@@m o
Global@@p v
.@@v w
Loaded@@w }
)@@} ~
{AA 
DeviceBB 
.BB #
BeginInvokeOnMainThreadBB .
(BB. /
(BB/ 0
BindingContextBB0 >
asBB? A
ArtistViewModelBBB Q
)BBQ R
.BBR S

InitializeBBS ]
)BB] ^
;BB^ _

GlobalDataCC 
.CC 
CurrentCC "
.CC" #
ArtistsNeedRefreshCC# 5
=CC6 7
falseCC8 =
;CC= >
}DD 
}EE 	
}GG 
}HH 
MD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\CurrentPlaylistPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public		 

partial		 
class		 
CurrentPlaylistPage		 ,
:		- .
ContentView		/ :
,		: ;
ITimerContent		< I
{

 
private 
readonly $
CurrentPlaylistViewModel 1
	ViewModel2 ;
;; <
public 
CurrentPlaylistPage "
(" #
)# $
{ 	
InitializeComponent 
(  
)  !
;! "
	ViewModel 
= 
BindingContext &
as' )$
CurrentPlaylistViewModel* B
;B C
} 	
public 
void 
	Appearing 
( 
) 
{ 	
} 	
public 
void 
Disappearing  
(  !
)! "
{ 	
} 	
public   
void   
Tick   
(   
)   
{!! 	
	ViewModel"" 
?"" 
."" 
Tick"" 
("" 
)"" 
;"" 
}$$ 	
}&& 
}'' ÿ
KD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\CurrentTracksPage.xaml.cs
	namespace

 	
Newtone


 
.

 
Mobile

 
.

 
UI

 
.

 
Views

 !
.

! "
TV

" $
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
CurrentTracksPage *
:+ ,
ContentView- 8
,8 9
ITimerContent: G
,G H
INFocusContentI W
{ 
private "
CurrentTracksViewModel &
	ViewModel' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
INFocusElement 

TopElement (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
INFocusElement 
BottomElement +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
CurrentTracksPage  
(  !
List! %
<% &
string& ,
>, -
tracks. 4
,4 5
string6 <
playlistName= I
)I J
{ 	
InitializeComponent 
(  
)  !
;! "

TopElement 
= 
currentList $
;$ %
BottomElement 
= 
currentList '
;' (
BindingContext 
= 
	ViewModel &
=' (
new) ,"
CurrentTracksViewModel- C
(C D
tracksD J
,J K
playlistNameL X
)X Y
;Y Z
currentList 
. 
Rerender  
(  !
)! "
;" #
} 	
public   
void   
Tick   
(   
)   
{!! 	
	ViewModel"" 
?"" 
."" 
Tick"" 
("" 
)"" 
;"" 
}$$ 	
public&& 
void&& 
	Appearing&& 
(&& 
)&& 
{'' 	
})) 	
public++ 
void++ 
Disappearing++  
(++  !
)++! "
{,, 	
}.. 	
public00 
void00 
	FocusLeft00 
(00 
)00 
{11 	
throw22 
new22 #
NotImplementedException22 -
(22- .
)22. /
;22/ 0
}33 	
public55 
void55 

FocusRight55 
(55 
)55  
{66 	
throw77 
new77 #
NotImplementedException77 -
(77- .
)77. /
;77/ 0
}88 	
public:: 
void:: 
FocusUp:: 
(:: 
):: 
{;; 	
throw<< 
new<< #
NotImplementedException<< -
(<<- .
)<<. /
;<</ 0
}== 	
public?? 
void?? 
	FocusDown?? 
(?? 
)?? 
{@@ 	
throwAA 
newAA #
NotImplementedExceptionAA -
(AA- .
)AA. /
;AA/ 0
}BB 	
publicDD 
voidDD 
FocusActionDD 
(DD  
)DD  !
{EE 	
throwFF 
newFF #
NotImplementedExceptionFF -
(FF- .
)FF. /
;FF/ 0
}GG 	
}II 
}JJ ç
LD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\Custom\PlayerPanel.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
.$ %
Custom% +
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
PlayerPanel $
:% &
ContentView' 2
,2 3
ITimerContent4 A
{ 
private  
PlayerPanelViewModel $
	ViewModel% .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
NImageButton 

PlayButton &
=>' )

playButton* 4
;4 5
public 
NImageButton 
ImageButton '
=>( *

trackImage+ 5
;5 6
public 
PlayerPanel 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
	ViewModel 
= 
BindingContext &
as' ) 
PlayerPanelViewModel* >
;> ?
backgroundImage 
. 
On 
< 
iOS "
>" #
(# $
)$ %
.% &
UseBlurEffect& 3
(3 4
BlurEffectStyle4 C
.C D
LightD I
)I J
;J K
} 	
public 
void 
Tick 
( 
) 
{ 	
	ViewModel   
?   
.   
Tick   
(   
)   
;   
}!! 	
public## 
void## 
	Appearing## 
(## 
)## 
{$$ 	
throw%% 
new%% #
NotImplementedException%% -
(%%- .
)%%. /
;%%/ 0
}&& 	
public(( 
void(( 
Disappearing((  
(((  !
)((! "
{)) 	
throw** 
new** #
NotImplementedException** -
(**- .
)**. /
;**/ 0
}++ 	
}-- 
}.. 
HD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\FirstStartPage.xaml.cs
	namespace

 	
Newtone


 
.

 
Mobile

 
.

 
UI

 
.

 
Views

 !
.

! "
TV

" $
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
FirstStartPage '
:( )
ContentPage* 5
{ 
public 
FirstStartPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
} 
} Þ!
HD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\FullScreenPage.xaml.cs
	namespace

 	
Newtone


 
.

 
Mobile

 
.

 
UI

 
.

 
Views

 !
.

! "
TV

" $
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
FullScreenPage '
:( )
ContentPage* 5
,5 6 
INavigationContainer7 K
{ 
private 
FullScreenViewModel #
	ViewModel$ -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
FullScreenPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
On 
< 
iOS 
> 
( 
) 
. 
SetUseSafeArea $
($ %
true% )
)) *
;* +
var 
safeAreaInset 
= 
On  "
<" #
iOS# &
>& '
(' (
)( )
.) *
SafeAreaInsets* 8
(8 9
)9 :
;: ;
Padding 
= 
safeAreaInset #
;# $
	ViewModel 
= 
BindingContext &
as' )
FullScreenViewModel* =
;= >
	Appearing 
+= 
PageAppearing &
;& '
Disappearing 
+= 
PageDisappearing ,
;, -
audioSlider 
. 
ValueNewChanged '
+=( *'
AudioSlider_ValueNewChanged+ F
;F G
	trackBlur 
. 
On 
< 
iOS 
> 
( 
) 
.  
UseBlurEffect  -
(- .
BlurEffectStyle. =
.= >
Light> C
)C D
;D E
} 	
private!! 
void!! '
AudioSlider_ValueNewChanged!! 0
(!!0 1
object!!1 7
sender!!8 >
,!!> ?
Views!!@ E
.!!E F
Custom!!F L
.!!L M
AudioSliderControl!!M _
.!!_ `
ValueChangedArgs!!` p
e!!q r
)!!r s
{"" 	
	ViewModel## 
?## 
.## '
AudioSlider_ValueNewChanged## 2
(##2 3
e##3 4
)##4 5
;##5 6
}$$ 	
private&& 
void&& 
PageDisappearing&& %
(&&% &
object&&& ,
sender&&- 3
,&&3 4
	EventArgs&&5 >
e&&? @
)&&@ A
{'' 	
	ViewModel(( 
?(( 
.(( 
Disappearing(( #
(((# $
)(($ %
;((% &
})) 	
private++ 
void++ 
PageAppearing++ "
(++" #
object++# )
sender++* 0
,++0 1
	EventArgs++2 ;
e++< =
)++= >
{,, 	
FocusContext-- 
.-- 

UnfocusAll-- #
(--# $
)--$ %
;--% &

playButton.. 
... 

IsNFocused.. !
=.." #
true..$ (
;..( )
	ViewModel// 
?// 
.// 
	Appearing//  
(//  !
)//! "
;//" #
}00 	
public22 
void22 
Block22 
(22 
)22 
{33 	
blocker44 
.44 
	IsVisible44 
=44 
true44  $
;44$ %
}55 	
public77 
void77 
Unblock77 
(77 
)77 
{88 	
blocker99 
.99 
	IsVisible99 
=99 
false99  %
;99% &
}:: 	
public<< 
bool<< 
	IsBlocked<< 
(<< 
)<< 
{== 	
return>> 
blocker>> 
.>> 
	IsVisible>> $
;>>$ %
}?? 	
}AA 
}BB 
LD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\LanguageSelectPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
LanguageSelectPage +
:, -
ContentPage. 9
{ 
public

 
LanguageSelectPage

 !
(

! "
)

" #
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
} 
} Ç@
CD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\ModalPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
	ModalPage "
:# $
ContentPage% 0
,0 1 
INavigationContainer2 F
{ 
private 
IDisposable 
loopSubscription ,
;, -
private 
ModalViewModel 
	ViewModel (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
	ModalPage 
( 
ContentView $
content% ,
,, -
string. 4
title5 :
,: ;
bool< @
topPanelVisibleA P
=Q R
trueS W
,W X
boolY ]
playerPanelVisible^ p
=q r
trues w
)w x
{ 	
InitializeComponent 
(  
)  !
;! "
On 
< 
iOS 
> 
( 
) 
. 
SetUseSafeArea $
($ %
true% )
)) *
;* +
var 
safeAreaInset 
= 
On  "
<" #
iOS# &
>& '
(' (
)( )
.) *
SafeAreaInsets* 8
(8 9
)9 :
;: ;
page 
. 
Padding 
= 
safeAreaInset (
;( )
BindingContext 
= 
	ViewModel &
=' (
new) ,
ModalViewModel- ;
(; <
	container< E
,E F
titleG L
,L M
topPanelVisibleN ]
)] ^
;^ _
	container!! 
.!! 
Children!! 
.!! 
Add!! "
(!!" #
content!!# *
)!!* +
;!!+ ,
	Appearing## 
+=## 
PageAppearing## &
;##& '
Disappearing$$ 
+=$$ 
PageDisappearing$$ ,
;$$, -
playerPanel&& 
.&& 
	IsVisible&& !
=&&" #
playerPanelVisible&&$ 6
;&&6 7
	ViewModel'' 
.'' 
OnPropertyChanged'' '
(''' (
(''( )
)'') *
=>''+ -
	ViewModel''. 7
.''7 8!
DownloadButtonVisible''8 M
)''M N
;''N O
PageAppearing(( 
((( 
null(( 
,(( 
	EventArgs((  )
.(() *
Empty((* /
)((/ 0
;((0 1
})) 	
private,, 
void,, 
PageDisappearing,, %
(,,% &
object,,& ,
sender,,- 3
,,,3 4
	EventArgs,,5 >
e,,? @
),,@ A
{-- 	
	ViewModel.. 
?.. 
... 
Disappearing.. #
(..# $
)..$ %
;..% &
loopSubscription// 
?// 
.// 
Dispose// %
(//% &
)//& '
;//' (
loopSubscription00 
=00 
null00 #
;00# $
}11 	
private33 
void33 
PageAppearing33 "
(33" #
object33# )
sender33* 0
,330 1
	EventArgs332 ;
e33< =
)33= >
{44 	
var55 
src55 
=55 
System55 
.55 
Reactive55 %
.55% &
Linq55& *
.55* +

Observable55+ 5
.555 6
Timer556 ;
(55; <
TimeSpan55< D
.55D E
Zero55E I
,55I J
TimeSpan55K S
.55S T
FromMilliseconds55T d
(55d e
$num55e h
)55h i
)55i j
.55j k
	Timestamp55k t
(55t u
)55u v
;55v w
loopSubscription66 
=66 
src66 "
.66" #
	Subscribe66# ,
(66, -
time66- 1
=>662 4
Tick665 9
(669 :
)66: ;
)66; <
;66< =
	ViewModel77 
?77 
.77 
	Appearing77  
(77  !
)77! "
;77" #
FocusContext88 
.88 

UnfocusAll88 #
(88# $
)88$ %
;88% &
if:: 
(:: 
	container:: 
.:: 
Children:: !
[::! "
$num::" #
]::# $
is::% '
DownloadPage::( 4
)::4 5
{;; 

backButton<< 
.<< 

IsNFocused<< %
=<<& '
true<<( ,
;<<, -
}== 
else>> 
{?? 

backButton@@ 
.@@ 
	IsVisible@@ $
=@@% &
false@@' ,
;@@, -
ifAA 
(AA 
	containerAA 
.AA 
ChildrenAA &
[AA& '
$numAA' (
]AA( )
isAA* ,
INFocusContentAA- ;
focusContentAA< H
)AAH I
{BB 
focusContentCC  
.CC  !

TopElementCC! +
.CC+ ,
NextFocusUpCC, 7
=CC8 9
nullCC: >
;CC> ?
focusContentDD  
.DD  !
BottomElementDD! .
.DD. /
NextFocusDownDD/ <
=DD= >
playerPanelDD? J
.DDJ K
ImageButtonDDK V
;DDV W
(EE 
playerPanelEE  
.EE  !
BindingContextEE! /
asEE0 2 
PlayerPanelViewModelEE3 G
)EEG H
.EEH I
NextFocusUpEEI T
=EEU V
focusContentEEW c
.EEc d
BottomElementEEd q
;EEq r
(FF 
playerPanelFF  
.FF  !
BindingContextFF! /
asFF0 2 
PlayerPanelViewModelFF3 G
)FFG H
.FFH I
NextFocusUp1FFI U
=FFV W
focusContentFFX d
.FFd e
BottomElementFFe r
;FFr s
focusContentGG  
.GG  !

TopElementGG! +
.GG+ ,

IsNFocusedGG, 6
=GG7 8
trueGG9 =
;GG= >
}HH 
}II 
}JJ 	
privateLL 
voidLL 
TickLL 
(LL 
)LL 
{MM 	
ifNN 
(NN 
playerPanelNN 
!=NN 
nullNN #
)NN# $
{OO 
playerPanelPP 
?PP 
.PP 
TickPP !
(PP! "
)PP" #
;PP# $
}QQ 
	ViewModelSS 
?SS 
.SS 
TickSS 
(SS 
)SS 
;SS 
}TT 	
publicVV 
voidVV 
BlockVV 
(VV 
)VV 
{WW 	
blockerXX 
.XX 
	IsVisibleXX 
=XX 
trueXX  $
;XX$ %
}YY 	
public[[ 
void[[ 
Unblock[[ 
([[ 
)[[ 
{\\ 	
blocker]] 
.]] 
	IsVisible]] 
=]] 
false]]  %
;]]% &
}^^ 	
public`` 
bool`` 
	IsBlocked`` 
(`` 
)`` 
{aa 	
returnbb 
blockerbb 
.bb 
	IsVisiblebb $
;bb$ %
}cc 	
publicee 
Typeee 
GetContentTypeee "
(ee" #
)ee# $
{ff 	
returngg 
	containergg 
.gg 
Childrengg %
.gg% &
Countgg& +
==gg, .
$numgg/ 0
?gg1 2
nullgg3 7
:gg8 9
	containergg: C
.ggC D
ChildrenggD L
[ggL M
$numggM N
]ggN O
.ggO P
GetTypeggP W
(ggW X
)ggX Y
;ggY Z
}hh 	
}jj 
}kk Æ=
DD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\NormalPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 

NormalPage #
:$ %
ContentPage& 1
{ 
private 
NormalViewModel 
	ViewModel  )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 

NormalPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
On 
< 
iOS 
> 
( 
) 
. 
SetUseSafeArea $
($ %
true% )
)) *
;* +
var 
safeAreaInset 
= 
On  "
<" #
iOS# &
>& '
(' (
)( )
.) *
SafeAreaInsets* 8
(8 9
)9 :
;: ;
page 
. 
Padding 
= 
safeAreaInset (
;( )
BindingContext 
= 
	ViewModel &
=' (
new) ,
NormalViewModel- <
(< =
	container= F
,F G
playerPanelH S
,S T
searchButtonU a
,a b
playerButtonc o
)o p
;p q
Global 
. 
NavigationInstance %
=& '
new( +
NavigationWrapper, =
(= >
this> B
.B C

NavigationC M
)M N
;N O
Global 
. 
Page 
= 
this 
; 
	Appearing 
+= 
PageAppearing &
;& '
Disappearing 
+= 
PageDisappearing ,
;, -
} 	
public"" 
void"" 
Block"" 
("" 
)"" 
{## 	
blocker$$ 
.$$ 
	IsVisible$$ 
=$$ 
true$$  $
;$$$ %
}%% 	
public'' 
void'' 
Unblock'' 
('' 
)'' 
{(( 	
blocker)) 
.)) 
	IsVisible)) 
=)) 
false))  %
;))% &
}** 	
public++ 
bool++ 
	IsBlocked++ 
(++ 
)++ 
{,, 	
return-- 
blocker-- 
.-- 
	IsVisible-- $
;--$ %
}.. 	
private11 
void11 
PageDisappearing11 %
(11% &
object11& ,
sender11- 3
,113 4
	EventArgs115 >
e11? @
)11@ A
{22 	
	ViewModel33 
?33 
.33 
Disappearing33 #
(33# $
)33$ %
;33% &
}44 	
private66 
void66 
PageAppearing66 "
(66" #
object66# )
sender66* 0
,660 1
	EventArgs662 ;
e66< =
)66= >
{77 	
	ViewModel88 
?88 
.88 
	Appearing88  
(88  !
)88! "
;88" #
FocusContext99 
.99 

UnfocusAll99 #
(99# $
)99$ %
;99% &
artistButton:: 
.:: 

IsNFocused:: #
=::$ %
true::& *
;::* +
(;; 
this;; 
.;; 
playerPanel;; 
.;; 
BindingContext;; ,
as;;- / 
PlayerPanelViewModel;;0 D
);;D E
.;;E F
NextFocusUp;;F Q
=;;R S
playerButton;;T `
;;;` a
(<< 
this<< 
.<< 
playerPanel<< 
.<< 
BindingContext<< ,
as<<- / 
PlayerPanelViewModel<<0 D
)<<D E
.<<E F
NextFocusUp1<<F R
=<<S T
playlistButton<<U c
;<<c d
playerButton>> 
.>> 
NextFocusDown>> &
=>>' (
this>>) -
.>>- .
playerPanel>>. 9
.>>9 :
ImageButton>>: E
;>>E F
trackButton?? 
.?? 
NextFocusDown?? %
=??& '
this??( ,
.??, -
playerPanel??- 8
.??8 9
ImageButton??9 D
;??D E
artistButton@@ 
.@@ 
NextFocusDown@@ &
=@@' (
this@@) -
.@@- .
playerPanel@@. 9
.@@9 :

PlayButton@@: D
;@@D E
playlistButtonAA 
.AA 
NextFocusDownAA (
=AA) *
thisAA+ /
.AA/ 0
playerPanelAA0 ;
.AA; <

PlayButtonAA< F
;AAF G
}BB 	
privateDD 
asyncDD 
voidDD 
Entry_CompletedDD *
(DD* +
objectDD+ 1
senderDD2 8
,DD8 9
	EventArgsDD: C
eDDD E
)DDE F
{EE 	
ifFF 
(FF 
!FF 
stringFF 
.FF 
IsNullOrEmptyFF %
(FF% &
	ViewModelFF& /
?FF/ 0
.FF0 1
	EntryTextFF1 :
)FF: ;
)FF; <
{GG 
awaitHH 
GlobalHH 
.HH 
NavigationInstanceHH /
.HH/ 0
PushModalAsyncHH0 >
(HH> ?
newHH? B
	ModalPageHHC L
(HHL M
newHHM P
ViewsHHQ V
.HHV W
SearchResultPageHHW g
(HHg h
	ViewModelHHh q
?HHq r
.HHr s
	EntryTextHHs |
)HH| }
,HH} ~
	ViewModel	HH 
?
HH 
.
HH 
	EntryText
HH 
)
HH 
)
HH 
;
HH 
}II 
}JJ 	
privateKK 
voidKK 
Entry_FocusedKK "
(KK" #
objectKK# )
senderKK* 0
,KK0 1
FocusEventArgsKK2 @
eKKA B
)KKB C
{LL 	
	ViewModelMM 
.MM $
SearchSuggestionsVisibleMM .
=MM/ 0
trueMM1 5
;MM5 6
	ViewModelNN 
?NN 
.NN 
RefreshSuggestionNN (
(NN( )
)NN) *
;NN* +
}OO 	
privateQQ 
voidQQ 
Entry_UnfocusedQQ $
(QQ$ %
objectQQ% +
senderQQ, 2
,QQ2 3
FocusEventArgsQQ4 B
eQQC D
)QQD E
{RR 	
	ViewModelSS 
.SS $
SearchSuggestionsVisibleSS .
=SS/ 0
falseSS1 6
;SS6 7
}TT 	
privateVV 
voidVV 
Entry_TextChangedVV &
(VV& '
objectVV' -
senderVV. 4
,VV4 5 
TextChangedEventArgsVV6 J
eVVK L
)VVL M
{WW 	
	ViewModelXX 
?XX 
.XX 
RefreshSuggestionXX (
(XX( )
)XX) *
;XX* +
}YY 	
private[[ 
void[[ '
SuggestionList_ItemSelected[[ 0
([[0 1
object[[1 7
sender[[8 >
,[[> ?(
SelectedItemChangedEventArgs[[@ \
e[[] ^
)[[^ _
{\\ 	
	ViewModel]] 
?]] 
.]] #
SuggestionItem_Selected]] .
(]]. /
sender]]/ 5
,]]5 6
e]]7 8
)]]8 9
;]]9 :
}^^ 	
}`` 
}aa 
HD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\PermissionPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
PermissionPage '
:( )
ContentPage* 5
{ 
public

 
PermissionPage

 
(

 
)

 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
} 
} è
FD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\PlaylistPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
{		 
[

 
XamlCompilation

 
(

 "
XamlCompilationOptions

 +
.

+ ,
Compile

, 3
)

3 4
]

4 5
public 

partial 
class 
PlaylistPage %
:& '
ContentView( 3
,3 4
ITimerContent5 B
,B C
INFocusContentD R
{ 
public 
INFocusElement 

TopElement (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
INFocusElement 
BottomElement +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
PlaylistPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "

TopElement 
= 
playlistList %
;% &
BottomElement 
= 
playlistList (
;( )
} 	
public 
void 
	Appearing 
( 
) 
{ 	
} 	
public 
void 
Disappearing  
(  !
)! "
{   	
}"" 	
public$$ 
void$$ 
FocusAction$$ 
($$  
)$$  !
{%% 	
throw&& 
new&& 
System&& 
.&& #
NotImplementedException&& 4
(&&4 5
)&&5 6
;&&6 7
}'' 	
public)) 
void)) 
	FocusDown)) 
()) 
))) 
{** 	
throw++ 
new++ 
System++ 
.++ #
NotImplementedException++ 4
(++4 5
)++5 6
;++6 7
},, 	
public.. 
void.. 
	FocusLeft.. 
(.. 
).. 
{// 	
throw00 
new00 
System00 
.00 #
NotImplementedException00 4
(004 5
)005 6
;006 7
}11 	
public33 
void33 

FocusRight33 
(33 
)33  
{44 	
throw55 
new55 
System55 
.55 #
NotImplementedException55 4
(554 5
)555 6
;556 7
}66 	
public88 
void88 
FocusUp88 
(88 
)88 
{99 	
throw:: 
new:: 
System:: 
.:: #
NotImplementedException:: 4
(::4 5
)::5 6
;::6 7
};; 	
public== 
void== 
Tick== 
(== 
)== 
{>> 	
if?? 
(?? 

GlobalData?? 
.?? 
Current?? "
.??" # 
PlaylistsNeedRefresh??# 7
&&??8 :
!??; <
(??< =
BindingContext??= K
as??L N
PlaylistViewModel??O `
)??` a
.??a b
IsInitializing??b p
&&??q s
Global??t z
.??z {
Loaded	??{ 
)
?? 
{@@ 
DeviceAA 
.AA #
BeginInvokeOnMainThreadAA .
(AA. /
(AA/ 0
BindingContextAA0 >
asAA? A
PlaylistViewModelAAB S
)AAS T
.AAT U

InitializeAAU _
)AA_ `
;AA` a

GlobalDataBB 
.BB 
CurrentBB "
.BB" # 
PlaylistsNeedRefreshBB# 7
=BB8 9
falseBB: ?
;BB? @
}CC 
}DD 	
}FF 
}GG û
DD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\SearchPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public		 

partial		 
class		 

SearchPage		 #
:		$ %
ContentView		& 1
,		1 2
INFocusContent		3 A
{

 
public 
INFocusElement 

TopElement (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
INFocusElement 
BottomElement +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
private 
SearchViewModel 
	ViewModel  )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 

SearchPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "

TopElement 
= 
screenKeyboard '
;' (
BottomElement 
= 
screenKeyboard *
;* +
	ViewModel 
= 
BindingContext &
as' )
SearchViewModel* 9
;9 :,
 ScreenKeyboard_OnKeyboardClicked ,
(, -
$str- /
)/ 0
;0 1
} 	
private 
async 
void ,
 ScreenKeyboard_OnKeyboardClicked ;
(; <
string< B
clickedButtonC P
)P Q
{ 	
if 
( 
clickedButton 
== 
NScreenKeyboard  /
./ 0
EnterButton0 ;
); <
{ 
if 
( 
! 
string 
. 
IsNullOrEmpty )
() *
	ViewModel* 3
.3 4

SearchText4 >
)> ?
)? @
{ 
await 
Global  
.  !
NavigationInstance! 3
.3 4
PushModalAsync4 B
(B C
newC F
	ModalPageG P
(P Q
newQ T
SearchResultPageU e
(e f
	ViewModelf o
.o p

SearchTextp z
)z {
,{ |
	ViewModel	} 
.
 

SearchText
 
)
 
)
 
;
 
} 
} 
else   
if   
(   
clickedButton   !
==  " $
NScreenKeyboard  % 4
.  4 5
RemoveButton  5 A
)  A B
{!! 
if"" 
("" 
	ViewModel"" 
."" 

SearchText"" (
.""( )
Length"") /
>""0 1
$num""2 3
)""3 4
{## 
	ViewModel$$ 
.$$ 

SearchText$$ (
=$$) *
	ViewModel$$+ 4
.$$4 5

SearchText$$5 ?
[$$? @
$num$$@ A
..$$A C
^$$C D
$num$$D E
]$$E F
;$$F G
	ViewModel%% 
.%% 
RefreshSuggestion%% /
(%%/ 0
)%%0 1
;%%1 2
}&& 
}'' 
else(( 
{)) 
	ViewModel** 
.** 

SearchText** $
+=**% '
clickedButton**( 5
.**5 6
ToLowerInvariant**6 F
(**F G
)**G H
;**H I
	ViewModel++ 
.++ 
RefreshSuggestion++ +
(+++ ,
)++, -
;++- .
},, 
}-- 	
}.. 
}// Ü
JD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\SearchResultPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
{ 
[		 
XamlCompilation		 
(		 "
XamlCompilationOptions		 +
.		+ ,
Compile		, 3
)		3 4
]		4 5
public

 

partial

 
class

 
SearchResultPage

 )
:

* +
ContentView

, 7
,

7 8
INFocusContent

9 G
{ 
private !
SearchResultViewModel %
	ViewModel& /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
INFocusElement 

TopElement (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
INFocusElement 
BottomElement +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
SearchResultPage 
(  
string  &
searchedText' 3
)3 4
{ 	
InitializeComponent 
(  
)  !
;! "

TopElement 
= 
searchResultList )
;) *
BottomElement 
= 
searchResultList ,
;, -
BindingContext 
= 
	ViewModel &
=' (
new) ,!
SearchResultViewModel- B
(B C
searchedTextC O
)O P
;P Q
} 	
} 
} 

FD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\SettingsPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
SettingsPage %
:& '
ContentView( 3
,3 4
INFocusContent5 C
{		 
public 
INFocusElement 

TopElement (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
INFocusElement 
BottomElement +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
SettingsPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "

TopElement 
= 
	wwwButton "
;" #
BottomElement 
= 
settingsList (
;( )
} 	
} 
} Ü
DD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\TracksPage.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
{ 
[		 
XamlCompilation		 
(		 "
XamlCompilationOptions		 +
.		+ ,
Compile		, 3
)		3 4
]		4 5
public

 

partial

 
class

 

TracksPage

 #
:

$ %
ContentView

& 1
,

1 2
ITimerContent

3 @
,

@ A
INFocusContent

B P
{ 
private 
bool 
tick 
= 
false !
;! "
private 
TrackViewModel 
	ViewModel (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
INFocusElement 

TopElement (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
INFocusElement 
BottomElement +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 

TracksPage 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
	ViewModel 
= 
BindingContext &
as' )
TrackViewModel* 8
;8 9

TopElement 
= 
	trackList "
;" #
BottomElement 
= 
	trackList %
;% &
} 	
public 
void 
Tick 
( 
) 
{ 	
if   
(   
!   
tick   
)   
{!! 
Device"" 
."" #
BeginInvokeOnMainThread"" .
("". /
(""/ 0
)""0 1
=>""2 4
{## 
tick$$ 
=$$ 
true$$ 
;$$  
	ViewModel%% 
?%% 
.%% 
Tick%% #
(%%# $
)%%$ %
;%%% &
tick&& 
=&& 
false&&  
;&&  !
}'' 
)'' 
;'' 
}(( 
})) 	
public** 
void** 
	Appearing** 
(** 
)** 
{++ 	
}-- 	
public// 
void// 
Disappearing//  
(//  !
)//! "
{00 	
}22 	
}44 
}55 æ
RD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\ViewCells\ArtistGridItem.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
.$ %
	ViewCells% .
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public		 

partial		 
class		 
ArtistGridItem		 '
:		( )
ContentView		* 5
{

 
public 
ArtistGridItem 
( 
NListViewItem +
context, 3
)3 4
{ 	
InitializeComponent 
(  
)  !
;! "
( 
context 
as 
ArtistModel #
)# $
.$ %
View% )
=* +
this, 0
;0 1
BindingContext 
= 
context $
;$ %
} 	
} 
} î
TD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\ViewCells\PlaylistGridItem.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
.$ %
	ViewCells% .
{ 
[		 
XamlCompilation		 
(		 "
XamlCompilationOptions		 +
.		+ ,
Compile		, 3
)		3 4
]		4 5
public

 

partial

 
class

 
PlaylistGridItem

 )
:

* +
ContentView

, 7
{ 
public 
PlaylistGridItem 
(  
NListViewItem  -
context. 5
)5 6
{ 	
InitializeComponent 
(  
)  !
;! "
( 
context 
as 
PlaylistModel %
)% &
.& '
View' +
=, -
this. 2
;2 3
BindingContext 
= 
context $
;$ %
} 	
} 
} ÷
WD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\ViewCells\PlaylistWebGridItem.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
.$ %
	ViewCells% .
{ 
[		 
XamlCompilation		 
(		 "
XamlCompilationOptions		 +
.		+ ,
Compile		, 3
)		3 4
]		4 5
public

 

partial

 
class

 
PlaylistWebGridItem

 ,
:

- .
ContentView

/ :
{ 
public 
PlaylistWebGridItem "
(" #
NListViewItem# 0
context1 8
)8 9
{ 	
InitializeComponent 
(  
)  !
;! "
( 
context 
as 
PlaylistModel %
)% &
.& '
View' +
=, -
this. 2
;2 3
BindingContext 
= 
context $
;$ %
} 	
} 
} Ë
XD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\ViewCells\SearchResultViewCell.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
.$ %
	ViewCells% .
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class  
SearchResultViewCell -
:. /
ContentView0 ;
{		 
public

  
SearchResultViewCell

 #
(

# $
NListViewItem

$ 1
context

2 9
)

9 :
{ 	
InitializeComponent 
(  
)  !
;! "
BindingContext 
= 
context $
;$ %
} 	
} 
} Ø
TD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\ViewCells\SettingsViewCell.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
.$ %
	ViewCells% .
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
SettingsViewCell )
:* +
ContentView, 7
{		 
public

 
SettingsViewCell

 
(

  
NListViewItem

  -
context

. 5
)

5 6
{ 	
InitializeComponent 
(  
)  !
;! "
BindingContext 
= 
context $
;$ %
this 
. 
LayoutChanged 
+= !*
SettingsViewCell_LayoutChanged" @
;@ A
} 	
private 
void *
SettingsViewCell_LayoutChanged 3
(3 4
object4 :
sender; A
,A B
SystemC I
.I J
	EventArgsJ S
eT U
)U V
{ 	
HorizontalOptions 
= 
LayoutOptions  -
.- .
StartAndExpand. <
;< =
} 	
} 
} Þ
VD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\ViewCells\SuggestionViewCell.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
.$ %
	ViewCells% .
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
SuggestionViewCell +
:, -
ContentView. 9
{		 
public

 
SuggestionViewCell

 !
(

! "
NListViewItem

" /
context

0 7
)

7 8
{ 	
InitializeComponent 
(  
)  !
;! "
BindingContext 
= 
context $
;$ %
this 
. 
LayoutChanged 
+= !*
SettingsViewCell_LayoutChanged" @
;@ A
} 	
private 
void *
SettingsViewCell_LayoutChanged 3
(3 4
object4 :
sender; A
,A B
SystemC I
.I J
	EventArgsJ S
eT U
)U V
{ 	
HorizontalOptions 
= 
LayoutOptions  -
.- .
StartAndExpand. <
;< =
} 	
} 
} ¶
QD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\TV\ViewCells\TrackViewCell.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
TV" $
.$ %
	ViewCells% .
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
TrackViewCell &
:' (
ContentView) 4
{		 
public

 
TrackViewCell

 
(

 
NListViewItem

 *
context

+ 2
)

2 3
{ 	
InitializeComponent 
(  
)  !
;! "
BindingContext 
= 
context $
;$ %
} 	
} 
} ·

OD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\ViewCells\ArtistGridItem.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
	ViewCells" +
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public		 

partial		 
class		 
ArtistGridItem		 '
:		( )
ContentView		* 5
{

 
public 

ArtistPage 
Page 
{  
get! $
;$ %
private& -
set. 1
;1 2
}3 4
public 
ArtistGridItem 
( 

ArtistPage (
page) -
,- .
string/ 5

artistName6 @
)@ A
{ 	
InitializeComponent 
(  
)  !
;! "
Page 
= 
page 
; 
BindingContext 
= 
new  #
ArtistGridItemViewModel! 8
(8 9

artistName9 C
,C D
thisE I
)I J
;J K
} 	
} 
} 
QD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\ViewCells\DownloadViewCell.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
	ViewCells" +
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
DownloadViewCell )
:* +
ViewCell, 4
{ 
public

 
DownloadViewCell

 
(

  
)

  !
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
} 
} Ç

QD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\ViewCells\PlaylistGridItem.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
	ViewCells" +
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public		 

partial		 
class		 
PlaylistGridItem		 )
:		* +
ContentView		, 7
{

 
public 
PlaylistPage 
Page  
{! "
get# &
;& '
private( /
set0 3
;3 4
}5 6
public 
PlaylistGridItem 
(  
PlaylistPage  ,
page- 1
,1 2
string3 9
playlistName: F
)F G
{ 	
InitializeComponent 
(  
)  !
;! "
Page 
= 
page 
; 
BindingContext 
= 
new  %
PlaylistGridItemViewModel! :
(: ;
playlistName; G
,G H
thisI M
)M N
;N O
} 	
} 
} Ð

TD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\ViewCells\PlaylistWebGridItem.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
	ViewCells" +
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public		 

partial		 
class		 
PlaylistWebGridItem		 ,
:		- .
ContentView		/ :
{

 
public 
PlaylistPage 
Page  
{! "
get# &
;& '
private( /
set0 3
;3 4
}5 6
public 
PlaylistWebGridItem "
(" #
PlaylistPage# /
page0 4
,4 5
string6 <
playlistName= I
)I J
{ 	
InitializeComponent 
(  
)  !
;! "
Page 
= 
page 
; 
BindingContext 
= 
new  %
PlaylistGridItemViewModel! :
(: ;
playlistName; G
,G H
thisI M
)M N
;N O
} 	
} 
} §
UD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\ViewCells\SearchResultViewCell.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
	ViewCells" +
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class  
SearchResultViewCell -
:. /
ViewCell0 8
{ 
public

  
SearchResultViewCell

 #
(

# $
)

$ %
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
} 
} 
QD:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\ViewCells\SettingsViewCell.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
	ViewCells" +
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
SettingsViewCell )
:* +
ViewCell, 4
{ 
public

 
SettingsViewCell

 
(

  
)

  !
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
} 
} 
ND:\Projekty\CS\Newtone\Newtone.Mobile.UI\Views\ViewCells\TrackViewCell.xaml.cs
	namespace 	
Newtone
 
. 
Mobile 
. 
UI 
. 
Views !
.! "
	ViewCells" +
{ 
[ 
XamlCompilation 
( "
XamlCompilationOptions +
.+ ,
Compile, 3
)3 4
]4 5
public 

partial 
class 
TrackViewCell &
:' (
ViewCell) 1
{ 
public

 
TrackViewCell

 
(

 
)

 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
} 
} 