©Æ
1D:\Projekty\CS\Newtone\Newtone.Core\GlobalData.cs
	namespace 	
Newtone
 
. 
Core 
{ 
public 

class 

GlobalData 
{ 
public 
const 
string 
	NSEC_HASH %
=& '
$str( 5
;5 6
public 
const 
string 
	SEPARATOR %
=& '
$str( ;
;; <
public 
const 
int 
MAXTRACKSINLASTLIST ,
=- .
$num/ 0
;0 1
public 
const 
string 
ERROR_FILE_EXISTS -
=. /
$str0 C
;C D
public 
const 
string 
ERROR_CORRUPTED +
=, -
$str. C
;C D
public 
const 
string 
ERROR_CONNECTION ,
=- .
$str/ A
;A B
public 
const 
string 
SYNC_COMPLETED *
=+ ,
$str- 5
;5 6
public 
const 
string 
SYNC_DISCONNECT +
=, -
$str. 6
;6 7
public 
const 
string 
RECEIVED_MESSAGE ,
=- .
$str/ 7
;7 8
public 
const 
string 
	SYNC_CODE %
=& '
$str( 1
;1 2
public   
static   

GlobalData    
Current  ! (
{  ) *
get  + .
;  . /
}  0 1
=  2 3
new  4 7

GlobalData  8 B
(  B C
)  C D
;  D E
public!! 
bool!! 
IsDebugMode!! 
{"" 	
get## 
{$$ 
return&& 
true&& 
;&& 
}** 
}++ 	
public-- 
CrossPlayer-- 
MediaPlayer-- &
{--' (
get--) ,
;--, -
set--. 1
;--1 2
}--3 4
public// 

Dictionary// 
<// 
string//  
,//  !
MediaSource//" -
>//- .
Audios/// 5
{//6 7
get//8 ;
;//; <
set//= @
;//@ A
}//B C
public00 

Dictionary00 
<00 
string00  
,00  !
MediaSource00" -
>00- .
SavedTracks00/ :
{00; <
get00= @
;00@ A
set00B E
;00E F
}00G H
public11 

Dictionary11 
<11 
string11  
,11  !
MediaSourceTag11" 0
>110 1
	AudioTags112 ;
{11< =
get11> A
;11A B
set11C F
;11F G
}11H I
public22 
List22 
<22 
string22 
>22 
DownloadedIds22 )
{22* +
get22, /
;22/ 0
set221 4
;224 5
}226 7
public33 

Dictionary33 
<33 
string33  
,33  !
List33" &
<33& '
string33' -
>33- .
>33. /
Artists330 7
{338 9
get33: =
;33= >
set33? B
;33B C
}33D E
public44 

Dictionary44 
<44 
string44  
,44  !
List44" &
<44& '
string44' -
>44- .
>44. /
	Playlists440 9
{44: ;
get44< ?
;44? @
set44A D
;44D E
}44F G
public55 

Dictionary55 
<55 
string55  
,55  !
string55" (
>55( )
WebToLocalPlaylists55* =
{55> ?
get55@ C
;55C D
set55E H
;55H I
}55J K
public66 

Dictionary66 
<66 
string66  
,66  !
string66! '
>66' (
RecomendedPlaylists66) <
{66= >
get66? B
;66B C
set66D G
;66G H
}66I J
public77 
List77 
<77 
MediaSource77 
>77  
CurrentPlaylist77! 0
{771 2
get773 6
;776 7
set778 ;
;77; <
}77= >
public88 
int88 
PlaylistPosition88 #
{88$ %
get88& )
;88) *
set88+ .
;88. /
}880 1
public99 
int99 
QueuePosition99  
{99! "
get99# &
;99& '
set99( +
;99+ ,
}99- .
public:: 
MediaSource:: 
MediaSource:: &
{::' (
get::) ,
;::, -
set::. 1
;::1 2
}::3 4
public;; 
bool;; 
AudioFromIntent;; #
{;;$ %
get;;& )
;;;) *
set;;+ .
;;;. /
};;0 1
public<< 
bool<< 
AutoDownload<<  
{<<! "
get<<# &
;<<& '
set<<( +
;<<+ ,
}<<- .
public>> 
string>> 
MediaSourcePath>> %
{?? 	
get@@ 
{AA 
returnBB 
MediaSourceBB "
==BB# %
nullBB& *
?BB+ ,
$strBB- /
:BB0 1
MediaSourceBB2 =
.BB= >
FilePathBB> F
;BBF G
}CC 
}DD 	
publicFF 
ListFF 
<FF 
HistoryModelFF  
>FF  !
HistoryFF" )
{FF* +
getFF, /
;FF/ 0
setFF1 4
;FF4 5
}FF6 7
publicGG 
TrackCounterGG 
[GG 
]GG 

LastTracksGG (
{GG) *
getGG+ .
;GG. /
setGG0 3
;GG3 4
}GG5 6
publicHH 
TrackCounterHH 
[HH 
]HH 

MostTracksHH (
{HH) *
getHH+ .
;HH. /
setHH0 3
;HH3 4
}HH5 6
publicJJ 

PlayerModeJJ 

PlayerModeJJ $
{JJ% &
getJJ' *
;JJ* +
setJJ, /
;JJ/ 0
}JJ1 2
publicKK 
stringKK 
DataPathKK 
{KK  
getKK! $
;KK$ %
setKK& )
;KK) *
}KK+ ,
publicLL 
stringLL 
	MusicPathLL 
{LL  !
getLL" %
;LL% &
setLL' *
;LL* +
}LL, -
publicMM 
ListMM 
<MM 
stringMM 
>MM 
ExcludedPathsMM )
{MM* +
getMM, /
;MM/ 0
setMM1 4
;MM4 5
}MM6 7
publicNN 
ListNN 
<NN 
stringNN 
>NN 
IncludedPathsNN )
{NN* +
getNN, /
;NN/ 0
setNN1 4
;NN4 5
}NN6 7
publicOO 
stringOO 
CurrentLanguageOO %
{OO& '
getOO( +
;OO+ ,
setOO- 0
;OO0 1
}OO2 3
publicPP 
MessageGeneratorPP 
	MessengerPP  )
{PP* +
getPP, /
;PP/ 0
setPP1 4
;PP4 5
}PP6 7
publicQQ 
boolQQ 
ArtistsNeedRefreshQQ &
{QQ' (
getQQ) ,
;QQ, -
setQQ. 1
;QQ1 2
}QQ3 4
publicRR 
boolRR  
PlaylistsNeedRefreshRR (
{RR) *
getRR+ .
;RR. /
setRR0 3
;RR3 4
}RR5 6
publicSS 
boolSS &
CurrentPlaylistNeedRefreshSS .
{SS/ 0
getSS1 4
;SS4 5
setSS6 9
;SS9 :
}SS; <
publicTT 
boolTT 
HistoryNeedRefreshTT &
{TT' (
getTT) ,
;TT, -
setTT. 1
;TT1 2
}TT3 4
publicUU 
intUU 
IncludedPathsToSkipUU &
{UU' (
getUU) ,
;UU, -
setUU. 1
;UU1 2
}UU3 4
publicVV 
boolVV 
IgnoreAutoFocusVV #
{VV$ %
getVV& )
;VV) *
setVV+ .
;VV. /
}VV0 1
publicWW 
MediaFormatWW 
MediaFormatWW &
{WW' (
getWW) ,
;WW, -
setWW. 1
;WW1 2
}WW3 4
=WW5 6
MediaFormatWW7 B
.WWB C
m4aWWC F
;WWF G
publicZZ 
voidZZ 

InitializeZZ 
(ZZ 
)ZZ  
{[[ 	
Artists\\ 
=\\ 
new\\ 

Dictionary\\ $
<\\$ %
string\\% +
,\\+ ,
List\\- 1
<\\1 2
string\\2 8
>\\8 9
>\\9 :
(\\: ;
)\\; <
;\\< =
Audios]] 
=]] 
new]] 

Dictionary]] #
<]]# $
string]]$ *
,]]* +
Newtone]], 3
.]]3 4
Core]]4 8
.]]8 9
Media]]9 >
.]]> ?
MediaSource]]? J
>]]J K
(]]K L
)]]L M
;]]M N
SavedTracks^^ 
=^^ 
new^^ 

Dictionary^^ (
<^^( )
string^^) /
,^^/ 0
MediaSource^^1 <
>^^< =
(^^= >
)^^> ?
;^^? @
	AudioTags__ 
=__ 
new__ 

Dictionary__ &
<__& '
string__' -
,__- .
MediaSourceTag__/ =
>__= >
(__> ?
)__? @
;__@ A
DownloadedIds`` 
=`` 
new`` 
List``  $
<``$ %
string``% +
>``+ ,
(``, -
)``- .
;``. /
CurrentPlaylistaa 
=aa 
newaa !
Listaa" &
<aa& '
Newtoneaa' .
.aa. /
Coreaa/ 3
.aa3 4
Mediaaa4 9
.aa9 :
MediaSourceaa: E
>aaE F
(aaF G
)aaG H
;aaH I
WebToLocalPlaylistsbb 
=bb  !
newbb" %

Dictionarybb& 0
<bb0 1
stringbb1 7
,bb7 8
stringbb9 ?
>bb? @
(bb@ A
)bbA B
;bbB C
RecomendedPlaylistscc 
=cc  !
newcc" %

Dictionarycc& 0
<cc0 1
stringcc1 7
,cc7 8
stringcc9 ?
>cc? @
(cc@ A
)ccA B
;ccB C
DataPathdd 
=dd 
Systemdd 
.dd 
Environmentdd )
.dd) *
GetFolderPathdd* 7
(dd7 8
Systemdd8 >
.dd> ?
Environmentdd? J
.ddJ K
SpecialFolderddK X
.ddX Y 
LocalApplicationDataddY m
)ddm n
;ddn o
Historyff 
=ff 
newff 
Listff 
<ff 
Newtoneff &
.ff& '
Coreff' +
.ff+ ,
Modelsff, 2
.ff2 3
HistoryModelff3 ?
>ff? @
(ff@ A
)ffA B
;ffB C

LastTracksgg 
=gg 
newgg 
Newtonegg $
.gg$ %
Coregg% )
.gg) *
Logicgg* /
.gg/ 0
TrackCountergg0 <
[gg< =

GlobalDatagg= G
.ggG H
MAXTRACKSINLASTLISTggH [
]gg[ \
;gg\ ]

MostTrackshh 
=hh 
newhh 
Newtonehh $
.hh$ %
Corehh% )
.hh) *
Logichh* /
.hh/ 0
TrackCounterhh0 <
[hh< =

GlobalDatahh= G
.hhG H
MAXTRACKSINLASTLISThhH [
]hh[ \
;hh\ ]

PlayerModejj 
=jj 

PlayerModejj #
.jj# $
Alljj$ '
;jj' (
	Playlistskk 
=kk 
newkk 

Dictionarykk &
<kk& '
stringkk' -
,kk- .
Listkk/ 3
<kk3 4
stringkk4 :
>kk: ;
>kk; <
(kk< =
)kk= >
;kk> ?
ExcludedPathsmm 
=mm 
newmm 
Listmm  $
<mm$ %
stringmm% +
>mm+ ,
(mm, -
)mm- .
;mm. /
IgnoreAutoFocusnn 
=nn 
falsenn #
;nn# $
}oo 	
publicqq 
voidqq 

LoadConfigqq 
(qq 
)qq  
{rr 	
	Directoryss 
.ss 
CreateDirectoryss %
(ss% &
	MusicPathss& /
)ss/ 0
;ss0 1
iftt 
(tt 
Filett 
.tt 
Existstt 
(tt 
DataPathtt $
+tt% &
$strtt' 7
)tt7 8
)tt8 9
{uu 

FileStreamvv 
streamvv !
=vv" #
Filevv$ (
.vv( )
OpenReadvv) 1
(vv1 2
DataPathvv2 :
+vv; <
$strvv= M
)vvM N
;vvN O
NSEC2ww 
nsecww 
=ww 
newww  
NSEC2ww! &
(ww& '
	NSEC_HASHww' 0
)ww0 1
;ww1 2
nsecxx 
.xx 
Loadxx 
(xx 
streamxx  
)xx  !
;xx! "
ifyy 
(yy 
nsecyy 
.yy 
Existsyy 
(yy 
$stryy )
)yy) *
)yy* +
{zz 
CurrentLanguage{{ #
={{$ %
System{{& ,
.{{, -
Text{{- 1
.{{1 2
Encoding{{2 :
.{{: ;
ASCII{{; @
.{{@ A
	GetString{{A J
({{J K
nsec{{K O
.{{O P
Get{{P S
({{S T
$str{{T ^
){{^ _
){{_ `
;{{` a
Localization||  
.||  !
RefreshLanguage||! 0
(||0 1
)||1 2
;||2 3
}}} 
if~~ 
(~~ 
nsec~~ 
.~~ 
Exists~~ 
(~~ 
$str~~ '
)~~' (
)~~( )
{ 
string
 
buffer
 !
=
" #
System
$ *
.
* +
Text
+ /
.
/ 0
Encoding
0 8
.
8 9
ASCII
9 >
.
> ?
	GetString
? H
(
H I
nsec
I M
.
M N
Get
N Q
(
Q R
$str
R Z
)
Z [
)
[ \
;
\ ]
MediaPlayer
 
.
  
	SetVolume
  )
(
) *
float
* /
.
/ 0
Parse
0 5
(
5 6
buffer
6 <
)
< =
)
= >
;
> ?
}
 
if
 
(
 
nsec
 
.
 
Exists
 
(
  
$str
  +
)
+ ,
)
, -
{
 
string
 
buffer
 !
=
" #
System
$ *
.
* +
Text
+ /
.
/ 0
Encoding
0 8
.
8 9
UTF8
9 =
.
= >
	GetString
> G
(
G H
nsec
H L
.
L M
Get
M P
(
P Q
$str
Q \
)
\ ]
)
] ^
;
^ _
string
 
[
 
]
 
	playlists
 &
=
' (
buffer
) /
.
/ 0
Split
0 5
(
5 6
$char
6 :
,
: ; 
StringSplitOptions
< N
.
N O 
RemoveEmptyEntries
O a
)
a b
;
b c
	playlists
 
.
 
ForEach
 %
(
% &
playlistBuffer
& 4
=>
5 7
{
 
List
 
<
 
string
 #
>
# $
playlist
% -
=
. /
new
0 3
List
4 8
<
8 9
string
9 ?
>
? @
(
@ A
)
A B
;
B C
string
 
[
 
]
  
parts
! &
=
' (
playlistBuffer
) 7
.
7 8
Split
8 =
(
= >
	SEPARATOR
> G
,
G H 
StringSplitOptions
I [
.
[ \ 
RemoveEmptyEntries
\ n
)
n o
;
o p
string
 
name
 #
=
$ %
parts
& +
[
+ ,
$num
, -
]
- .
;
. /
string
 
[
 
]
  
items
! &
=
' (
parts
) .
[
. /
$num
/ 0
]
0 1
.
1 2
Split
2 7
(
7 8
$char
8 ;
,
; < 
StringSplitOptions
= O
.
O P 
RemoveEmptyEntries
P b
)
b c
;
c d
items
 
.
 
ForEach
 %
(
% &
filepath
& .
=>
/ 1
{
 
if
 
(
  
File
  $
.
$ %
Exists
% +
(
+ ,
filepath
, 4
)
4 5
||
6 8
filepath
9 A
.
A B
Length
B H
==
I K
$num
L N
)
N O
{
 
playlist
  (
.
( )
Add
) ,
(
, -
filepath
- 5
)
5 6
;
6 7
}
 
}
 
)
 
;
 
if
 
(
 
playlist
 $
.
$ %
Count
% *
>
+ ,
$num
- .
)
. /
{
 
	Playlists
 %
.
% &
Add
& )
(
) *
name
* .
,
. /
playlist
0 8
)
8 9
;
9 :
}
 
}
 
)
 
;
 "
PlaylistsNeedRefresh
 (
=
) *
true
+ /
;
/ 0
}
 
if
   
(
   
nsec
   
.
   
Exists
   
(
    
$str
    ,
)
  , -
)
  - .
{
¡¡ 
byte
¢¢ 
[
¢¢ 
]
¢¢ 

tracksData
¢¢ %
=
¢¢& '
nsec
¢¢( ,
.
¢¢, -
Get
¢¢- 0
(
¢¢0 1
$str
¢¢1 =
)
¢¢= >
;
¢¢> ?
string
££ 
[
££ 
]
££ 
tracks
££ #
=
££$ %
System
££& ,
.
££, -
Text
££- 1
.
££1 2
Encoding
££2 :
.
££: ;
UTF8
££; ?
.
££? @
	GetString
££@ I
(
££I J

tracksData
££J T
)
££T U
.
££U V
Split
££V [
(
££[ \
$char
££\ _
,
££_ ` 
StringSplitOptions
££a s
.
££s t!
RemoveEmptyEntries££t 
)££ 
;££ 
List
¥¥ 
<
¥¥ 
TrackCounter
¥¥ %
>
¥¥% &
	trackList
¥¥' 0
=
¥¥1 2
new
¥¥3 6
List
¥¥7 ;
<
¥¥; <
TrackCounter
¥¥< H
>
¥¥H I
(
¥¥I J
)
¥¥J K
;
¥¥K L
tracks
¦¦ 
.
¦¦ 
ForEach
¦¦ "
(
¦¦" #
track
¦¦# (
=>
¦¦) +
{
§§ 
TrackCounter
¨¨ $
counter
¨¨% ,
=
¨¨- .
TrackCounter
¨¨/ ;
.
¨¨; <

FromString
¨¨< F
(
¨¨F G
track
¨¨G L
)
¨¨L M
;
¨¨M N
if
ªª 
(
ªª 
counter
ªª #
!=
ªª$ &
null
ªª' +
&&
ªª, .
File
ªª/ 3
.
ªª3 4
Exists
ªª4 :
(
ªª: ;
counter
ªª; B
.
ªªB C
Media
ªªC H
.
ªªH I
FilePath
ªªI Q
)
ªªQ R
&&
ªªS U
	trackList
ªªV _
.
ªª_ `
Count
ªª` e
<
ªªf g!
MAXTRACKSINLASTLIST
ªªh {
)
ªª{ |
{
«« 
	trackList
­­ %
.
­­% &
Add
­­& )
(
­­) *
counter
­­* 1
)
­­1 2
;
­­2 3
}
®® 
}
¯¯ 
)
¯¯ 
;
¯¯ 
	trackList
±± 
=
±± 
	trackList
±±  )
.
±±) *
OrderByDescending
±±* ;
(
±±; <
o
±±< =
=>
±±> @
o
±±A B
.
±±B C
Count
±±C H
)
±±H I
.
±±I J
ToList
±±J P
(
±±P Q
)
±±Q R
;
±±R S

MostTracks
²² 
=
²²  
	trackList
²²! *
.
²²* +
ToArray
²²+ 2
(
²²2 3
)
²²3 4
;
²²4 5
}
³³ 
if
µµ 
(
µµ 
nsec
µµ 
.
µµ 
Exists
µµ 
(
µµ  
$str
µµ  ,
)
µµ, -
)
µµ- .
{
¶¶ 
byte
·· 
[
·· 
]
·· 

tracksData
·· %
=
··& '
nsec
··( ,
.
··, -
Get
··- 0
(
··0 1
$str
··1 =
)
··= >
;
··> ?
string
¸¸ 
[
¸¸ 
]
¸¸ 
tracks
¸¸ #
=
¸¸$ %
System
¸¸& ,
.
¸¸, -
Text
¸¸- 1
.
¸¸1 2
Encoding
¸¸2 :
.
¸¸: ;
UTF8
¸¸; ?
.
¸¸? @
	GetString
¸¸@ I
(
¸¸I J

tracksData
¸¸J T
)
¸¸T U
.
¸¸U V
Split
¸¸V [
(
¸¸[ \
$char
¸¸\ _
,
¸¸_ ` 
StringSplitOptions
¸¸a s
.
¸¸s t!
RemoveEmptyEntries¸¸t 
)¸¸ 
;¸¸ 
List
ºº 
<
ºº 
TrackCounter
ºº %
>
ºº% &
	trackList
ºº' 0
=
ºº1 2
new
ºº3 6
List
ºº7 ;
<
ºº; <
TrackCounter
ºº< H
>
ººH I
(
ººI J
)
ººJ K
;
ººK L
tracks
»» 
.
»» 
ForEach
»» "
(
»»" #
track
»»# (
=>
»») +
{
¼¼ 
TrackCounter
½½ $
counter
½½% ,
=
½½- .
TrackCounter
½½/ ;
.
½½; <

FromString
½½< F
(
½½F G
track
½½G L
)
½½L M
;
½½M N
if
¿¿ 
(
¿¿ 
counter
¿¿ #
!=
¿¿$ &
null
¿¿' +
&&
¿¿, .
File
¿¿/ 3
.
¿¿3 4
Exists
¿¿4 :
(
¿¿: ;
counter
¿¿; B
.
¿¿B C
Media
¿¿C H
.
¿¿H I
FilePath
¿¿I Q
)
¿¿Q R
&&
¿¿S U
	trackList
¿¿V _
.
¿¿_ `
Count
¿¿` e
<
¿¿f g!
MAXTRACKSINLASTLIST
¿¿h {
)
¿¿{ |
{
ÀÀ 
	trackList
ÁÁ %
.
ÁÁ% &
Add
ÁÁ& )
(
ÁÁ) *
counter
ÁÁ* 1
)
ÁÁ1 2
;
ÁÁ2 3
}
ÂÂ 
}
ÃÃ 
)
ÃÃ 
;
ÃÃ 

LastTracks
ÅÅ 
=
ÅÅ  
	trackList
ÅÅ! *
.
ÅÅ* +
ToArray
ÅÅ+ 2
(
ÅÅ2 3
)
ÅÅ3 4
;
ÅÅ4 5
}
ÆÆ 
if
ÈÈ 
(
ÈÈ 
nsec
ÈÈ 
.
ÈÈ 
Exists
ÈÈ 
(
ÈÈ  
$str
ÈÈ  ,
)
ÈÈ, -
)
ÈÈ- .
{
ÉÉ 
byte
ÊÊ 
[
ÊÊ 
]
ÊÊ 
playerModeData
ÊÊ )
=
ÊÊ* +
nsec
ÊÊ, 0
.
ÊÊ0 1
Get
ÊÊ1 4
(
ÊÊ4 5
$str
ÊÊ5 A
)
ÊÊA B
;
ÊÊB C
int
ËË 

playerMode
ËË "
=
ËË# $
int
ËË% (
.
ËË( )
Parse
ËË) .
(
ËË. /
System
ËË/ 5
.
ËË5 6
Text
ËË6 :
.
ËË: ;
Encoding
ËË; C
.
ËËC D
UTF8
ËËD H
.
ËËH I
	GetString
ËËI R
(
ËËR S
playerModeData
ËËS a
)
ËËa b
)
ËËb c
;
ËËc d

PlayerMode
ÌÌ 
=
ÌÌ  
(
ÌÌ! "

PlayerMode
ÌÌ" ,
)
ÌÌ, -

playerMode
ÌÌ- 7
;
ÌÌ7 8
}
ÍÍ 
if
ÏÏ 
(
ÏÏ 
nsec
ÏÏ 
.
ÏÏ 
Exists
ÏÏ 
(
ÏÏ  
$str
ÏÏ  )
)
ÏÏ) *
)
ÏÏ* +
{
ÐÐ 
byte
ÑÑ 
[
ÑÑ 
]
ÑÑ 
historyData
ÑÑ &
=
ÑÑ' (
nsec
ÑÑ) -
.
ÑÑ- .
Get
ÑÑ. 1
(
ÑÑ1 2
$str
ÑÑ2 ;
)
ÑÑ; <
;
ÑÑ< =
string
ÒÒ 
[
ÒÒ 
]
ÒÒ 
historyElems
ÒÒ )
=
ÒÒ* +
System
ÒÒ, 2
.
ÒÒ2 3
Text
ÒÒ3 7
.
ÒÒ7 8
Encoding
ÒÒ8 @
.
ÒÒ@ A
UTF8
ÒÒA E
.
ÒÒE F
	GetString
ÒÒF O
(
ÒÒO P
historyData
ÒÒP [
)
ÒÒ[ \
.
ÒÒ\ ]
Split
ÒÒ] b
(
ÒÒb c
$char
ÒÒc g
,
ÒÒg h 
StringSplitOptions
ÒÒi {
.
ÒÒ{ |!
RemoveEmptyEntriesÒÒ| 
)ÒÒ 
;ÒÒ 
History
ÓÓ 
.
ÓÓ 
Clear
ÓÓ !
(
ÓÓ! "
)
ÓÓ" #
;
ÓÓ# $
historyElems
ÕÕ  
.
ÕÕ  !
ForEach
ÕÕ! (
(
ÕÕ( )
elem
ÕÕ) -
=>
ÕÕ. 0
{
ÖÖ 
string
×× 
[
×× 
]
××  
text
××! %
=
××& '
elem
××( ,
.
××, -
Split
××- 2
(
××2 3
	SEPARATOR
××3 <
)
××< =
;
××= >
if
ØØ 
(
ØØ 
text
ØØ  
.
ØØ  !
Length
ØØ! '
>=
ØØ( *
$num
ØØ+ ,
&&
ØØ- /
History
ØØ0 7
.
ØØ7 8
	FindIndex
ØØ8 A
(
ØØA B
model
ØØB G
=>
ØØH J
model
ØØK P
.
ØØP Q
Text
ØØQ U
==
ØØV X
text
ØØY ]
[
ØØ] ^
$num
ØØ^ _
]
ØØ_ `
)
ØØ` a
==
ØØb d
-
ØØe f
$num
ØØf g
)
ØØg h
History
ÙÙ #
.
ÙÙ# $
Add
ÙÙ$ '
(
ÙÙ' (
new
ÙÙ( +
HistoryModel
ÙÙ, 8
(
ÙÙ8 9
)
ÙÙ9 :
{
ÙÙ; <
Text
ÙÙ= A
=
ÙÙB C
text
ÙÙD H
[
ÙÙH I
$num
ÙÙI J
]
ÙÙJ K
}
ÙÙL M
)
ÙÙM N
;
ÙÙN O
}
ÚÚ 
)
ÚÚ 
;
ÚÚ 
}
ÛÛ 
if
ÝÝ 
(
ÝÝ 
nsec
ÝÝ 
.
ÝÝ 
Exists
ÝÝ 
(
ÝÝ 
$str
ÝÝ .
)
ÝÝ. /
)
ÝÝ/ 0
{
ÞÞ 
byte
ßß 
[
ßß 
]
ßß 
pathData
ßß #
=
ßß$ %
nsec
ßß& *
.
ßß* +
Get
ßß+ .
(
ßß. /
$str
ßß/ >
)
ßß> ?
;
ßß? @
string
àà 
[
àà 
]
àà 
paths
àà "
=
àà# $
System
àà% +
.
àà+ ,
Text
àà, 0
.
àà0 1
Encoding
àà1 9
.
àà9 :
UTF8
àà: >
.
àà> ?
	GetString
àà? H
(
ààH I
pathData
ààI Q
)
ààQ R
.
ààR S
Split
ààS X
(
ààX Y
$char
ààY ]
,
àà] ^ 
StringSplitOptions
àà_ q
.
ààq r!
RemoveEmptyEntriesààr 
)àà 
;àà 
paths
áá 
.
áá 
ForEach
áá !
(
áá! "
item
áá" &
=>
áá' )
{
ââ 
if
ãã 
(
ãã 
	Directory
ãã %
.
ãã% &
Exists
ãã& ,
(
ãã, -
item
ãã- 1
)
ãã1 2
&&
ãã3 5
!
ãã6 7
IncludedPaths
ãã7 D
.
ããD E
Contains
ããE M
(
ããM N
item
ããN R
)
ããR S
)
ããS T
IncludedPaths
ää )
.
ää) *
Add
ää* -
(
ää- .
item
ää. 2
)
ää2 3
;
ää3 4
}
åå 
)
åå 
;
åå 
}
ææ 
if
èè 
(
èè 
nsec
èè 
.
èè 
Exists
èè 
(
èè 
$str
èè -
)
èè- .
)
èè. /
{
éé 
byte
êê 
[
êê 
]
êê 
pathData
êê #
=
êê$ %
nsec
êê& *
.
êê* +
Get
êê+ .
(
êê. /
$str
êê/ =
)
êê= >
;
êê> ?
string
ëë 
[
ëë 
]
ëë 
elems
ëë "
=
ëë# $
System
ëë% +
.
ëë+ ,
Text
ëë, 0
.
ëë0 1
Encoding
ëë1 9
.
ëë9 :
UTF8
ëë: >
.
ëë> ?
	GetString
ëë? H
(
ëëH I
pathData
ëëI Q
)
ëëQ R
.
ëëR S
Split
ëëS X
(
ëëX Y
$char
ëëY ]
,
ëë] ^ 
StringSplitOptions
ëë_ q
.
ëëq r!
RemoveEmptyEntriesëër 
)ëë 
;ëë !
WebToLocalPlaylists
íí '
.
íí' (
Clear
íí( -
(
íí- .
)
íí. /
;
íí/ 0
elems
îî 
.
îî 
ForEach
îî !
(
îî! "
item
îî" &
=>
îî' )
{
ïï 
string
ðð 
[
ðð 
]
ðð  
datas
ðð! &
=
ðð' (
item
ðð) -
.
ðð- .
Split
ðð. 3
(
ðð3 4
	SEPARATOR
ðð4 =
)
ðð= >
;
ðð> ?!
WebToLocalPlaylists
ññ +
.
ññ+ ,
Add
ññ, /
(
ññ/ 0
datas
ññ0 5
[
ññ5 6
$num
ññ6 7
]
ññ7 8
,
ññ8 9
datas
ññ: ?
[
ññ? @
$num
ññ@ A
]
ññA B
)
ññB C
;
ññC D
}
òò 
)
òò 
;
òò 
}
óó 
if
õõ 
(
õõ 
nsec
õõ 
.
õõ 
Exists
õõ 
(
õõ  
$str
õõ  .
)
õõ. /
)
õõ/ 0
{
öö 
byte
÷÷ 
[
÷÷ 
]
÷÷ 
autoDownload
÷÷ '
=
÷÷( )
nsec
÷÷* .
.
÷÷. /
Get
÷÷/ 2
(
÷÷2 3
$str
÷÷3 A
)
÷÷A B
;
÷÷B C
AutoDownload
øø  
=
øø! "
System
øø# )
.
øø) *
Text
øø* .
.
øø. /
Encoding
øø/ 7
.
øø7 8
UTF8
øø8 <
.
øø< =
	GetString
øø= F
(
øøF G
autoDownload
øøG S
)
øøS T
==
øøU W
$str
øøX ^
;
øø^ _
}
ùù 
if
ûû 
(
ûû 
nsec
ûû 
.
ûû 
Exists
ûû 
(
ûû 
$str
ûû 0
)
ûû0 1
)
ûû1 2
{
üü 
byte
ýý 
[
ýý 
]
ýý 
ignoreAutoFocus
ýý *
=
ýý+ ,
nsec
ýý- 1
.
ýý1 2
Get
ýý2 5
(
ýý5 6
$str
ýý6 G
)
ýýG H
;
ýýH I
IgnoreAutoFocus
þþ #
=
þþ$ %
System
þþ& ,
.
þþ, -
Text
þþ- 1
.
þþ1 2
Encoding
þþ2 :
.
þþ: ;
UTF8
þþ; ?
.
þþ? @
	GetString
þþ@ I
(
þþI J
ignoreAutoFocus
þþJ Y
)
þþY Z
==
þþ[ ]
$str
þþ^ d
;
þþd e
}
ÿÿ 
nsec
 
.
 
Dispose
 
(
 
)
 
;
 
}
 
}
 	
public
 
void
 

SaveConfig
 
(
 
)
  
{
 	
NSEC2
 
nsec
 
=
 
new
 
NSEC2
 "
(
" #
	NSEC_HASH
# ,
)
, -
;
- .
string
 
buffer
 
=
 
MediaPlayer
 '
.
' (
	GetVolume
( 1
(
1 2
)
2 3
.
3 4
ToString
4 <
(
< =
)
= >
;
> ?
nsec
 
.
 
AddFile
 
(
 
$str
 !
,
! "
System
# )
.
) *
Text
* .
.
. /
Encoding
/ 7
.
7 8
ASCII
8 =
.
= >
GetBytes
> F
(
F G
buffer
G M
)
M N
)
N O
;
O P
if
 
(
 
CurrentLanguage
 
!=
  "
null
# '
)
' (
nsec
 
.
 
AddFile
 
(
 
$str
 '
,
' (
System
) /
.
/ 0
Text
0 4
.
4 5
Encoding
5 =
.
= >
ASCII
> C
.
C D
GetBytes
D L
(
L M
CurrentLanguage
M \
)
\ ]
)
] ^
;
^ _
buffer
 
=
 
$str
 
;
 
if
 
(
 
	Playlists
 
.
 
Count
 
>
  !
$num
" #
)
# $
{
 
	Playlists
 
.
 
Keys
 
.
 
ForEach
 &
(
& '
playlistName
' 3
=>
4 6
{
 
List
 
<
 
string
 
>
  
playlist
! )
=
* +
	Playlists
, 5
[
5 6
playlistName
6 B
]
B C
;
C D
if
 
(
 
playlist
  
.
  !
Count
! &
>
' (
$num
) *
)
* +
{
 
string
 
playlistItem
 +
=
, -
playlistName
. :
+
; <
	SEPARATOR
= F
;
F G
playlist
  
.
  !
ForEach
! (
(
( )
item
) -
=>
. 0
{
 
playlistItem
   (
+=
  ) +
item
  , 0
+
  1 2
$char
  3 6
;
  6 7
}
¡¡ 
)
¡¡ 
;
¡¡ 
buffer
££ 
+=
££ !
playlistItem
££" .
+
££/ 0
$char
££1 5
;
££5 6
}
¤¤ 
}
¥¥ 
)
¥¥ 
;
¥¥ 
nsec
¦¦ 
.
¦¦ 
AddFile
¦¦ 
(
¦¦ 
$str
¦¦ (
,
¦¦( )
System
¦¦* 0
.
¦¦0 1
Text
¦¦1 5
.
¦¦5 6
Encoding
¦¦6 >
.
¦¦> ?
UTF8
¦¦? C
.
¦¦C D
GetBytes
¦¦D L
(
¦¦L M
buffer
¦¦M S
)
¦¦S T
)
¦¦T U
;
¦¦U V
buffer
¨¨ 
=
¨¨ 
$str
¨¨ 
;
¨¨ !
WebToLocalPlaylists
ªª #
.
ªª# $
Keys
ªª$ (
.
ªª( )
ForEach
ªª) 0
(
ªª0 1

playlistId
ªª1 ;
=>
ªª< >
{
«« 
string
¬¬ 
elem
¬¬ 
=
¬¬  !
string
¬¬" (
.
¬¬( )
Concat
¬¬) /
(
¬¬/ 0

playlistId
¬¬0 :
,
¬¬: ;
	SEPARATOR
¬¬< E
,
¬¬E F!
WebToLocalPlaylists
¬¬G Z
[
¬¬Z [

playlistId
¬¬[ e
]
¬¬e f
,
¬¬f g
$str
¬¬g k
)
¬¬k l
;
¬¬l m
buffer
­­ 
+=
­­ 
elem
­­ "
;
­­" #
}
®® 
)
®® 
;
®® 
nsec
°° 
.
°° 
AddFile
°° 
(
°° 
$str
°° +
,
°°+ ,
System
°°- 3
.
°°3 4
Text
°°4 8
.
°°8 9
Encoding
°°9 A
.
°°A B
UTF8
°°B F
.
°°F G
GetBytes
°°G O
(
°°O P
buffer
°°P V
)
°°V W
)
°°W X
;
°°X Y
}
±± 
int
³³ 

playerMode
³³ 
=
³³ 
(
³³ 
int
³³ !
)
³³! "

PlayerMode
³³" ,
;
³³, -
buffer
´´ 
=
´´ 

playerMode
´´ 
.
´´  
ToString
´´  (
(
´´( )
)
´´) *
;
´´* +
nsec
µµ 
.
µµ 
AddFile
µµ 
(
µµ 
$str
µµ %
,
µµ% &
System
µµ' -
.
µµ- .
Text
µµ. 2
.
µµ2 3
Encoding
µµ3 ;
.
µµ; <
UTF8
µµ< @
.
µµ@ A
GetBytes
µµA I
(
µµI J
buffer
µµJ P
)
µµP Q
)
µµQ R
;
µµR S
buffer
¶¶ 
=
¶¶ 
$str
¶¶ 
;
¶¶ 

MostTracks
¸¸ 
.
¸¸ 
ForEach
¸¸ 
(
¸¸ 
counter
¸¸ &
=>
¸¸' )
{
¹¹ 
if
ºº 
(
ºº 
counter
ºº 
!=
ºº 
null
ºº #
)
ºº# $
buffer
»» 
+=
»» 
counter
»» %
.
»»% &
ToString
»»& .
(
»». /
)
»»/ 0
+
»»1 2
$str
»»3 6
;
»»6 7
}
¼¼ 
)
¼¼ 
;
¼¼ 
nsec
¾¾ 
.
¾¾ 
AddFile
¾¾ 
(
¾¾ 
$str
¾¾ %
,
¾¾% &
System
¾¾' -
.
¾¾- .
Text
¾¾. 2
.
¾¾2 3
Encoding
¾¾3 ;
.
¾¾; <
UTF8
¾¾< @
.
¾¾@ A
GetBytes
¾¾A I
(
¾¾I J
buffer
¾¾J P
)
¾¾P Q
)
¾¾Q R
;
¾¾R S
buffer
ÀÀ 
=
ÀÀ 
$str
ÀÀ 
;
ÀÀ 

LastTracks
ÂÂ 
.
ÂÂ 
ForEach
ÂÂ 
(
ÂÂ 
counter
ÂÂ &
=>
ÂÂ' )
{
ÃÃ 
if
ÄÄ 
(
ÄÄ 
counter
ÄÄ 
!=
ÄÄ 
null
ÄÄ #
)
ÄÄ# $
buffer
ÅÅ 
+=
ÅÅ 
counter
ÅÅ %
.
ÅÅ% &
ToString
ÅÅ& .
(
ÅÅ. /
)
ÅÅ/ 0
+
ÅÅ1 2
$str
ÅÅ3 6
;
ÅÅ6 7
}
ÆÆ 
)
ÆÆ 
;
ÆÆ 
nsec
ÈÈ 
.
ÈÈ 
AddFile
ÈÈ 
(
ÈÈ 
$str
ÈÈ %
,
ÈÈ% &
System
ÈÈ' -
.
ÈÈ- .
Text
ÈÈ. 2
.
ÈÈ2 3
Encoding
ÈÈ3 ;
.
ÈÈ; <
UTF8
ÈÈ< @
.
ÈÈ@ A
GetBytes
ÈÈA I
(
ÈÈI J
buffer
ÈÈJ P
)
ÈÈP Q
)
ÈÈQ R
;
ÈÈR S
if
ÊÊ 
(
ÊÊ 
History
ÊÊ 
.
ÊÊ 
Count
ÊÊ 
>
ÊÊ 
$num
ÊÊ  !
)
ÊÊ! "
{
ËË 
buffer
ÌÌ 
=
ÌÌ 
$str
ÌÌ 
;
ÌÌ 
History
ÎÎ 
.
ÎÎ 
ForEach
ÎÎ 
(
ÎÎ  
model
ÎÎ  %
=>
ÎÎ& (
{
ÏÏ 
buffer
ÐÐ 
+=
ÐÐ 
$str
ÐÐ "
+
ÐÐ# $
	SEPARATOR
ÐÐ% .
+
ÐÐ/ 0
model
ÐÐ1 6
.
ÐÐ6 7
Text
ÐÐ7 ;
+
ÐÐ< =
$str
ÐÐ> B
;
ÐÐB C
}
ÑÑ 
)
ÑÑ 
;
ÑÑ 
nsec
ÓÓ 
.
ÓÓ 
AddFile
ÓÓ 
(
ÓÓ 
$str
ÓÓ &
,
ÓÓ& '
System
ÓÓ( .
.
ÓÓ. /
Text
ÓÓ/ 3
.
ÓÓ3 4
Encoding
ÓÓ4 <
.
ÓÓ< =
UTF8
ÓÓ= A
.
ÓÓA B
GetBytes
ÓÓB J
(
ÓÓJ K
buffer
ÓÓK Q
)
ÓÓQ R
)
ÓÓR S
;
ÓÓS T
}
ÔÔ 
if
ÖÖ 
(
ÖÖ 
IncludedPaths
ÖÖ 
.
ÖÖ 
Count
ÖÖ "
>
ÖÖ# $!
IncludedPathsToSkip
ÖÖ% 8
)
ÖÖ8 9
{
×× 
buffer
ØØ 
=
ØØ 
$str
ØØ 
;
ØØ 
IncludedPaths
ÚÚ 
.
ÚÚ 
Skip
ÚÚ "
(
ÚÚ" #!
IncludedPathsToSkip
ÚÚ# 6
)
ÚÚ6 7
.
ÚÚ7 8
ForEach
ÚÚ8 ?
(
ÚÚ? @
elem
ÚÚ@ D
=>
ÚÚE G
{
ÛÛ 
buffer
ÜÜ 
+=
ÜÜ 
elem
ÜÜ "
+
ÜÜ# $
$str
ÜÜ% )
;
ÜÜ) *
}
ÝÝ 
)
ÝÝ 
;
ÝÝ 
nsec
ßß 
.
ßß 
AddFile
ßß 
(
ßß 
$str
ßß ,
,
ßß, -
System
ßß. 4
.
ßß4 5
Text
ßß5 9
.
ßß9 :
Encoding
ßß: B
.
ßßB C
UTF8
ßßC G
.
ßßG H
GetBytes
ßßH P
(
ßßP Q
buffer
ßßQ W
)
ßßW X
)
ßßX Y
;
ßßY Z
}
àà 
nsec
ââ 
.
ââ 
AddFile
ââ 
(
ââ 
$str
ââ '
,
ââ' (
System
ââ) /
.
ââ/ 0
Text
ââ0 4
.
ââ4 5
Encoding
ââ5 =
.
ââ= >
UTF8
ââ> B
.
ââB C
GetBytes
ââC K
(
ââK L
AutoDownload
ââL X
?
ââY Z
$str
ââ[ a
:
ââb c
$str
ââd k
)
ââk l
)
ââl m
;
ââm n
nsec
ää 
.
ää 
AddFile
ää 
(
ää 
$str
ää *
,
ää* +
System
ää, 2
.
ää2 3
Text
ää3 7
.
ää7 8
Encoding
ää8 @
.
ää@ A
UTF8
ääA E
.
ääE F
GetBytes
ääF N
(
ääN O
IgnoreAutoFocus
ääO ^
?
ää_ `
$str
ääa g
:
ääh i
$str
ääj q
)
ääq r
)
äär s
;
ääs t
File
ææ 
.
ææ 
WriteAllBytes
ææ 
(
ææ 
DataPath
ææ '
+
ææ( )
$str
ææ* :
,
ææ: ;
nsec
ææ< @
.
ææ@ A
Save
ææA E
(
ææE F
)
ææF G
)
ææG H
;
ææH I
nsec
èè 
.
èè 
Dispose
èè 
(
èè 
)
èè 
;
èè 
}
éé 	
public
ëë 
void
ëë 
SaveTags
ëë 
(
ëë 
)
ëë 
{
ìì 	
if
íí 
(
íí 
	AudioTags
íí 
.
íí 
Count
íí 
>
íí  !
$num
íí" #
)
íí# $
{
îî 
NSEC2
ïï 
nsec
ïï 
=
ïï 
new
ïï  
NSEC2
ïï! &
(
ïï& '
	NSEC_HASH
ïï' 0
)
ïï0 1
;
ïï1 2
nsec
ðð 
.
ðð 
SetDebug
ðð 
(
ðð 
false
ðð #
)
ðð# $
;
ðð$ %
int
òò 
counter
òò 
=
òò 
$num
òò 
;
òò  
string
óó 
buffer
óó 
=
óó 
$str
óó  "
;
óó" #
	AudioTags
õõ 
.
õõ 
Keys
õõ 
.
õõ 
ForEach
õõ &
(
õõ& '
filepath
õõ' /
=>
õõ0 2
{
öö 
MediaSourceTag
÷÷ "
mediaSource
÷÷# .
=
÷÷/ 0
	AudioTags
÷÷1 :
[
÷÷: ;
filepath
÷÷; C
]
÷÷C D
;
÷÷D E
string
ùù 
name
ùù 
=
ùù  !
$str
ùù" )
+
ùù* +
counter
ùù, 3
;
ùù3 4
nsec
úú 
.
úú 
AddFile
úú  
(
úú  !
name
úú! %
,
úú% &
mediaSource
úú' 2
.
úú2 3
Image
úú3 8
??
úú9 ;
(
úú< =
new
úú= @
byte
úúA E
[
úúE F
$num
úúF G
]
úúG H
)
úúH I
)
úúI J
;
úúJ K
string
üü 

bufferItem
üü %
=
üü& '
filepath
üü( 0
+
üü1 2
	SEPARATOR
üü3 <
+
üü= >
mediaSource
üü? J
.
üüJ K
Author
üüK Q
+
üüR S
	SEPARATOR
üüT ]
+
üü^ _
mediaSource
üü` k
.
üük l
Title
üül q
+
üür s
	SEPARATOR
üüt }
+
üü~ 
nameüü 
;üü 

bufferItem
þþ 
+=
þþ !
	SEPARATOR
þþ" +
+
þþ, -
mediaSource
þþ. 9
.
þþ9 :
Id
þþ: <
;
þþ< =
if
 
(
 
mediaSource
 "
.
" #
TempDuration
# /
==
0 2
null
3 7
)
7 8
{
 

bufferItem
 "
+=
# %
	SEPARATOR
& /
+
0 1
$str
2 5
;
5 6
}
 
else
 
{
 

bufferItem
 "
+=
# %
	SEPARATOR
& /
+
0 1
mediaSource
2 =
.
= >
TempDuration
> J
.
J K
TotalMilliseconds
K \
;
\ ]
}
 

bufferItem
 
+=
 !
$str
" &
;
& '
buffer
 
+=
 

bufferItem
 (
;
( )
counter
 
+=
 
$num
  
;
  !
}
 
)
 
;
 
nsec
 
.
 
AddFile
 
(
 
$str
 #
,
# $
System
% +
.
+ ,
Text
, 0
.
0 1
Encoding
1 9
.
9 :
UTF8
: >
.
> ?
GetBytes
? G
(
G H
buffer
H N
)
N O
)
O P
;
P Q
File
 
.
 
WriteAllBytes
 "
(
" #
DataPath
# +
+
, -
$str
. B
,
B C
nsec
D H
.
H I
Save
I M
(
M N
)
N O
)
O P
;
P Q
}
 
}
 	
public
 
void
 
LoadTags
 
(
 
)
 
{
 	
if
 
(
 
File
 
.
 
Exists
 
(
 
DataPath
 $
+
% &
$str
' ;
)
; <
)
< =
{
 
	AudioTags
 
.
 
Clear
 
(
  
)
  !
;
! "

FileStream
 

fileStream
 %
=
& '
File
( ,
.
, -
OpenRead
- 5
(
5 6
DataPath
6 >
+
? @
$str
A U
)
U V
;
V W
NSEC2
 
nsec
 
=
 
new
  
NSEC2
! &
(
& '
	NSEC_HASH
' 0
)
0 1
;
1 2
nsec
 
.
 
Load
 
(
 

fileStream
 $
)
$ %
;
% &
nsec
 
.
 
SetDebug
 
(
 
false
 #
)
# $
;
$ %
string
 
[
 
]
 
tags
 
=
 
System
  &
.
& '
Text
' +
.
+ ,
Encoding
, 4
.
4 5
UTF8
5 9
.
9 :
	GetString
: C
(
C D
nsec
D H
.
H I
Get
I L
(
L M
nsec
M Q
.
Q R
Exists
R X
(
X Y
$str
Y _
)
_ `
?
a b
$str
c i
:
j k
$str
l r
)
r s
)
s t
.
t u
Split
u z
(
z {
$char
{ 
, "
StringSplitOptions 
. "
RemoveEmptyEntries ¦
)¦ §
;§ ¨
tags
   
.
   
ForEach
   
(
   
tagItem
   $
=>
  % '
{
¡¡ 
string
¢¢ 
[
¢¢ 
]
¢¢ 
values
¢¢ #
=
¢¢$ %
tagItem
¢¢& -
.
¢¢- .
Split
¢¢. 3
(
¢¢3 4
	SEPARATOR
¢¢4 =
)
¢¢= >
;
¢¢> ?
Debug
££ 
.
££ 
	WriteLine
££ #
(
££# $
$str
££$ 4
+
££5 6
values
££7 =
[
££= >
$num
££> ?
]
££? @
)
££@ A
;
££A B
MediaSourceTag
¥¥ "
tag
¥¥# &
=
¥¥' (
new
¥¥) ,
MediaSourceTag
¥¥- ;
(
¥¥; <
)
¥¥< =
{
¦¦ 
Author
§§ 
=
§§  
values
§§! '
[
§§' (
$num
§§( )
]
§§) *
,
§§* +
Title
¨¨ 
=
¨¨ 
values
¨¨  &
[
¨¨& '
$num
¨¨' (
]
¨¨( )
,
¨¨) *
Id
©© 
=
©© 
values
©© #
.
©©# $
Length
©©$ *
>
©©+ ,
$num
©©- .
?
©©/ 0
values
©©1 7
[
©©7 8
$num
©©8 9
]
©©9 :
:
©©; <
null
©©= A
,
©©A B
TempDuration
ªª $
=
ªª% &
values
ªª' -
.
ªª- .
Length
ªª. 4
>
ªª5 6
$num
ªª7 8
?
ªª9 :
TimeSpan
ªª; C
.
ªªC D
FromMilliseconds
ªªD T
(
ªªT U
double
ªªU [
.
ªª[ \
Parse
ªª\ a
(
ªªa b
values
ªªb h
[
ªªh i
$num
ªªi j
]
ªªj k
)
ªªk l
)
ªªl m
:
ªªn o
TimeSpan
ªªp x
.
ªªx y
Zero
ªªy }
}
«« 
;
«« 
nsec
­­ 
.
­­ 
TryGet
­­ 
(
­­  
values
­­  &
[
­­& '
$num
­­' (
]
­­( )
,
­­) *
out
­­+ .
byte
­­/ 3
[
­­3 4
]
­­4 5
data
­­6 :
)
­­: ;
;
­­; <
tag
®® 
.
®® 
Image
®® 
=
®® 
data
®®  $
;
®®$ %
if
°° 
(
°° 
values
°° 
.
°° 
Length
°° %
>
°°& '
$num
°°( )
&&
°°* ,
!
°°- .
DownloadedIds
°°. ;
.
°°; <
Contains
°°< D
(
°°D E
values
°°E K
[
°°K L
$num
°°L M
]
°°M N
)
°°N O
&&
°°P R
File
°°S W
.
°°W X
Exists
°°X ^
(
°°^ _
values
°°_ e
[
°°e f
$num
°°f g
]
°°g h
)
°°h i
)
°°i j
DownloadedIds
±± %
.
±±% &
Add
±±& )
(
±±) *
values
±±* 0
[
±±0 1
$num
±±1 2
]
±±2 3
)
±±3 4
;
±±4 5
	AudioTags
³³ 
.
³³ 
Add
³³ !
(
³³! "
values
³³" (
[
³³( )
$num
³³) *
]
³³* +
,
³³+ ,
tag
³³- 0
)
³³0 1
;
³³1 2
}
´´ 
)
´´ 
;
´´ 
nsec
¶¶ 
.
¶¶ 
Dispose
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
·· 
}
¸¸ 	
public
ºº 
void
ºº 
SaveSavedTracks
ºº #
(
ºº# $
)
ºº$ %
{
»» 	
if
¼¼ 
(
¼¼ 
SavedTracks
¼¼ 
.
¼¼ 
Count
¼¼  
>
¼¼! "
$num
¼¼# $
)
¼¼$ %
{
½½ 
NSEC2
¾¾ 
nsec
¾¾ 
=
¾¾ 
new
¾¾  
NSEC2
¾¾! &
(
¾¾& '
	NSEC_HASH
¾¾' 0
)
¾¾0 1
;
¾¾1 2
nsec
¿¿ 
.
¿¿ 
SetDebug
¿¿ 
(
¿¿ 
false
¿¿ #
)
¿¿# $
;
¿¿$ %
int
ÁÁ 
counter
ÁÁ 
=
ÁÁ 
$num
ÁÁ 
;
ÁÁ  
StringBuilder
ÂÂ 
buffer
ÂÂ $
=
ÂÂ% &
new
ÂÂ' *
StringBuilder
ÂÂ+ 8
(
ÂÂ8 9
)
ÂÂ9 :
;
ÂÂ: ;
SavedTracks
ÄÄ 
.
ÄÄ 
ForEach
ÄÄ #
(
ÄÄ# $
keypair
ÄÄ$ +
=>
ÄÄ, .
{
ÅÅ 
string
ÆÆ 
	imageName
ÆÆ $
=
ÆÆ% &
$str
ÆÆ' .
+
ÆÆ/ 0
counter
ÆÆ1 8
;
ÆÆ8 9
nsec
ÇÇ 
.
ÇÇ 
AddFile
ÇÇ  
(
ÇÇ  !
	imageName
ÇÇ! *
,
ÇÇ* +
keypair
ÇÇ, 3
.
ÇÇ3 4
Value
ÇÇ4 9
.
ÇÇ9 :
Image
ÇÇ: ?
??
ÇÇ@ B
new
ÇÇC F
byte
ÇÇG K
[
ÇÇK L
$num
ÇÇL M
]
ÇÇM N
)
ÇÇN O
;
ÇÇO P
buffer
ÈÈ 
.
ÈÈ 

AppendLine
ÈÈ %
(
ÈÈ% &
keypair
ÈÈ& -
.
ÈÈ- .
Key
ÈÈ. 1
+
ÈÈ2 3
	SEPARATOR
ÈÈ4 =
+
ÈÈ> ?
keypair
ÈÈ@ G
.
ÈÈG H
Value
ÈÈH M
.
ÈÈM N
Artist
ÈÈN T
+
ÈÈU V
	SEPARATOR
ÈÈW `
+
ÈÈa b
keypair
ÈÈc j
.
ÈÈj k
Value
ÈÈk p
.
ÈÈp q
Title
ÈÈq v
+
ÈÈv w
	SEPARATORÈÈw 
+ÈÈ 
	imageNameÈÈ 
)ÈÈ 
;ÈÈ 
counter
ÉÉ 
++
ÉÉ 
;
ÉÉ 
}
ÊÊ 
)
ÊÊ 
;
ÊÊ 
nsec
ÌÌ 
.
ÌÌ 
AddFile
ÌÌ 
(
ÌÌ 
$str
ÌÌ #
,
ÌÌ# $
Encoding
ÌÌ% -
.
ÌÌ- .
UTF8
ÌÌ. 2
.
ÌÌ2 3
GetBytes
ÌÌ3 ;
(
ÌÌ; <
buffer
ÌÌ< B
.
ÌÌB C
ToString
ÌÌC K
(
ÌÌK L
)
ÌÌL M
)
ÌÌM N
)
ÌÌN O
;
ÌÌO P
File
ÍÍ 
.
ÍÍ 
WriteAllBytes
ÍÍ "
(
ÍÍ" #
DataPath
ÍÍ# +
+
ÍÍ, -
$str
ÍÍ. I
,
ÍÍI J
nsec
ÍÍK O
.
ÍÍO P
Save
ÍÍP T
(
ÍÍT U
)
ÍÍU V
)
ÍÍV W
;
ÍÍW X
nsec
ÎÎ 
.
ÎÎ 
Dispose
ÎÎ 
(
ÎÎ 
)
ÎÎ 
;
ÎÎ 
}
ÏÏ 
}
ÐÐ 	
public
ÒÒ 
void
ÒÒ 
LoadSavedTracks
ÒÒ #
(
ÒÒ# $
)
ÒÒ$ %
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
File
ÔÔ 
.
ÔÔ 
Exists
ÔÔ 
(
ÔÔ 
DataPath
ÔÔ #
+
ÔÔ# $
$str
ÔÔ$ ?
)
ÔÔ? @
)
ÔÔ@ A
{
ÕÕ 
NSEC2
ÖÖ 
nsec
ÖÖ 
=
ÖÖ 
new
ÖÖ  
NSEC2
ÖÖ! &
(
ÖÖ& '
	NSEC_HASH
ÖÖ' 0
)
ÖÖ0 1
;
ÖÖ1 2
nsec
×× 
.
×× 
SetDebug
×× 
(
×× 
false
×× #
)
××# $
;
××$ %
nsec
ØØ 
.
ØØ 
Load
ØØ 
(
ØØ 
File
ØØ 
.
ØØ 
OpenRead
ØØ '
(
ØØ' (
DataPath
ØØ( 0
+
ØØ1 2
$str
ØØ3 N
)
ØØN O
)
ØØO P
;
ØØP Q
byte
ÙÙ 
[
ÙÙ 
]
ÙÙ 

bufferData
ÙÙ !
=
ÙÙ" #
nsec
ÙÙ$ (
.
ÙÙ( )
Get
ÙÙ) ,
(
ÙÙ, -
$str
ÙÙ- 3
)
ÙÙ3 4
;
ÙÙ4 5
string
ÚÚ 
[
ÚÚ 
]
ÚÚ 
data
ÚÚ 
=
ÚÚ 
Encoding
ÚÚ  (
.
ÚÚ( )
UTF8
ÚÚ) -
.
ÚÚ- .
	GetString
ÚÚ. 7
(
ÚÚ7 8

bufferData
ÚÚ8 B
)
ÚÚB C
.
ÚÚC D
Split
ÚÚD I
(
ÚÚI J
$char
ÚÚJ N
,
ÚÚN O 
StringSplitOptions
ÚÚP b
.
ÚÚb c 
RemoveEmptyEntries
ÚÚc u
)
ÚÚu v
;
ÚÚv w
foreach
ÜÜ 
(
ÜÜ 
var
ÜÜ 
dataLine
ÜÜ $
in
ÜÜ% '
data
ÜÜ( ,
)
ÜÜ, -
{
ÝÝ 
string
ÞÞ 
[
ÞÞ 
]
ÞÞ 
elems
ÞÞ "
=
ÞÞ# $
dataLine
ÞÞ% -
.
ÞÞ- .
Split
ÞÞ. 3
(
ÞÞ3 4
	SEPARATOR
ÞÞ4 =
)
ÞÞ= >
;
ÞÞ> ?
MediaSource
ßß 
	newSource
ßß  )
=
ßß* +
new
ßß, /
MediaSource
ßß0 ;
(
ßß; <
)
ßß< =
{
àà 
FilePath
áá  
=
áá! "
elems
áá# (
[
áá( )
$num
áá) *
]
áá* +
,
áá+ ,
Artist
ââ 
=
ââ  
elems
ââ! &
[
ââ& '
$num
ââ' (
]
ââ( )
,
ââ) *
Title
ãã 
=
ãã 
elems
ãã  %
[
ãã% &
$num
ãã& '
]
ãã' (
}
ää 
;
ää 
if
ææ 
(
ææ 
nsec
ææ 
.
ææ 
TryGet
ææ "
(
ææ" #
elems
ææ# (
[
ææ( )
$num
ææ) *
]
ææ* +
,
ææ+ ,
out
ææ- 0
byte
ææ1 5
[
ææ5 6
]
ææ6 7
	imageData
ææ8 A
)
ææA B
)
ææB C
{
çç 
	newSource
èè !
.
èè! "
Image
èè" '
=
èè( )
	imageData
èè* 3
;
èè3 4
}
éé 
SavedTracks
ëë 
.
ëë  
Add
ëë  #
(
ëë# $
elems
ëë$ )
[
ëë) *
$num
ëë* +
]
ëë+ ,
,
ëë, -
	newSource
ëë. 7
)
ëë7 8
;
ëë8 9
}
ìì 
nsec
îî 
.
îî 
Dispose
îî 
(
îî 
)
îî 
;
îî 
}
ïï 
}
ðð 	
}
òò 
}óó Ëõ
=D:\Projekty\CS\Newtone\Newtone.Core\Languages\Localization.cs
	namespace 	
Newtone
 
. 
Core 
. 
	Languages  
{ 
public 

class 
Localization 
{ 
private 
static 
LocalizationBase '
CurrentLocalization( ;
=< =
GetCurrentLanguage> P
(P Q
)Q R
;R S
private		 
static		 
LocalizationBase		 '
GetCurrentLanguage		( :
(		: ;
)		; <
{

 	
string 
culture 
= 

GlobalData '
.' (
Current( /
./ 0
CurrentLanguage0 ?
??@ B
CultureInfoC N
.N O
CurrentCultureO ]
.] ^
Name^ b
;b c
if 
( 
culture 
. 
ToLower 
(  
)  !
.! "
Contains" *
(* +
$str+ /
)/ 0
)0 1
return 
new 
LocalizationPL )
() *
)* +
;+ ,
else 
if 
( 
culture 
. 
ToLower $
($ %
)% &
.& '
Contains' /
(/ 0
$str0 4
)4 5
||6 8
culture9 @
.@ A
ToLowerA H
(H I
)I J
.J K
ContainsK S
(S T
$strT X
)X Y
||Z \
culture] d
.d e
ToLowere l
(l m
)m n
.n o
Containso w
(w x
$strx |
)| }
)} ~
return 
new 
LocalizationRU )
() *
)* +
;+ ,
else 
return 
new 
LocalizationEN )
() *
)* +
;+ ,
} 	
public 
static 
void 
RefreshLanguage *
(* +
)+ ,
{ 	
CurrentLocalization 
=  !
GetCurrentLanguage" 4
(4 5
)5 6
;6 7
} 	
public 
static 
string 
AboutAuthor  
{! "
get# &
{' (
return) /
CurrentLocalization0 C
.C D
AboutAuthorD O
;O P
}Q R
}S T
public   
static   
string   
	AboutDesc   
{    
get  ! $
{  % &
return  ' -
CurrentLocalization  . A
.  A B
	AboutDesc  B K
;  K L
}  M N
}  O P
public$$ 
static$$ 
string$$ 
AboutWWW$$ 
{$$ 
get$$  #
{$$$ %
return$$& ,
CurrentLocalization$$- @
.$$@ A
AboutWWW$$A I
;$$I J
}$$K L
}$$M N
public(( 
static(( 
string(( 
Add(( 
{(( 
get(( 
{((  
return((! '
CurrentLocalization((( ;
.((; <
Add((< ?
;((? @
}((A B
}((C D
public,, 
static,, 
string,, 
AddTags,, 
{,, 
get,, "
{,,# $
return,,% +
CurrentLocalization,,, ?
.,,? @
AddTags,,@ G
;,,G H
},,I J
},,K L
public00 
static00 
string00 
Artist00 
{00 
get00 !
{00" #
return00$ *
CurrentLocalization00+ >
.00> ?
Artist00? E
;00E F
}00G H
}00I J
public44 
static44 
string44 
Artists44 
{44 
get44 "
{44# $
return44% +
CurrentLocalization44, ?
.44? @
Artists44@ G
;44G H
}44I J
}44K L
public88 
static88 
string88 
AutoConvert88  
{88! "
get88# &
{88' (
return88) /
CurrentLocalization880 C
.88C D
AutoConvert88D O
;88O P
}88Q R
}88S T
public<< 
static<< 
string<< 
AutoDownload<< !
{<<" #
get<<$ '
{<<( )
return<<* 0
CurrentLocalization<<1 D
.<<D E
AutoDownload<<E Q
;<<Q R
}<<S T
}<<U V
public@@ 
static@@ 
string@@ 
BackPressed@@  
{@@! "
get@@# &
{@@' (
return@@) /
CurrentLocalization@@0 C
.@@C D
BackPressed@@D O
;@@O P
}@@Q R
}@@S T
publicDD 
staticDD 
stringDD 
CancelDD 
{DD 
getDD !
{DD" #
returnDD$ *
CurrentLocalizationDD+ >
.DD> ?
CancelDD? E
;DDE F
}DDG H
}DDI J
publicHH 
staticHH 
stringHH 

ChangeNameHH 
{HH  !
getHH" %
{HH& '
returnHH( .
CurrentLocalizationHH/ B
.HHB C

ChangeNameHHC M
;HHM N
}HHO P
}HHQ R
publicLL 
staticLL 
stringLL 
ChoosePlaylistLL #
{LL$ %
getLL& )
{LL* +
returnLL, 2
CurrentLocalizationLL3 F
.LLF G
ChoosePlaylistLLG U
;LLU V
}LLW X
}LLY Z
publicPP 
staticPP 
stringPP 
ClearPP 
{PP 
getPP  
{PP! "
returnPP# )
CurrentLocalizationPP* =
.PP= >
ClearPP> C
;PPC D
}PPE F
}PPG H
publicTT 
staticTT 
stringTT 
ConnectTT 
{TT 
getTT "
{TT# $
returnTT% +
CurrentLocalizationTT, ?
.TT? @
ConnectTT@ G
;TTG H
}TTI J
}TTK L
publicXX 
staticXX 
stringXX 

ConversionXX 
{XX  !
getXX" %
{XX& '
returnXX( .
CurrentLocalizationXX/ B
.XXB C

ConversionXXC M
;XXM N
}XXO P
}XXQ R
public\\ 
static\\ 
string\\  
ConversionInputFiles\\ )
{\\* +
get\\, /
{\\0 1
return\\2 8
CurrentLocalization\\9 L
.\\L M 
ConversionInputFiles\\M a
;\\a b
}\\c d
}\\e f
public`` 
static`` 
string`` "
ConversionOutputFolder`` +
{``, -
get``. 1
{``2 3
return``4 :
CurrentLocalization``; N
.``N O"
ConversionOutputFolder``O e
;``e f
}``g h
}``i j
publicdd 
staticdd 
stringdd "
ConversionOutputFormatdd +
{dd, -
getdd. 1
{dd2 3
returndd4 :
CurrentLocalizationdd; N
.ddN O"
ConversionOutputFormatddO e
;dde f
}ddg h
}ddi j
publichh 
statichh 
stringhh 
Converthh 
{hh 
gethh "
{hh# $
returnhh% +
CurrentLocalizationhh, ?
.hh? @
Converthh@ G
;hhG H
}hhI J
}hhK L
publicll 
staticll 
stringll 
Coverll 
{ll 
getll  
{ll! "
returnll# )
CurrentLocalizationll* =
.ll= >
Coverll> C
;llC D
}llE F
}llG H
publicpp 
staticpp 
stringpp 
	CoverLoadpp 
{pp  
getpp! $
{pp% &
returnpp' -
CurrentLocalizationpp. A
.ppA B
	CoverLoadppB K
;ppK L
}ppM N
}ppO P
publictt 
statictt 
stringtt 
	CoverSavett 
{tt  
gettt! $
{tt% &
returntt' -
CurrentLocalizationtt. A
.ttA B
	CoverSavettB K
;ttK L
}ttM N
}ttO P
publicxx 
staticxx 
stringxx 

Disconnectxx 
{xx  !
getxx" %
{xx& '
returnxx( .
CurrentLocalizationxx/ B
.xxB C

DisconnectxxC M
;xxM N
}xxO P
}xxQ R
public|| 
static|| 
string|| 
Download|| 
{|| 
get||  #
{||$ %
return||& ,
CurrentLocalization||- @
.||@ A
Download||A I
;||I J
}||K L
}||M N
public 
static
 
string
 
FileCorrupted
 "
{
# $
get
% (
{
) *
return
+ 1!
CurrentLocalization
2 E
.
E F
FileCorrupted
F S
;
S T
}
U V
}
W X
public 
static
 
string
 
FileDownloaded
 #
{
$ %
get
& )
{
* +
return
, 2!
CurrentLocalization
3 F
.
F G
FileDownloaded
G U
;
U V
}
W X
}
Y Z
public 
static
 
string
 
FolderExists
 !
{
" #
get
$ '
{
( )
return
* 0!
CurrentLocalization
1 D
.
D E
FolderExists
E Q
;
Q R
}
S T
}
U V
public 
static
 
string
 
Informations
 !
{
" #
get
$ '
{
( )
return
* 0!
CurrentLocalization
1 D
.
D E
Informations
E Q
;
Q R
}
S T
}
U V
public 
static
 
string
 
Instruction
  
{
! "
get
# &
{
' (
return
) /!
CurrentLocalization
0 C
.
C D
Instruction
D O
;
O P
}
Q R
}
S T
public 
static
 
string
 

LanguageEN
 
{
  !
get
" %
{
& '
return
( .!
CurrentLocalization
/ B
.
B C

LanguageEN
C M
;
M N
}
O P
}
Q R
public 
static
 
string
 

LanguagePL
 
{
  !
get
" %
{
& '
return
( .!
CurrentLocalization
/ B
.
B C

LanguagePL
C M
;
M N
}
O P
}
Q R
public 
static
 
string
 

LanguageRU
 
{
  !
get
" %
{
& '
return
( .!
CurrentLocalization
/ B
.
B C

LanguageRU
C M
;
M N
}
O P
}
Q R
public   
static
   
string
   
	LastViews
   
{
    
get
  ! $
{
  % &
return
  ' -!
CurrentLocalization
  . A
.
  A B
	LastViews
  B K
;
  K L
}
  M N
}
  O P
public¤¤ 
static
¤¤ 
string
¤¤ 
Library
¤¤ 
{
¤¤ 
get
¤¤ "
{
¤¤# $
return
¤¤% +!
CurrentLocalization
¤¤, ?
.
¤¤? @
Library
¤¤@ G
;
¤¤G H
}
¤¤I J
}
¤¤K L
public¨¨ 
static
¨¨ 
string
¨¨ 
MainPage
¨¨ 
{
¨¨ 
get
¨¨  #
{
¨¨$ %
return
¨¨& ,!
CurrentLocalization
¨¨- @
.
¨¨@ A
MainPage
¨¨A I
;
¨¨I J
}
¨¨K L
}
¨¨M N
public¬¬ 
static
¬¬ 
string
¬¬ 
	MostViews
¬¬ 
{
¬¬  
get
¬¬! $
{
¬¬% &
return
¬¬' -!
CurrentLocalization
¬¬. A
.
¬¬A B
	MostViews
¬¬B K
;
¬¬K L
}
¬¬M N
}
¬¬O P
public°° 
static
°° 
string
°° 
NewPlaylist
°°  
{
°°! "
get
°°# &
{
°°' (
return
°°) /!
CurrentLocalization
°°0 C
.
°°C D
NewPlaylist
°°D O
;
°°O P
}
°°Q R
}
°°S T
public´´ 
static
´´ 
string
´´ 
NewPlaylistHint
´´ $
{
´´% &
get
´´' *
{
´´+ ,
return
´´- 3!
CurrentLocalization
´´4 G
.
´´G H
NewPlaylistHint
´´H W
;
´´W X
}
´´Y Z
}
´´[ \
public¸¸ 
static
¸¸ 
string
¸¸ 
Next
¸¸ 
{
¸¸ 
get
¸¸ 
{
¸¸  !
return
¸¸" (!
CurrentLocalization
¸¸) <
.
¸¸< =
Next
¸¸= A
;
¸¸A B
}
¸¸C D
}
¸¸E F
public¼¼ 
static
¼¼ 
string
¼¼ 
No
¼¼ 
{
¼¼ 
get
¼¼ 
{
¼¼ 
return
¼¼  &!
CurrentLocalization
¼¼' :
.
¼¼: ;
No
¼¼; =
;
¼¼= >
}
¼¼? @
}
¼¼A B
publicÀÀ 
static
ÀÀ 
string
ÀÀ 
NoConnection
ÀÀ !
{
ÀÀ" #
get
ÀÀ$ '
{
ÀÀ( )
return
ÀÀ* 0!
CurrentLocalization
ÀÀ1 D
.
ÀÀD E
NoConnection
ÀÀE Q
;
ÀÀQ R
}
ÀÀS T
}
ÀÀU V
publicÄÄ 
static
ÄÄ 
string
ÄÄ 
NoDownloads
ÄÄ  
{
ÄÄ! "
get
ÄÄ# &
{
ÄÄ' (
return
ÄÄ) /!
CurrentLocalization
ÄÄ0 C
.
ÄÄC D
NoDownloads
ÄÄD O
;
ÄÄO P
}
ÄÄQ R
}
ÄÄS T
publicÈÈ 
static
ÈÈ 
string
ÈÈ 
PermissionGrant
ÈÈ $
{
ÈÈ% &
get
ÈÈ' *
{
ÈÈ+ ,
return
ÈÈ- 3!
CurrentLocalization
ÈÈ4 G
.
ÈÈG H
PermissionGrant
ÈÈH W
;
ÈÈW X
}
ÈÈY Z
}
ÈÈ[ \
publicÌÌ 
static
ÌÌ 
string
ÌÌ 
PermissionInfo
ÌÌ #
{
ÌÌ$ %
get
ÌÌ& )
{
ÌÌ* +
return
ÌÌ, 2!
CurrentLocalization
ÌÌ3 F
.
ÌÌF G
PermissionInfo
ÌÌG U
;
ÌÌU V
}
ÌÌW X
}
ÌÌY Z
publicÐÐ 
static
ÐÐ 
string
ÐÐ 
Playlist
ÐÐ 
{
ÐÐ 
get
ÐÐ  #
{
ÐÐ$ %
return
ÐÐ& ,!
CurrentLocalization
ÐÐ- @
.
ÐÐ@ A
Playlist
ÐÐA I
;
ÐÐI J
}
ÐÐK L
}
ÐÐM N
publicÔÔ 
static
ÔÔ 
string
ÔÔ 
PlaylistDownload
ÔÔ %
{
ÔÔ& '
get
ÔÔ( +
{
ÔÔ, -
return
ÔÔ. 4!
CurrentLocalization
ÔÔ5 H
.
ÔÔH I
PlaylistDownload
ÔÔI Y
;
ÔÔY Z
}
ÔÔ[ \
}
ÔÔ] ^
publicØØ 
static
ØØ 
string
ØØ 
PlaylistExists
ØØ #
{
ØØ$ %
get
ØØ& )
{
ØØ* +
return
ØØ, 2!
CurrentLocalization
ØØ3 F
.
ØØF G
PlaylistExists
ØØG U
;
ØØU V
}
ØØW X
}
ØØY Z
publicÜÜ 
static
ÜÜ 
string
ÜÜ 
PlaylistOrTrack
ÜÜ $
{
ÜÜ% &
get
ÜÜ' *
{
ÜÜ+ ,
return
ÜÜ- 3!
CurrentLocalization
ÜÜ4 G
.
ÜÜG H
PlaylistOrTrack
ÜÜH W
;
ÜÜW X
}
ÜÜY Z
}
ÜÜ[ \
publicàà 
static
àà 
string
àà 
PlaylistPlay
àà !
{
àà" #
get
àà$ '
{
àà( )
return
àà* 0!
CurrentLocalization
àà1 D
.
ààD E
PlaylistPlay
ààE Q
;
ààQ R
}
ààS T
}
ààU V
publicää 
static
ää 
string
ää 
	Playlists
ää 
{
ää  
get
ää! $
{
ää% &
return
ää' -!
CurrentLocalization
ää. A
.
ääA B
	Playlists
ääB K
;
ääK L
}
ääM N
}
ääO P
publicèè 
static
èè 
string
èè 
Progress
èè 
{
èè 
get
èè  #
{
èè$ %
return
èè& ,!
CurrentLocalization
èè- @
.
èè@ A
Progress
èèA I
;
èèI J
}
èèK L
}
èèM N
publicìì 
static
ìì 
string
ìì 
Question
ìì 
{
ìì 
get
ìì  #
{
ìì$ %
return
ìì& ,!
CurrentLocalization
ìì- @
.
ìì@ A
Question
ììA I
;
ììI J
}
ììK L
}
ììM N
publicðð 
static
ðð 
string
ðð 
QuestionDelete
ðð #
{
ðð$ %
get
ðð& )
{
ðð* +
return
ðð, 2!
CurrentLocalization
ðð3 F
.
ððF G
QuestionDelete
ððG U
;
ððU V
}
ððW X
}
ððY Z
publicôô 
static
ôô 
string
ôô (
QuestionDeleteFromPlaylist
ôô /
{
ôô0 1
get
ôô2 5
{
ôô6 7
return
ôô8 >!
CurrentLocalization
ôô? R
.
ôôR S(
QuestionDeleteFromPlaylist
ôôS m
;
ôôm n
}
ôôo p
}
ôôq r
publicøø 
static
øø 
string
øø $
QuestionDeletePlaylist
øø +
{
øø, -
get
øø. 1
{
øø2 3
return
øø4 :!
CurrentLocalization
øø; N
.
øøN O$
QuestionDeletePlaylist
øøO e
;
øøe f
}
øøg h
}
øøi j
publicüü 
static
üü 
string
üü %
QuestionDeletePlaylistg
üü ,
{
üü- .
get
üü/ 2
{
üü3 4
return
üü5 ;!
CurrentLocalization
üü< O
.
üüO P%
QuestionDeletePlaylistg
üüP g
;
üüg h
}
üüi j
}
üük l
public 
static
 
string
 
Ready
 
{
 
get
  
{
! "
return
# )!
CurrentLocalization
* =
.
= >
Ready
> C
;
C D
}
E F
}
G H
public 
static
 
string
 
Receive
 
{
 
get
 "
{
# $
return
% +!
CurrentLocalization
, ?
.
? @
Receive
@ G
;
G H
}
I J
}
K L
public 
static
 
string
 
ReceiverCode
 !
{
" #
get
$ '
{
( )
return
* 0!
CurrentLocalization
1 D
.
D E
ReceiverCode
E Q
;
Q R
}
S T
}
U V
public 
static
 
string
 
ReplaceWithExists
 &
{
' (
get
) ,
{
- .
return
/ 5!
CurrentLocalization
6 I
.
I J
ReplaceWithExists
J [
;
[ \
}
] ^
}
_ `
public 
static
 
string
 
Save
 
{
 
get
 
{
  !
return
" (!
CurrentLocalization
) <
.
< =
Save
= A
;
A B
}
C D
}
E F
public 
static
 
string
 
Search
 
{
 
get
 !
{
" #
return
$ *!
CurrentLocalization
+ >
.
> ?
Search
? E
;
E F
}
G H
}
I J
public 
static
 
string
 
SearchHistory
 "
{
# $
get
% (
{
) *
return
+ 1!
CurrentLocalization
2 E
.
E F
SearchHistory
F S
;
S T
}
U V
}
W X
public 
static
 
string
 
	Searching
 
{
  
get
! $
{
% &
return
' -!
CurrentLocalization
. A
.
A B
	Searching
B K
;
K L
}
M N
}
O P
public   
static
   
string
   
	SearchTip
   
{
    
get
  ! $
{
  % &
return
  ' -!
CurrentLocalization
  . A
.
  A B
	SearchTip
  B K
;
  K L
}
  M N
}
  O P
public¤¤ 
static
¤¤ 
string
¤¤ 
Select
¤¤ 
{
¤¤ 
get
¤¤ !
{
¤¤" #
return
¤¤$ *!
CurrentLocalization
¤¤+ >
.
¤¤> ?
Select
¤¤? E
;
¤¤E F
}
¤¤G H
}
¤¤I J
public¨¨ 
static
¨¨ 
string
¨¨ 
SelectFolder
¨¨ !
{
¨¨" #
get
¨¨$ '
{
¨¨( )
return
¨¨* 0!
CurrentLocalization
¨¨1 D
.
¨¨D E
SelectFolder
¨¨E Q
;
¨¨Q R
}
¨¨S T
}
¨¨U V
public¬¬ 
static
¬¬ 
string
¬¬ 
Send
¬¬ 
{
¬¬ 
get
¬¬ 
{
¬¬  !
return
¬¬" (!
CurrentLocalization
¬¬) <
.
¬¬< =
Send
¬¬= A
;
¬¬A B
}
¬¬C D
}
¬¬E F
public°° 
static
°° 
string
°° 
Settings
°° 
{
°° 
get
°°  #
{
°°$ %
return
°°& ,!
CurrentLocalization
°°- @
.
°°@ A
Settings
°°A I
;
°°I J
}
°°K L
}
°°M N
public´´ 
static
´´ 
string
´´ 
	Settings0
´´ 
{
´´  
get
´´! $
{
´´% &
return
´´' -!
CurrentLocalization
´´. A
.
´´A B
	Settings0
´´B K
;
´´K L
}
´´M N
}
´´O P
public¸¸ 
static
¸¸ 
string
¸¸ 
	Settings1
¸¸ 
{
¸¸  
get
¸¸! $
{
¸¸% &
return
¸¸' -!
CurrentLocalization
¸¸. A
.
¸¸A B
	Settings1
¸¸B K
;
¸¸K L
}
¸¸M N
}
¸¸O P
public¼¼ 
static
¼¼ 
string
¼¼ 
	Settings2
¼¼ 
{
¼¼  
get
¼¼! $
{
¼¼% &
return
¼¼' -!
CurrentLocalization
¼¼. A
.
¼¼A B
	Settings2
¼¼B K
;
¼¼K L
}
¼¼M N
}
¼¼O P
publicÀÀ 
static
ÀÀ 
string
ÀÀ 
	Settings3
ÀÀ 
{
ÀÀ  
get
ÀÀ! $
{
ÀÀ% &
return
ÀÀ' -!
CurrentLocalization
ÀÀ. A
.
ÀÀA B
	Settings3
ÀÀB K
;
ÀÀK L
}
ÀÀM N
}
ÀÀO P
publicÄÄ 
static
ÄÄ 
string
ÄÄ 
	Settings4
ÄÄ 
{
ÄÄ  
get
ÄÄ! $
{
ÄÄ% &
return
ÄÄ' -!
CurrentLocalization
ÄÄ. A
.
ÄÄA B
	Settings4
ÄÄB K
;
ÄÄK L
}
ÄÄM N
}
ÄÄO P
publicÈÈ 
static
ÈÈ 
string
ÈÈ 
	Settings5
ÈÈ 
{
ÈÈ  
get
ÈÈ! $
{
ÈÈ% &
return
ÈÈ' -!
CurrentLocalization
ÈÈ. A
.
ÈÈA B
	Settings5
ÈÈB K
;
ÈÈK L
}
ÈÈM N
}
ÈÈO P
publicÌÌ 
static
ÌÌ 
string
ÌÌ 
SettingsChanges
ÌÌ $
{
ÌÌ% &
get
ÌÌ' *
{
ÌÌ+ ,
return
ÌÌ- 3!
CurrentLocalization
ÌÌ4 G
.
ÌÌG H
SettingsChanges
ÌÌH W
;
ÌÌW X
}
ÌÌY Z
}
ÌÌ[ \
publicÐÐ 
static
ÐÐ 
string
ÐÐ 
SnackDelete
ÐÐ  
{
ÐÐ! "
get
ÐÐ# &
{
ÐÐ' (
return
ÐÐ) /!
CurrentLocalization
ÐÐ0 C
.
ÐÐC D
SnackDelete
ÐÐD O
;
ÐÐO P
}
ÐÐQ R
}
ÐÐS T
publicÔÔ 
static
ÔÔ 
string
ÔÔ 
SnackFileExists
ÔÔ $
{
ÔÔ% &
get
ÔÔ' *
{
ÔÔ+ ,
return
ÔÔ- 3!
CurrentLocalization
ÔÔ4 G
.
ÔÔG H
SnackFileExists
ÔÔH W
;
ÔÔW X
}
ÔÔY Z
}
ÔÔ[ \
publicØØ 
static
ØØ 
string
ØØ 
SnackPlaylist
ØØ "
{
ØØ# $
get
ØØ% (
{
ØØ) *
return
ØØ+ 1!
CurrentLocalization
ØØ2 E
.
ØØE F
SnackPlaylist
ØØF S
;
ØØS T
}
ØØU V
}
ØØW X
publicÜÜ 
static
ÜÜ 
string
ÜÜ 

SnackQueue
ÜÜ 
{
ÜÜ  !
get
ÜÜ" %
{
ÜÜ& '
return
ÜÜ( .!
CurrentLocalization
ÜÜ/ B
.
ÜÜB C

SnackQueue
ÜÜC M
;
ÜÜM N
}
ÜÜO P
}
ÜÜQ R
publicàà 
static
àà 
string
àà 
SyncAdd
àà 
{
àà 
get
àà "
{
àà# $
return
àà% +!
CurrentLocalization
àà, ?
.
àà? @
SyncAdd
àà@ G
;
ààG H
}
ààI J
}
ààK L
publicää 
static
ää 
string
ää 
SyncAddPlaylist
ää $
{
ää% &
get
ää' *
{
ää+ ,
return
ää- 3!
CurrentLocalization
ää4 G
.
ääG H
SyncAddPlaylist
ääH W
;
ääW X
}
ääY Z
}
ää[ \
publicèè 
static
èè 
string
èè 
	SyncHelp1
èè 
{
èè  
get
èè! $
{
èè% &
return
èè' -!
CurrentLocalization
èè. A
.
èèA B
	SyncHelp1
èèB K
;
èèK L
}
èèM N
}
èèO P
publicìì 
static
ìì 
string
ìì 
	SyncHelp2
ìì 
{
ìì  
get
ìì! $
{
ìì% &
return
ìì' -!
CurrentLocalization
ìì. A
.
ììA B
	SyncHelp2
ììB K
;
ììK L
}
ììM N
}
ììO P
publicðð 
static
ðð 
string
ðð 
SyncHelp2Desktop
ðð %
{
ðð& '
get
ðð( +
{
ðð, -
return
ðð. 4!
CurrentLocalization
ðð5 H
.
ððH I
SyncHelp2Desktop
ððI Y
;
ððY Z
}
ðð[ \
}
ðð] ^
publicôô 
static
ôô 
string
ôô 
	SyncHelp3
ôô 
{
ôô  
get
ôô! $
{
ôô% &
return
ôô' -!
CurrentLocalization
ôô. A
.
ôôA B
	SyncHelp3
ôôB K
;
ôôK L
}
ôôM N
}
ôôO P
publicøø 
static
øø 
string
øø 
	SyncPhone
øø 
{
øø  
get
øø! $
{
øø% &
return
øø' -!
CurrentLocalization
øø. A
.
øøA B
	SyncPhone
øøB K
;
øøK L
}
øøM N
}
øøO P
publicüü 
static
üü 
string
üü 
SyncReceiving
üü "
{
üü# $
get
üü% (
{
üü) *
return
üü+ 1!
CurrentLocalization
üü2 E
.
üüE F
SyncReceiving
üüF S
;
üüS T
}
üüU V
}
üüW X
public 
static
 
string
 
SyncSending
  
{
! "
get
# &
{
' (
return
) /!
CurrentLocalization
0 C
.
C D
SyncSending
D O
;
O P
}
Q R
}
S T
public 
static
 
string
 
SyncShowFiles
 "
{
# $
get
% (
{
) *
return
+ 1!
CurrentLocalization
2 E
.
E F
SyncShowFiles
F S
;
S T
}
U V
}
W X
public 
static
 
string
 
	ThemeDark
 
{
  
get
! $
{
% &
return
' -!
CurrentLocalization
. A
.
A B
	ThemeDark
B K
;
K L
}
M N
}
O P
public 
static
 
string
 
ThemeDefault
 !
{
" #
get
$ '
{
( )
return
* 0!
CurrentLocalization
1 D
.
D E
ThemeDefault
E Q
;
Q R
}
S T
}
U V
public 
static
 
string
 

ThemeLight
 
{
  !
get
" %
{
& '
return
( .!
CurrentLocalization
/ B
.
B C

ThemeLight
C M
;
M N
}
O P
}
Q R
public 
static
 
string
 
Title
 
{
 
get
  
{
! "
return
# )!
CurrentLocalization
* =
.
= >
Title
> C
;
C D
}
E F
}
G H
public 
static
 
string
 
TitleDownloads
 #
{
$ %
get
& )
{
* +
return
, 2!
CurrentLocalization
3 F
.
F G
TitleDownloads
G U
;
U V
}
W X
}
Y Z
public 
static
 
string
 
Track
 
{
 
get
  
{
! "
return
# )!
CurrentLocalization
* =
.
= >
Track
> C
;
C D
}
E F
}
G H
public   
static
   
string
   

TrackCount
   
{
    !
get
  " %
{
  & '
return
  ( .!
CurrentLocalization
  / B
.
  B C

TrackCount
  C M
;
  M N
}
  O P
}
  Q R
public¤¤ 
static
¤¤ 
string
¤¤  
TrackCountPlaylist
¤¤ '
{
¤¤( )
get
¤¤* -
{
¤¤. /
return
¤¤0 6!
CurrentLocalization
¤¤7 J
.
¤¤J K 
TrackCountPlaylist
¤¤K ]
;
¤¤] ^
}
¤¤_ `
}
¤¤a b
public¨¨ 
static
¨¨ 
string
¨¨ 
TrackMenuDelete
¨¨ $
{
¨¨% &
get
¨¨' *
{
¨¨+ ,
return
¨¨- 3!
CurrentLocalization
¨¨4 G
.
¨¨G H
TrackMenuDelete
¨¨H W
;
¨¨W X
}
¨¨Y Z
}
¨¨[ \
public¬¬ 
static
¬¬ 
string
¬¬ 
TrackMenuEdit
¬¬ "
{
¬¬# $
get
¬¬% (
{
¬¬) *
return
¬¬+ 1!
CurrentLocalization
¬¬2 E
.
¬¬E F
TrackMenuEdit
¬¬F S
;
¬¬S T
}
¬¬U V
}
¬¬W X
public°° 
static
°° 
string
°° 
TrackMenuPlaylist
°° &
{
°°' (
get
°°) ,
{
°°- .
return
°°/ 5!
CurrentLocalization
°°6 I
.
°°I J
TrackMenuPlaylist
°°J [
;
°°[ \
}
°°] ^
}
°°_ `
public´´ 
static
´´ 
string
´´ 
TrackMenuQueue
´´ #
{
´´$ %
get
´´& )
{
´´* +
return
´´, 2!
CurrentLocalization
´´3 F
.
´´F G
TrackMenuQueue
´´G U
;
´´U V
}
´´W X
}
´´Y Z
public¸¸ 
static
¸¸ 
string
¸¸ 
Tracks
¸¸ 
{
¸¸ 
get
¸¸ !
{
¸¸" #
return
¸¸$ *!
CurrentLocalization
¸¸+ >
.
¸¸> ?
Tracks
¸¸? E
;
¸¸E F
}
¸¸G H
}
¸¸I J
public¼¼ 
static
¼¼ 
string
¼¼ 
UnknownArtist
¼¼ "
{
¼¼# $
get
¼¼% (
{
¼¼) *
return
¼¼+ 1!
CurrentLocalization
¼¼2 E
.
¼¼E F
UnknownArtist
¼¼F S
;
¼¼S T
}
¼¼U V
}
¼¼W X
publicÀÀ 
static
ÀÀ 
string
ÀÀ 
Unpacked
ÀÀ 
{
ÀÀ 
get
ÀÀ  #
{
ÀÀ$ %
return
ÀÀ& ,!
CurrentLocalization
ÀÀ- @
.
ÀÀ@ A
Unpacked
ÀÀA I
;
ÀÀI J
}
ÀÀK L
}
ÀÀM N
publicÄÄ 
static
ÄÄ 
string
ÄÄ 
Warning
ÄÄ 
{
ÄÄ 
get
ÄÄ "
{
ÄÄ# $
return
ÄÄ% +!
CurrentLocalization
ÄÄ, ?
.
ÄÄ? @
Warning
ÄÄ@ G
;
ÄÄG H
}
ÄÄI J
}
ÄÄK L
publicÈÈ 
static
ÈÈ 
string
ÈÈ 
Yes
ÈÈ 
{
ÈÈ 
get
ÈÈ 
{
ÈÈ  
return
ÈÈ! '!
CurrentLocalization
ÈÈ( ;
.
ÈÈ; <
Yes
ÈÈ< ?
;
ÈÈ? @
}
ÈÈA B
}
ÈÈC D
publicÌÌ 
static
ÌÌ 
string
ÌÌ 
YourCode
ÌÌ 
{
ÌÌ 
get
ÌÌ  #
{
ÌÌ$ %
return
ÌÌ& ,!
CurrentLocalization
ÌÌ- @
.
ÌÌ@ A
YourCode
ÌÌA I
;
ÌÌI J
}
ÌÌK L
}
ÌÌM N
publicÐÐ 
static
ÐÐ 
string
ÐÐ 
YoutubeError
ÐÐ !
{
ÐÐ" #
get
ÐÐ$ '
{
ÐÐ( )
return
ÐÐ* 0!
CurrentLocalization
ÐÐ1 D
.
ÐÐD E
YoutubeError
ÐÐE Q
;
ÐÐQ R
}
ÐÐS T
}
ÐÐU V
publicÒÒ 
abstract
ÒÒ 
class
ÒÒ 
LocalizationBase
ÒÒ &
{
ÒÒ& '
publicÓÓ 
string
ÓÓ 
AboutAuthor
ÓÓ 
=
ÓÓ 
$str
ÓÓ 3
;
ÓÓ3 4
publicÔÔ 
string
ÔÔ 
	AboutDesc
ÔÔ 
=
ÔÔ 
$strÔÔ À
;ÔÔÀ Á
publicÕÕ 
string
ÕÕ 
AboutWWW
ÕÕ 
=
ÕÕ 
$str
ÕÕ (
;
ÕÕ( )
publicÖÖ 
string
ÖÖ 
Add
ÖÖ 
=
ÖÖ 
$str
ÖÖ 
;
ÖÖ 
public×× 
string
×× 
AddTags
×× 
=
×× 
$str
×× %
;
××% &
publicØØ 
string
ØØ 
Artist
ØØ 
=
ØØ 
$str
ØØ "
;
ØØ" #
publicÙÙ 
string
ÙÙ 
Artists
ÙÙ 
=
ÙÙ 
$str
ÙÙ #
;
ÙÙ# $
publicÚÚ 
string
ÚÚ 
AutoConvert
ÚÚ 
=
ÚÚ 
$str
ÚÚ <
;
ÚÚ< =
publicÛÛ 
string
ÛÛ 
AutoDownload
ÛÛ 
=
ÛÛ 
$str
ÛÛ W
;
ÛÛW X
publicÜÜ 
string
ÜÜ 
BackPressed
ÜÜ 
=
ÜÜ 
$str
ÜÜ =
;
ÜÜ= >
publicÝÝ 
string
ÝÝ 
Cancel
ÝÝ 
=
ÝÝ 
$str
ÝÝ 
;
ÝÝ  
publicÞÞ 
string
ÞÞ 

ChangeName
ÞÞ 
=
ÞÞ 
$str
ÞÞ (
;
ÞÞ( )
publicßß 
string
ßß 
ChoosePlaylist
ßß 
=
ßß 
$str
ßß 2
;
ßß2 3
publicàà 
string
àà 
Clear
àà 
=
àà 
$str
àà 
;
àà  
publicáá 
string
áá 
Connect
áá 
=
áá 
$str
áá  
;
áá  !
publicââ 
string
ââ 

Conversion
ââ 
=
ââ 
$str
ââ &
;
ââ& '
publicãã 
string
ãã "
ConversionInputFiles
ãã "
=
ãã# $
$str
ãã% 6
;
ãã6 7
publicää 
string
ää $
ConversionOutputFolder
ää $
=
ää% &
$str
ää' 9
;
ää9 :
publicåå 
string
åå $
ConversionOutputFormat
åå $
=
åå% &
$str
åå' 9
;
åå9 :
publicææ 
string
ææ 
Convert
ææ 
=
ææ 
$str
ææ #
;
ææ# $
publicçç 
string
çç 
Cover
çç 
=
çç 
$str
çç 
;
çç  
publicèè 
string
èè 
	CoverLoad
èè 
=
èè 
$str
èè +
;
èè+ ,
publicéé 
string
éé 
	CoverSave
éé 
=
éé 
$str
éé *
;
éé* +
publicêê 
string
êê 

Disconnect
êê 
=
êê 
$str
êê $
;
êê$ %
publicëë 
string
ëë 
Download
ëë 
=
ëë 
$str
ëë "
;
ëë" #
publicìì 
string
ìì 
FileCorrupted
ìì 
=
ìì 
$str
ìì 4
;
ìì4 5
publicíí 
string
íí 
FileDownloaded
íí 
=
íí 
$str
íí (
;
íí( )
publicîî 
string
îî 
FolderExists
îî 
=
îî 
$str
îî 2
;
îî2 3
publicïï 
string
ïï 
Informations
ïï 
=
ïï 
$str
ïï )
;
ïï) *
publicðð 
string
ðð 
Instruction
ðð 
=
ðð 
$str
ðð (
;
ðð( )
publicññ 
string
ññ 

LanguageEN
ññ 
=
ññ 
$str
ññ $
;
ññ$ %
publicòò 
string
òò 

LanguagePL
òò 
=
òò 
$str
òò #
;
òò# $
publicóó 
string
óó 

LanguageRU
óó 
=
óó 
$str
óó $
;
óó$ %
publicôô 
string
ôô 
	LastViews
ôô 
=
ôô 
$str
ôô /
;
ôô/ 0
publicõõ 
string
õõ 
Library
õõ 
=
õõ 
$str
õõ $
;
õõ$ %
publicöö 
string
öö 
MainPage
öö 
=
öö 
$str
öö (
;
öö( )
public÷÷ 
string
÷÷ 
	MostViews
÷÷ 
=
÷÷ 
$str
÷÷ 2
;
÷÷2 3
publicøø 
string
øø 
NewPlaylist
øø 
=
øø 
$str
øø ,
;
øø, -
publicùù 
string
ùù 
NewPlaylistHint
ùù 
=
ùù 
$str
ùù  :
;
ùù: ;
publicúú 
string
úú 
Next
úú 
=
úú 
$str
úú 
;
úú 
publicûû 
string
ûû 
No
ûû 
=
ûû 
$str
ûû 
;
ûû 
publicüü 
string
üü 
NoConnection
üü 
=
üü 
$str
üü 8
;
üü8 9
publicýý 
string
ýý 
NoDownloads
ýý 
=
ýý 
$str
ýý 4
;
ýý4 5
publicþþ 
string
þþ 
PermissionGrant
þþ 
=
þþ 
$str
þþ  6
;
þþ6 7
publicÿÿ 
string
ÿÿ 
PermissionInfo
ÿÿ 
=
ÿÿ 
$strÿÿ 
;ÿÿ 
public 
string
 
Playlist
 
=
 
$str
 $
;
$ %
public 
string
 
PlaylistDownload
 
=
  
$str
! P
;
P Q
public 
string
 
PlaylistExists
 
=
 
$str
 D
;
D E
public 
string
 
PlaylistOrTrack
 
=
 
$str
  =
;
= >
public 
string
 
PlaylistPlay
 
=
 
$str
 &
;
& '
public 
string
 
	Playlists
 
=
 
$str
 %
;
% &
public 
string
 
Progress
 
=
 
$str
 !
;
! "
public 
string
 
Question
 
=
 
$str
 "
;
" #
public 
string
 
QuestionDelete
 
=
 
$str
 ,
;
, -
public 
string
 (
QuestionDeleteFromPlaylist
 (
=
) *
$str
+ 8
;
8 9
public 
string
 $
QuestionDeletePlaylist
 $
=
% &
$str
' 9
;
9 :
public 
string
 %
QuestionDeletePlaylistg
 %
=
& '
$str
( *
;
* +
public 
string
 
Ready
 
=
 
$str
 
;
 
public 
string
 
Receive
 
=
 
$str
 !
;
! "
public 
string
 
ReceiverCode
 
=
 
$str
 +
;
+ ,
public 
string
 
ReplaceWithExists
 
=
  !
$str
" A
;
A B
public 
string
 
Save
 
=
 
$str
 
;
 
public 
string
 
Search
 
=
 
$str
 
;
  
public 
string
 
SearchHistory
 
=
 
$str
 5
;
5 6
public 
string
 
	Searching
 
=
 
$str
 +
;
+ ,
public 
string
 
	SearchTip
 
=
 
$str
 f
;
f g
public 
string
 
Select
 
=
 
$str
  
;
  !
public 
string
 
SelectFolder
 
=
 
$str
 -
;
- .
public 
string
 
Send
 
=
 
$str
 
;
 
public 
string
 
Settings
 
=
 
$str
 %
;
% &
public 
string
 
	Settings0
 
=
 
$str
 ?
;
? @
public 
string
 
	Settings1
 
=
 
$str
 -
;
- .
public 
string
 
	Settings2
 
=
 
$str
 2
;
2 3
public 
string
 
	Settings3
 
=
 
$str
 F
;
F G
public 
string
 
	Settings4
 
=
 
$str
 F
;
F G
public 
string
 
	Settings5
 
=
 
$str
 !
;
! "
public 
string
 
SettingsChanges
 
=
 
$str
  Y
;
Y Z
public   
string
   
SnackDelete
   
=
   
$str
   0
;
  0 1
public¡¡ 
string
¡¡ 
SnackFileExists
¡¡ 
=
¡¡ 
$str
¡¡  3
;
¡¡3 4
public¢¢ 
string
¢¢ 
SnackPlaylist
¢¢ 
=
¢¢ 
$str
¢¢ 3
;
¢¢3 4
public££ 
string
££ 

SnackQueue
££ 
=
££ 
$str
££ .
;
££. /
public¤¤ 
string
¤¤ 
SyncAdd
¤¤ 
=
¤¤ 
$str
¤¤ +
;
¤¤+ ,
public¥¥ 
string
¥¥ 
SyncAddPlaylist
¥¥ 
=
¥¥ 
$str
¥¥  ?
;
¥¥? @
public¦¦ 
string
¦¦ 
	SyncHelp1
¦¦ 
=
¦¦ 
$str
¦¦ D
;
¦¦D E
public§§ 
string
§§ 
	SyncHelp2
§§ 
=
§§ 
$str
§§ C
;
§§C D
public¨¨ 
string
¨¨ 
SyncHelp2Desktop
¨¨ 
=
¨¨  
$str
¨¨! /
;
¨¨/ 0
public©© 
string
©© 
	SyncHelp3
©© 
=
©© 
$str
©© 8
;
©©8 9
publicªª 
string
ªª 
	SyncPhone
ªª 
=
ªª 
$str
ªª 6
;
ªª6 7
public«« 
string
«« 
SyncReceiving
«« 
=
«« 
$str
«« 1
;
««1 2
public¬¬ 
string
¬¬ 
SyncSending
¬¬ 
=
¬¬ 
$str
¬¬ .
;
¬¬. /
public­­ 
string
­­ 
SyncShowFiles
­­ 
=
­­ 
$str
­­ 7
;
­­7 8
public®® 
string
®® 
	ThemeDark
®® 
=
®® 
$str
®® "
;
®®" #
public¯¯ 
string
¯¯ 
ThemeDefault
¯¯ 
=
¯¯ 
$str
¯¯ '
;
¯¯' (
public°° 
string
°° 

ThemeLight
°° 
=
°° 
$str
°° #
;
°°# $
public±± 
string
±± 
Title
±± 
=
±± 
$str
±± 
;
±± 
public²² 
string
²² 
TitleDownloads
²² 
=
²² 
$str
²² +
;
²²+ ,
public³³ 
string
³³ 
Track
³³ 
=
³³ 
$str
³³ 
;
³³ 
public´´ 
string
´´ 

TrackCount
´´ 
=
´´ 
$str
´´ /
;
´´/ 0
publicµµ 
string
µµ  
TrackCountPlaylist
µµ  
=
µµ! "
$str
µµ# ,
;
µµ, -
public¶¶ 
string
¶¶ 
TrackMenuDelete
¶¶ 
=
¶¶ 
$str
¶¶  &
;
¶¶& '
public·· 
string
·· 
TrackMenuEdit
·· 
=
·· 
$str
·· &
;
··& '
public¸¸ 
string
¸¸ 
TrackMenuPlaylist
¸¸ 
=
¸¸  !
$str
¸¸" 6
;
¸¸6 7
public¹¹ 
string
¹¹ 
TrackMenuQueue
¹¹ 
=
¹¹ 
$str
¹¹ 1
;
¹¹1 2
publicºº 
string
ºº 
Tracks
ºº 
=
ºº 
$str
ºº 
;
ºº  
public»» 
string
»» 
UnknownArtist
»» 
=
»» 
$str
»» 2
;
»»2 3
public¼¼ 
string
¼¼ 
Unpacked
¼¼ 
=
¼¼ 
$str
¼¼ %
;
¼¼% &
public½½ 
string
½½ 
Warning
½½ 
=
½½ 
$str
½½ 
;
½½  
public¾¾ 
string
¾¾ 
Yes
¾¾ 
=
¾¾ 
$str
¾¾ 
;
¾¾ 
public¿¿ 
string
¿¿ 
YourCode
¿¿ 
=
¿¿ 
$str
¿¿ #
;
¿¿# $
publicÀÀ 
string
ÀÀ 
YoutubeError
ÀÀ 
=
ÀÀ 
$strÀÀ 
;ÀÀ 
}ÁÁ 
}
ÂÂ 
}ÃÃ ÔY
?D:\Projekty\CS\Newtone\Newtone.Core\Languages\LocalizationEN.cs
	namespace 	
Newtone
 
. 
Core 
. 
	Languages  
{  !
public! '
class( -
LocalizationEN. <
:= >
Localization? K
.K L
LocalizationBaseL \
{\ ]
public 
LocalizationEN 
( 
) 
{ 
this 
. 
AboutAuthor 
= 
$str +
;+ ,
this 
. 
	AboutDesc 
= 
$str	 §
;
§ ¨
this 
. 
AboutWWW 
= 
$str 
; 
this 
. 
Add 
=	 

$str 
; 
this 
. 
AddTags 
= 
$str 
; 
this 
. 
Artist 
= 
$str 
; 
this		 
.		 
Artists		 
=		 
$str		 
;		 
this

 
.

 
AutoConvert

 
=

 
$str

 (
;

( )
this 
. 
AutoDownload 
= 
$str O
;O P
this 
. 
BackPressed 
= 
$str (
;( )
this 
. 
Cancel 
= 
$str 
; 
this 
. 

ChangeName 
= 
$str 
;  
this 
. 
ChoosePlaylist 
= 
$str '
;' (
this 
. 
Clear 

= 
$str 
; 
this 
. 
Connect 
= 
$str 
; 
this 
. 

Conversion 
= 
$str 
; 
this 
.  
ConversionInputFiles 
= 
$str )
;) *
this 
. "
ConversionOutputFolder 
= 
$str -
;- .
this 
. "
ConversionOutputFormat 
= 
$str -
;- .
this 
. 
Convert 
= 
$str 
; 
this 
. 
Cover 

= 
$str 
; 
this 
. 
	CoverLoad 
= 
$str 
; 
this 
. 
	CoverSave 
= 
$str 
; 
this 
. 

Disconnect 
= 
$str 
; 
this 
. 
Download 
= 
$str 
; 
this 
. 
FileCorrupted 
= 
$str (
;( )
this 
. 
FileDownloaded 
= 
$str "
;" #
this 
. 
FolderExists 
= 
$str /
;/ 0
this 
. 
Informations 
= 
$str "
;" #
this   
.   
Instruction   
=   
$str   
;   
this!! 
.!! 
	LastViews!! 
=!! 
$str!! 
;!! 
this"" 
."" 
Library"" 
="" 
$str"" 
;"" 
this## 
.## 
MainPage## 
=## 
$str## 
;## 
this$$ 
.$$ 
	MostViews$$ 
=$$ 
$str$$ 
;$$ 
this%% 
.%% 
NewPlaylist%% 
=%% 
$str%% !
;%%! "
this&& 
.&& 
NewPlaylistHint&& 
=&& 
$str&& ,
;&&, -
this'' 
.'' 
Next'' 	
=''
 
$str'' 
;'' 
this(( 
.(( 
No(( 
=(( 	
$str((
 
;(( 
this)) 
.)) 
NoConnection)) 
=)) 
$str)) ,
;)), -
this** 
.** 
NoDownloads** 
=** 
$str** /
;**/ 0
this++ 
.++ 
PermissionGrant++ 
=++ 
$str++ *
;++* +
this,, 
.,, 
PermissionInfo,, 
=,, 
$str,, p
;,,p q
this-- 
.-- 
Playlist-- 
=-- 
$str-- 
;-- 
this.. 
... 
PlaylistDownload.. 
=.. 
$str.. A
;..A B
this// 
.// 
PlaylistExists// 
=// 
$str// 6
;//6 7
this00 
.00 
PlaylistOrTrack00 
=00 
$str00 4
;004 5
this11 
.11 
PlaylistPlay11 
=11 
$str11 
;11 
this22 
.22 
	Playlists22 
=22 
$str22 
;22 
this33 
.33 
Progress33 
=33 
$str33 
;33 
this44 
.44 
Question44 
=44 
$str44 
;44 
this55 
.55 
QuestionDelete55 
=55 
$str55 #
;55# $
this66 
.66 &
QuestionDeleteFromPlaylist66 
=66  !
$str66" 1
;661 2
this77 
.77 "
QuestionDeletePlaylist77 
=77 
$str77 /
;77/ 0
this88 
.88 
Ready88 

=88 
$str88 
;88 
this99 
.99 
Receive99 
=99 
$str99 
;99 
this:: 
.:: 
ReceiverCode:: 
=:: 
$str:: #
;::# $
this;; 
.;; 
ReplaceWithExists;; 
=;; 
$str;; 6
;;;6 7
this<< 
.<< 
Save<< 	
=<<
 
$str<< 
;<< 
this== 
.== 
Search== 
=== 
$str== 
;== 
this>> 
.>> 
SearchHistory>> 
=>> 
$str>> %
;>>% &
this?? 
.?? 
	Searching?? 
=?? 
$str?? 
;??  
this@@ 
.@@ 
	SearchTip@@ 
=@@ 
$str@@ V
;@@V W
thisAA 
.AA 
SelectAA 
=AA 
$strAA 
;AA 
thisBB 
.BB 
SelectFolderBB 
=BB 
$strBB #
;BB# $
thisCC 
.CC 
SendCC 	
=CC
 
$strCC 
;CC 
thisDD 
.DD 
SettingsDD 
=DD 
$strDD 
;DD 
thisEE 
.EE 
	Settings0EE 
=EE 
$strEE 0
;EE0 1
thisFF 
.FF 
	Settings1FF 
=FF 
$strFF 
;FF 
thisGG 
.GG 
	Settings2GG 
=GG 
$strGG 
;GG 
thisHH 
.HH 
	Settings3HH 
=HH 
$strHH 5
;HH5 6
thisII 
.II 
	Settings4II 
=II 
$strII .
;II. /
thisJJ 
.JJ 
	Settings5JJ 
=JJ 
$strJJ 
;JJ 
thisKK 
.KK 
SettingsChangesKK 
=KK 
$strKK U
;KKU V
thisLL 
.LL 
SnackDeleteLL 
=LL 
$strLL )
;LL) *
thisMM 
.MM 
SnackFileExistsMM 
=MM 
$strMM )
;MM) *
thisNN 
.NN 
SnackPlaylistNN 
=NN 
$strNN (
;NN( )
thisOO 
.OO 

SnackQueueOO 
=OO 
$strOO "
;OO" #
thisPP 
.PP 
SyncAddPP 
=PP 
$strPP 
;PP 
thisQQ 
.QQ 
SyncAddPlaylistQQ 
=QQ 
$strQQ /
;QQ/ 0
thisRR 
.RR 
	SyncHelp1RR 
=RR 
$strRR 9
;RR9 :
thisSS 
.SS 
	SyncHelp2SS 
=SS 
$strSS 7
;SS7 8
thisTT 
.TT 
SyncHelp2DesktopTT 
=TT 
$strTT '
;TT' (
thisUU 
.UU 
	SyncHelp3UU 
=UU 
$strUU +
;UU+ ,
thisVV 
.VV 
	SyncPhoneVV 
=VV 
$strVV "
;VV" #
thisWW 
.WW 
SyncReceivingWW 
=WW 
$strWW &
;WW& '
thisXX 
.XX 
SyncSendingXX 
=XX 
$strXX "
;XX" #
thisYY 
.YY 
SyncShowFilesYY 
=YY 
$strYY )
;YY) *
thisZZ 
.ZZ 
	ThemeDarkZZ 
=ZZ 
$strZZ 
;ZZ 
this[[ 
.[[ 
ThemeDefault[[ 
=[[ 
$str[[ 
;[[ 
this\\ 
.\\ 

ThemeLight\\ 
=\\ 
$str\\ 
;\\ 
this]] 
.]] 
Title]] 

=]] 
$str]] 
;]] 
this^^ 
.^^ 
TitleDownloads^^ 
=^^ 
$str^^ #
;^^# $
this__ 
.__ 
Track__ 

=__ 
$str__ 
;__ 
this`` 
.`` 

TrackCount`` 
=`` 
$str``  
;``  !
thisaa 
.aa 
TrackCountPlaylistaa 
=aa 
$straa "
;aa" #
thisbb 
.bb 
TrackMenuDeletebb 
=bb 
$strbb 
;bb  
thiscc 
.cc 
TrackMenuEditcc 
=cc 
$strcc 
;cc 
thisdd 
.dd 
TrackMenuPlaylistdd 
=dd 
$strdd *
;dd* +
thisee 
.ee 
TrackMenuQueueee 
=ee 
$stree $
;ee$ %
thisff 
.ff 
Tracksff 
=ff 
$strff 
;ff 
thisgg 
.gg 
UnknownArtistgg 
=gg 
$strgg %
;gg% &
thishh 
.hh 
Unpackedhh 
=hh 
$strhh 
;hh 
thisii 
.ii 
Warningii 
=ii 
$strii 
;ii 
thisjj 
.jj 
Yesjj 
=jj	 

$strjj 
;jj 
thiskk 
.kk 
YourCodekk 
=kk 
$strkk 
;kk 
thisll 
.ll 
YoutubeErrorll 
=ll 
$strll u
;llu v
}mm 
}mm 
}mm 
?D:\Projekty\CS\Newtone\Newtone.Core\Languages\LocalizationPL.cs
	namespace 	
Newtone
 
. 
Core 
. 
	Languages  
{ 
public 

class 
LocalizationPL 
:  !
Localization" .
.. /
LocalizationBase/ ?
{ 
} 
} ÔY
?D:\Projekty\CS\Newtone\Newtone.Core\Languages\LocalizationRU.cs
	namespace 	
Newtone
 
. 
Core 
. 
	Languages  
{  !
public! '
class( -
LocalizationRU. <
:= >
Localization? K
.K L
LocalizationBaseL \
{\ ]
public 
LocalizationRU 
( 
) 
{ 
this 
. 
AboutAuthor 
= 
$str )
;) *
this 
. 
	AboutDesc 
= 
$str	 ¦
;
¦ §
this 
. 
AboutWWW 
= 
$str  
;  !
this 
. 
Add 
=	 

$str 
; 
this 
. 
AddTags 
= 
$str 
;  
this 
. 
Artist 
= 
$str 
; 
this		 
.		 
Artists		 
=		 
$str		 
;		 
this

 
.

 
AutoConvert

 
=

 
$str

 7
;

7 8
this 
. 
AutoDownload 
= 
$str K
;K L
this 
. 
BackPressed 
= 
$str 1
;1 2
this 
. 
Cancel 
= 
$str 
; 
this 
. 

ChangeName 
= 
$str (
;( )
this 
. 
ChoosePlaylist 
= 
$str '
;' (
this 
. 
Clear 

= 
$str 
; 
this 
. 
Connect 
= 
$str 
; 
this 
. 

Conversion 
= 
$str "
;" #
this 
.  
ConversionInputFiles 
= 
$str +
;+ ,
this 
. "
ConversionOutputFolder 
= 
$str ,
;, -
this 
. "
ConversionOutputFormat 
= 
$str /
;/ 0
this 
. 
Convert 
= 
$str 
;  
this 
. 
Cover 

= 
$str 
; 
this 
. 
	CoverLoad 
= 
$str $
;$ %
this 
. 
	CoverSave 
= 
$str $
;$ %
this 
. 

Disconnect 
= 
$str 
; 
this 
. 
Download 
= 
$str 
; 
this 
. 
FileCorrupted 
= 
$str %
;% &
this 
. 
FileDownloaded 
= 
$str 
;  
this 
. 
FolderExists 
= 
$str )
;) *
this 
. 
Informations 
= 
$str  
;  !
this   
.   
Instruction   
=   
$str   
;   
this!! 
.!! 
	LastViews!! 
=!! 
$str!!  
;!!  !
this"" 
."" 
Library"" 
="" 
$str"" 
;"" 
this## 
.## 
MainPage## 
=## 
$str## 
;## 
this$$ 
.$$ 
	MostViews$$ 
=$$ 
$str$$ #
;$$# $
this%% 
.%% 
NewPlaylist%% 
=%% 
$str%% !
;%%! "
this&& 
.&& 
NewPlaylistHint&& 
=&& 
$str&& 0
;&&0 1
this'' 
.'' 
Next'' 	
=''
 
$str'' 
;'' 
this(( 
.(( 
No(( 
=(( 	
$str((
 
;(( 
this)) 
.)) 
NoConnection)) 
=)) 
$str)) ,
;)), -
this** 
.** 
NoDownloads** 
=** 
$str** ,
;**, -
this++ 
.++ 
PermissionGrant++ 
=++ 
$str++ 0
;++0 1
this,, 
.,, 
PermissionInfo,, 
=,, 
$str,, s
;,,s t
this-- 
.-- 
Playlist-- 
=-- 
$str-- 
;-- 
this.. 
... 
PlaylistDownload.. 
=.. 
$str.. F
;..F G
this// 
.// 
PlaylistExists// 
=// 
$str// <
;//< =
this00 
.00 
PlaylistOrTrack00 
=00 
$str00 2
;002 3
this11 
.11 
PlaylistPlay11 
=11 
$str11 
;11 
this22 
.22 
	Playlists22 
=22 
$str22 
;22 
this33 
.33 
Progress33 
=33 
$str33 
;33 
this44 
.44 
Question44 
=44 
$str44 
;44 
this55 
.55 
QuestionDelete55 
=55 
$str55 $
;55$ %
this66 
.66 &
QuestionDeleteFromPlaylist66 
=66  !
$str66" -
;66- .
this77 
.77 "
QuestionDeletePlaylist77 
=77 
$str77 .
;77. /
this88 
.88 
Ready88 

=88 
$str88 
;88 
this99 
.99 
Receive99 
=99 
$str99 
;99 
this:: 
.:: 
ReceiverCode:: 
=:: 
$str:: $
;::$ %
this;; 
.;; 
ReplaceWithExists;; 
=;; 
$str;; 9
;;;9 :
this<< 
.<< 
Save<< 	
=<<
 
$str<< 
;<< 
this== 
.== 
Search== 
=== 
$str== 
;== 
this>> 
.>> 
SearchHistory>> 
=>> 
$str>> %
;>>% &
this?? 
.?? 
	Searching?? 
=?? 
$str?? 
;?? 
this@@ 
.@@ 
	SearchTip@@ 
=@@ 
$str@@ k
;@@k l
thisAA 
.AA 
SelectAA 
=AA 
$strAA 
;AA 
thisBB 
.BB 
SelectFolderBB 
=BB 
$strBB $
;BB$ %
thisCC 
.CC 
SendCC 	
=CC
 
$strCC 
;CC 
thisDD 
.DD 
SettingsDD 
=DD 
$strDD 
;DD 
thisEE 
.EE 
	Settings0EE 
=EE 
$strEE 4
;EE4 5
thisFF 
.FF 
	Settings1FF 
=FF 
$strFF &
;FF& '
thisGG 
.GG 
	Settings2GG 
=GG 
$strGG %
;GG% &
thisHH 
.HH 
	Settings3HH 
=HH 
$strHH I
;HHI J
thisII 
.II 
	Settings4II 
=II 
$strII @
;II@ A
thisJJ 
.JJ 
	Settings5JJ 
=JJ 
$strJJ 
;JJ 
thisKK 
.KK 
SettingsChangesKK 
=KK 
$strKK K
;KKK L
thisLL 
.LL 
SnackDeleteLL 
=LL 
$strLL #
;LL# $
thisMM 
.MM 
SnackFileExistsMM 
=MM 
$strMM +
;MM+ ,
thisNN 
.NN 
SnackPlaylistNN 
=NN 
$strNN )
;NN) *
thisOO 
.OO 

SnackQueueOO 
=OO 
$strOO '
;OO' (
thisPP 
.PP 
SyncAddPP 
=PP 
$strPP $
;PP$ %
thisQQ 
.QQ 
SyncAddPlaylistQQ 
=QQ 
$strQQ 5
;QQ5 6
thisRR 
.RR 
	SyncHelp1RR 
=RR 
$strRR 8
;RR8 9
thisSS 
.SS 
	SyncHelp2SS 
=SS 
$strSS ;
;SS; <
thisTT 
.TT 
SyncHelp2DesktopTT 
=TT 
$strTT (
;TT( )
thisUU 
.UU 
	SyncHelp3UU 
=UU 
$strUU 1
;UU1 2
thisVV 
.VV 
	SyncPhoneVV 
=VV 
$strVV )
;VV) *
thisWW 
.WW 
SyncReceivingWW 
=WW 
$strWW '
;WW' (
thisXX 
.XX 
SyncSendingXX 
=XX 
$strXX $
;XX$ %
thisYY 
.YY 
SyncShowFilesYY 
=YY 
$strYY 2
;YY2 3
thisZZ 
.ZZ 
	ThemeDarkZZ 
=ZZ 
$strZZ 
;ZZ 
this[[ 
.[[ 
ThemeDefault[[ 
=[[ 
$str[[ 
;[[ 
this\\ 
.\\ 

ThemeLight\\ 
=\\ 
$str\\ 
;\\ 
this]] 
.]] 
Title]] 

=]] 
$str]] 
;]] 
this^^ 
.^^ 
TitleDownloads^^ 
=^^ 
$str^^ !
;^^! "
this__ 
.__ 
Track__ 

=__ 
$str__ 
;__ 
this`` 
.`` 

TrackCount`` 
=`` 
$str`` %
;``% &
thisaa 
.aa 
TrackCountPlaylistaa 
=aa 
$straa !
;aa! "
thisbb 
.bb 
TrackMenuDeletebb 
=bb 
$strbb  
;bb  !
thiscc 
.cc 
TrackMenuEditcc 
=cc 
$strcc $
;cc$ %
thisdd 
.dd 
TrackMenuPlaylistdd 
=dd 
$strdd ,
;dd, -
thisee 
.ee 
TrackMenuQueueee 
=ee 
$stree *
;ee* +
thisff 
.ff 
Tracksff 
=ff 
$strff 
;ff 
thisgg 
.gg 
UnknownArtistgg 
=gg 
$strgg +
;gg+ ,
thishh 
.hh 
Unpackedhh 
=hh 
$strhh 
;hh  
thisii 
.ii 
Warningii 
=ii 
$strii 
;ii 
thisjj 
.jj 
Yesjj 
=jj	 

$strjj 
;jj 
thiskk 
.kk 
YourCodekk 
=kk 
$strkk 
;kk 
thisll 
.ll 
YoutubeErrorll 
=ll 
$strll z
;llz {
}mm 
}mm 
}mm $
:D:\Projekty\CS\Newtone\Newtone.Core\Loaders\CacheLoader.cs
	namespace		 	
Newtone		
 
.		 
Core		 
.		 
Loaders		 
{

 
public 

static 
class 
CacheLoader #
{ 
public 
static 
bool 
IsCacheAvailable +
(+ ,
), -
{ 	
return 
File 
. 
Exists 
( 

GlobalData )
.) *
Current* 1
.1 2
DataPath2 :
+; <
$str= K
)K L
;L M
} 	
public 
static 
void 
	LoadCache $
($ %
)% &
{ 	
if 
( 
IsCacheAvailable 
(  
)  !
)! "
{ 
NSEC2 
nsec 
= 
new  
NSEC2! &
(& '

GlobalData' 1
.1 2
	NSEC_HASH2 ;
); <
;< =
nsec 
. 
Load 
( 
File 
. 
OpenRead '
(' (

GlobalData( 2
.2 3
Current3 :
.: ;
DataPath; C
+D E
$strF T
)T U
)U V
;V W
if 
( 
nsec 
. 
TryGet 
( 
$str &
,& '
out' *
byte+ /
[/ 0
]0 1
data2 6
)6 7
)7 8
{ 
string 
[ 
] 
cache "
=# $
Encoding% -
.- .
UTF8. 2
.2 3
	GetString3 <
(< =
data= A
)A B
.B C
SplitC H
(H I
$charI M
,M N
StringSplitOptionsO a
.a b
RemoveEmptyEntriesb t
)t u
;u v
Debug 
. 
	WriteLine #
(# $
$str$ +
+, -
cache. 3
.3 4
Length4 :
+; <
$str= L
)L M
;M N
cache 
. 
ForEach !
(! "
filepath" *
=>+ -
{ 
if 
( 
File  
.  !
Exists! '
(' (
filepath( 0
)0 1
)1 2
GlobalLoader   (
.  ( )
AddTrack  ) 1
(  1 2
MediaProcessing  2 A
.  A B
	GetSource  B K
(  K L
filepath  L T
)  T U
)  U V
;  V W
}!! 
)!! 
;!! 
}"" 
nsec$$ 
.$$ 
Dispose$$ 
($$ 
)$$ 
;$$ 
}%% 
}&& 	
public(( 
static(( 
void(( 
	SaveCache(( $
((($ %
)((% &
{)) 	
NSEC2** 
nsec** 
=** 
new** 
NSEC2** "
(**" #

GlobalData**# -
.**- .
	NSEC_HASH**. 7
)**7 8
;**8 9
StringBuilder++ 
buffer++  
=++! "
new++# &
StringBuilder++' 4
(++4 5
)++5 6
;++6 7
foreach-- 
(-- 
var-- 
filepath--  
in--! #

GlobalData--$ .
.--. /
Current--/ 6
.--6 7
Audios--7 =
.--= >
Keys--> B
)--B C
{.. 
buffer// 
.// 
Append// 
(// 
filepath// &
+//' (
$str//) -
)//- .
;//. /
}00 
nsec11 
.11 
AddFile11 
(11 
$str11  
,11  !
Encoding11" *
.11* +
UTF811+ /
.11/ 0
GetBytes110 8
(118 9
buffer119 ?
.11? @
ToString11@ H
(11H I
)11I J
)11J K
)11K L
;11L M
File22 
.22 
WriteAllBytes22 
(22 

GlobalData22 )
.22) *
Current22* 1
.221 2
DataPath222 :
+22; <
$str22= K
,22K L
nsec22M Q
.22Q R
Save22R V
(22V W
)22W X
)22X Y
;22Y Z
}33 	
}44 
}55 ­w
;D:\Projekty\CS\Newtone\Newtone.Core\Loaders\GlobalLoader.cs
	namespace 	
Newtone
 
. 
Core 
. 
Loaders 
{		 
public

 

static

 
class

 
GlobalLoader

 $
{ 
public 
async 
static 
Task  
Load! %
(% &
)& '
{ 	
if 
( 

GlobalData 
. 
Current !
.! "
Audios" (
.( )
Count) .
==/ 1
$num2 3
)3 4
{ 
List 
< 
MediaSource  
>  !
sources" )
=* +
new, /
List0 4
<4 5
MediaSource5 @
>@ A
(A B
)B C
;C D
foreach 
( 
string 
path #
in$ &

GlobalData' 1
.1 2
Current2 9
.9 :
IncludedPaths: G
)G H
{ 
sources 
. 
AddRange $
($ %
await% *
FileProcessing+ 9
.9 :
Scan: >
(> ?
path? C
)C D
)D E
;E F
} 
sources 
. 
ForEach 
(  
AddTrack  (
)( )
;) *
CacheLoader 
. 
	SaveCache %
(% &
)& '
;' (
} 
} 	
public 
static 
void 
AddTrack #
(# $
MediaSource$ /
source0 6
)6 7
{ 	
if 
( 
! 

GlobalData 
. 
Current #
.# $
Audios$ *
.* +
ContainsKey+ 6
(6 7
source7 =
.= >
FilePath> F
)F G
&&H J
FileK O
.O P
ExistsP V
(V W
sourceW ]
.] ^
FilePath^ f
)f g
)g h
{   

GlobalData!! 
.!! 
Current!! "
.!!" #
Audios!!# )
.!!) *
Add!!* -
(!!- .
source!!. 4
.!!4 5
FilePath!!5 =
,!!= >
source!!? E
)!!E F
;!!F G
if## 
(## 
!## 

GlobalData## 
.##  
Current##  '
.##' (
Artists##( /
.##/ 0
ContainsKey##0 ;
(##; <
source##< B
.##B C
Artist##C I
)##I J
)##J K
{$$ 

GlobalData%% 
.%% 
Current%% &
.%%& '
Artists%%' .
.%%. /
Add%%/ 2
(%%2 3
source%%3 9
.%%9 :
Artist%%: @
,%%@ A
new%%B E
List%%F J
<%%J K
string%%K Q
>%%Q R
(%%R S
)%%S T
)%%T U
;%%U V

GlobalData&& 
.&& 
Current&& &
.&&& '
ArtistsNeedRefresh&&' 9
=&&: ;
true&&< @
;&&@ A
}'' 

GlobalData)) 
.)) 
Current)) "
.))" #
Artists))# *
[))* +
source))+ 1
.))1 2
Artist))2 8
]))8 9
.))9 :
Add)): =
())= >
source))> D
.))D E
FilePath))E M
)))M N
;))N O
}** 
}++ 	
public-- 
static-- 
void-- 
RemoveTrack-- &
(--& '
string--' -
filePath--. 6
)--6 7
{.. 	
MediaSource// 
source// 
=//  

GlobalData//! +
.//+ ,
Current//, 3
.//3 4
Audios//4 :
[//: ;
filePath//; C
]//C D
;//D E

GlobalData00 
.00 
Current00 
.00 
Artists00 &
[00& '
source00' -
.00- .
Artist00. 4
]004 5
.005 6
Remove006 <
(00< =
source00= C
.00C D
FilePath00D L
)00L M
;00M N
if11 
(11 

GlobalData11 
.11 
Current11 "
.11" #
Artists11# *
[11* +
source11+ 1
.111 2
Artist112 8
]118 9
.119 :
Count11: ?
==11@ B
$num11C D
)11D E

GlobalData22 
.22 
Current22 "
.22" #
ArtistsNeedRefresh22# 5
=226 7
true228 <
;22< =
if44 
(44 

GlobalData44 
.44 
Current44 "
.44" #
Audios44# )
.44) *
ContainsKey44* 5
(445 6
filePath446 >
)44> ?
)44? @

GlobalData55 
.55 
Current55 "
.55" #
Audios55# )
.55) *
Remove55* 0
(550 1
filePath551 9
)559 :
;55: ;
}66 	
public88 
static88 
void88 
ChangeTrack88 &
(88& '
MediaSource88' 2
	oldSource883 <
,88< =
MediaSource88> I
	newSource88J S
)88S T
{99 	
RemoveTrack:: 
(:: 
	oldSource:: !
.::! "
FilePath::" *
)::* +
;::+ ,
MediaSourceTag== 
tag== 
;== 
if>> 
(>> 

GlobalData>> 
.>> 
Current>> "
.>>" #
	AudioTags>># ,
.>>, -
ContainsKey>>- 8
(>>8 9
	oldSource>>9 B
.>>B C
FilePath>>C K
)>>K L
)>>L M
{?? 
tag@@ 
=@@ 

GlobalData@@  
.@@  !
Current@@! (
.@@( )
	AudioTags@@) 2
[@@2 3
	oldSource@@3 <
.@@< =
FilePath@@= E
]@@E F
;@@F G
tagAA 
.AA 
AuthorAA 
=AA 
	newSourceAA &
.AA& '
ArtistAA' -
;AA- .
tagBB 
.BB 
ImageBB 
=BB 
	newSourceBB %
.BB% &
ImageBB& +
;BB+ ,
tagCC 
.CC 
TitleCC 
=CC 
	newSourceCC %
.CC% &
TitleCC& +
;CC+ ,

GlobalDataDD 
.DD 
CurrentDD "
.DD" #
	AudioTagsDD# ,
[DD, -
	oldSourceDD- 6
.DD6 7
FilePathDD7 ?
]DD? @
=DDA B
tagDDC F
;DDF G
}FF 
elseGG 
{HH 
tagII 
=II 
newII 
MediaSourceTagII (
{JJ 
AuthorKK 
=KK 
	newSourceKK &
.KK& '
ArtistKK' -
,KK- .
ImageLL 
=LL 
	newSourceLL %
.LL% &
ImageLL& +
,LL+ ,
TitleMM 
=MM 
	newSourceMM %
.MM% &
TitleMM& +
}NN 
;NN 

GlobalDataOO 
.OO 
CurrentOO "
.OO" #
	AudioTagsOO# ,
.OO, -
AddOO- 0
(OO0 1
	oldSourceOO1 :
.OO: ;
FilePathOO; C
,OOC D
tagOOE H
)OOH I
;OOI J
}PP 
ifQQ 
(QQ 
	oldSourceQQ 
.QQ 
ArtistQQ 
!=QQ  "
	newSourceQQ# ,
.QQ, -
ArtistQQ- 3
)QQ3 4
{RR 

GlobalDataSS 
.SS 
CurrentSS "
.SS" #
ArtistsSS# *
[SS* +
	oldSourceSS+ 4
.SS4 5
ArtistSS5 ;
]SS; <
.SS< =
RemoveSS= C
(SSC D
	oldSourceSSD M
.SSM N
FilePathSSN V
)SSV W
;SSW X
ifTT 
(TT 

GlobalDataTT 
.TT 
CurrentTT &
.TT& '
ArtistsTT' .
[TT. /
	oldSourceTT/ 8
.TT8 9
ArtistTT9 ?
]TT? @
.TT@ A
CountTTA F
==TTG I
$numTTJ K
)TTK L

GlobalDataUU 
.UU 
CurrentUU &
.UU& '
ArtistsUU' .
.UU. /
RemoveUU/ 5
(UU5 6
	oldSourceUU6 ?
.UU? @
ArtistUU@ F
)UUF G
;UUG H
}VV 
AddTrackWW 
(WW 
	newSourceWW 
)WW 
;WW  
ifYY 
(YY 

GlobalDataYY 
.YY 
CurrentYY "
.YY" #
MediaSourceYY# .
!=YY/ 1
nullYY2 6
&&YY7 9

GlobalDataYY: D
.YYD E
CurrentYYE L
.YYL M
MediaSourceYYM X
.YYX Y
FilePathYYY a
==YYb d
	newSourceYYe n
.YYn o
FilePathYYo w
)YYw x

GlobalDataZZ 
.ZZ 
CurrentZZ "
.ZZ" #
MediaSourceZZ# .
=ZZ/ 0
	newSourceZZ1 :
;ZZ: ;

GlobalData[[ 
.[[ 
Current[[ 
.[[ 
SaveTags[[ '
([[' (
)[[( )
;[[) *
}\\ 	
public^^ 
static^^ 
void^^ 
AddSavedTrack^^ (
(^^( )
Video^^) .
video^^/ 4
)^^4 5
{__ 	
if`` 
(`` 
!`` 

GlobalData`` 
.`` 
Current`` "
.``" #
SavedTracks``# .
.``. /
ContainsKey``/ :
(``: ;
video``; @
.``@ A
Id``A C
)``C D
)``D E
{aa 

GlobalDatabb 
.bb 
Currentbb "
.bb" #
SavedTracksbb# .
.bb. /
Addbb/ 2
(bb2 3
videobb3 8
.bb8 9
Idbb9 ;
,bb; <
newbb= @
MediaSourcebbA L
(bbL M
)bbM N
{bbO P
ArtistbbQ W
=bbX Y
videobbZ _
.bb_ `
Authorbb` f
,bbf g
Titlebbh m
=bbn o
videobbp u
.bbu v
Titlebbv {
,bb{ |
Duration	bb} 
=
bb 
video
bb 
.
bb 
Duration
bb 
,
bb 
FilePath
bb  
=
bb¡ ¢
video
bb£ ¨
.
bb¨ ©
Id
bb© «
,
bb« ¬
Type
bb­ ±
=
bb² ³
MediaSource
bb´ ¿
.
bb¿ À

SourceType
bbÀ Ê
.
bbÊ Ë
Web
bbË Î
}
bbÏ Ð
)
bbÐ Ñ
;
bbÑ Ò

GlobalDatacc 
.cc 
Currentcc "
.cc" #
SaveSavedTrackscc# 2
(cc2 3
)cc3 4
;cc4 5
}dd 
}ee 	
publicff 
staticff 
voidff 
RemoveSavedTrackff +
(ff+ ,
stringff, 2
idff3 5
)ff5 6
{gg 	
foreachhh 
(hh 
varhh 
playlisthh  
inhh! #

GlobalDatahh$ .
.hh. /
Currenthh/ 6
.hh6 7
	Playlistshh7 @
.hh@ A
KeyshhA E
)hhE F
{ii 

GlobalDatajj 
.jj 
Currentjj "
.jj" #
	Playlistsjj# ,
[jj, -
playlistjj- 5
]jj5 6
.jj6 7
Removejj7 =
(jj= >
idjj> @
)jj@ A
;jjA B
}kk 

GlobalDatamm 
.mm 
Currentmm 
.mm 
SavedTracksmm *
.mm* +
Removemm+ 1
(mm1 2
idmm2 4
)mm4 5
;mm5 6

GlobalDatann 
.nn 
Currentnn 
.nn 
SaveSavedTracksnn .
(nn. /
)nn/ 0
;nn0 1

GlobalDataoo 
.oo 
Currentoo 
.oo 

SaveConfigoo )
(oo) *
)oo* +
;oo+ ,
}pp 	
publicrr 
staticrr 
voidrr 
ReplaceSavedTrackrr ,
(rr, -
stringrr- 3
savedIdrr4 ;
,rr; <
stringrr= C
newFilePathrrD O
)rrO P
{ss 	
foreachtt 
(tt 
vartt 
playlisttt  
intt! #

GlobalDatatt$ .
.tt. /
Currenttt/ 6
.tt6 7
	Playliststt7 @
.tt@ A
KeysttA E
)ttE F
{uu 
ifvv 
(vv 

GlobalDatavv 
.vv 
Currentvv &
.vv& '
	Playlistsvv' 0
[vv0 1
playlistvv1 9
]vv9 :
.vv: ;
Containsvv; C
(vvC D
savedIdvvD K
)vvK L
)vvL M
{ww 

GlobalDataxx 
.xx 
Currentxx &
.xx& '
	Playlistsxx' 0
[xx0 1
playlistxx1 9
]xx9 :
[xx: ;

GlobalDataxx; E
.xxE F
CurrentxxF M
.xxM N
	PlaylistsxxN W
[xxW X
playlistxxX `
]xx` a
.xxa b
IndexOfxxb i
(xxi j
savedIdxxj q
)xxq r
]xxr s
=xxt u
newFilePath	xxv 
;
xx 

GlobalDatayy 
.yy 
Currentyy &
.yy& ' 
PlaylistsNeedRefreshyy' ;
=yy< =
trueyy> B
;yyB C
}zz 
}{{ 
int}} 
currentIndex}} 
=}} 

GlobalData}} )
.}}) *
Current}}* 1
.}}1 2
CurrentPlaylist}}2 A
.}}A B
	FindIndex}}B K
(}}K L
source}}L R
=>}}S U
source}}V \
.}}\ ]
FilePath}}] e
==}}f h
savedId}}i p
)}}p q
;}}q r
if~~ 
(~~ 
currentIndex~~ 
>=~~ 
$num~~  !
)~~! "
{ 

GlobalData
 
.
 
Current
 "
.
" #
CurrentPlaylist
# 2
[
2 3
currentIndex
3 ?
]
? @
=
A B

GlobalData
C M
.
M N
Current
N U
.
U V
Audios
V \
[
\ ]
newFilePath
] h
]
h i
;
i j

GlobalData
 
.
 
Current
 "
.
" #(
CurrentPlaylistNeedRefresh
# =
=
> ?
true
@ D
;
D E
}
 
RemoveSavedTrack
 
(
 
savedId
 $
)
$ %
;
% &

GlobalData
 
.
 
Current
 
.
 
SaveSavedTracks
 .
(
. /
)
/ 0
;
0 1

GlobalData
 
.
 
Current
 
.
 

SaveConfig
 )
(
) *
)
* +
;
+ ,
}
 	
}
 
} Õ
:D:\Projekty\CS\Newtone\Newtone.Core\Logic\ActionCommand.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

class 
ActionCommand 
:  
ICommand! )
{ 
private		 
readonly		 
Action		 
<		  
object		  &
>		& '
action		( .
;		. /
public 
event 
EventHandler !
CanExecuteChanged" 3
;3 4
public 
ActionCommand 
( 
Action #
<# $
object$ *
>* +
action, 2
)2 3
{ 	
this 
. 
action 
= 
action  
;  !
CanExecuteChanged 
? 
. 
Invoke %
(% &
this& *
,* +
	EventArgs, 5
.5 6
Empty6 ;
); <
;< =
} 	
public 
bool 

CanExecute 
( 
object %
	parameter& /
)/ 0
{ 	
return 
true 
; 
} 	
public 
void 
Execute 
( 
object "
	parameter# ,
), -
{ 	
action 
? 
. 
Invoke 
( 
	parameter $
)$ %
;% &
} 	
}   
}!! Ê
<D:\Projekty\CS\Newtone\Newtone.Core\Logic\ArrayExtensions.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

static 
class 
ArrayExtensions '
{ 
public		 
static		 
void		 
ForEach		 "
<		" #
T		# $
>		$ %
(		% &
this		& *
T		+ ,
[		, -
]		- .
array		/ 4
,		4 5
Action		6 <
<		< =
T		= >
>		> ?
action		@ F
)		F G
{

 	
foreach 
( 
T 
element 
in !
array" '
)' (
action 
( 
element 
) 
;  
} 	
public 
static 
void 
ForEach "
<" #
T# $
>$ %
(% &
this& *

Dictionary+ 5
<5 6
string6 <
,< =
T> ?
>? @
.@ A
KeyCollectionA N

collectionO Y
,Y Z
Action[ a
<a b
stringb h
>h i
actionj p
)p q
{ 	
foreach 
( 
string 
key 
in  "

collection# -
)- .
action 
( 
key 
) 
; 
} 	
public 
static 
void 
ForEach "
<" #
T# $
>$ %
(% &
this& *
IEnumerable+ 6
<6 7
T7 8
>8 9

enumerable: D
,D E
ActionF L
<L M
TM N
>N O
actionP V
)V W
{ 	
foreach 
( 
T 
element 
in !

enumerable" ,
., -
ToList- 3
(3 4
)4 5
)5 6
action 
( 
element 
) 
;  
} 	
} 
} ¢
?D:\Projekty\CS\Newtone\Newtone.Core\Logic\AsyncEndController.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

class 
AsyncEndController #
{ 
private 
readonly 

Dictionary #
<# $
string$ *
,* +
IAsyncEndListener, =
>= >
	listeners? H
=I J
newK N

DictionaryO Y
<Y Z
stringZ `
,` a
IAsyncEndListenerb s
>s t
(t u
)u v
;v w
public 
void 
Invoke 
( 
string !
name" &
)& '
{ 	
if 
( 
	listeners 
. 
ContainsKey %
(% &
name& *
)* +
)+ ,
	listeners 
[ 
name 
] 
.  
AsyncEnd  (
(( )
)) *
;* +
} 	
public 
void 
Add 
( 
string 
name #
,# $
IAsyncEndListener% 6
listener7 ?
)? @
{ 	
if 
( 
! 
	listeners 
. 
ContainsKey &
(& '
name' +
)+ ,
), -
	listeners 
. 
Add 
( 
name "
," #
listener$ ,
), -
;- .
} 	
} 
} Ö%
9D:\Projekty\CS\Newtone\Newtone.Core\Logic\ConsoleDebug.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

static 
class 
ConsoleDebug $
{ 
private

 
static

 
string

 
savePath

 &
;

& '
public 
static 
void 
	WriteLine $
($ %
string% +
text, 0
)0 1
{ 	
string 
output 
= 
$str 
+  !
DateTime" *
.* +
Now+ .
.. /
ToString/ 7
(7 8
)8 9
+: ;
$str< A
+B C
textD H
;H I
if 
( 

GlobalData 
. 
Current "
." #
IsDebugMode# .
). /
Debug 
. 
	WriteLine 
(  
output  &
)& '
;' (
if 
( 
	IsLogFile 
( 
) 
) 
WriteLog 
( 
output 
)  
;  !
} 	
public 
static 
void 
	WriteLine $
($ %
	Exception% .
e/ 0
)0 1
{ 	
string 
output 
= 
$str 
+  !
DateTime" *
.* +
Now+ .
.. /
ToString/ 7
(7 8
)8 9
+: ;
$str< A
+B C
eD E
;E F
if 
( 

GlobalData 
. 
Current "
." #
IsDebugMode# .
). /
Debug 
. 
	WriteLine 
(  
output  &
)& '
;' (
if 
( 
	IsLogFile 
( 
) 
) 
WriteLog 
( 
output 
)  
;  !
} 	
public!! 
static!! 
void!! 
	WriteLine!! $
(!!$ %
object!!% +
o!!, -
)!!- .
{"" 	
string## 
output## 
=## 
$str## 
+##  !
DateTime##" *
.##* +
Now##+ .
.##. /
ToString##/ 7
(##7 8
)##8 9
+##: ;
$str##< A
+##B C
o##D E
;##E F
if$$ 
($$ 

GlobalData$$ 
.$$ 
Current$$ "
.$$" #
IsDebugMode$$# .
)$$. /
Debug%% 
.%% 
	WriteLine%% 
(%%  
output%%  &
)%%& '
;%%' (
if'' 
('' 
	IsLogFile'' 
('' 
)'' 
)'' 
WriteLog(( 
((( 
output(( 
)((  
;((  !
})) 	
public++ 
static++ 
void++ 

SetLogfile++ %
(++% &
string++& ,
filepath++- 5
)++5 6
{,, 	
savePath-- 
=-- 
filepath-- 
;--  
}.. 	
private11 
static11 
void11 
WriteLog11 $
(11$ %
string11% +
data11, 0
)110 1
{22 	
try33 
{44 
FileInfo55 
fileInfo55 !
=55" #
new55$ '
FileInfo55( 0
(550 1
savePath551 9
)559 :
;55: ;
	Directory66 
.66 
CreateDirectory66 )
(66) *
fileInfo66* 2
.662 3
	Directory663 <
.66< =
FullName66= E
)66E F
;66F G
StreamWriter77 
streamWriter77 )
=77* +
new77, /
StreamWriter770 <
(77< =
savePath77= E
,77E F
true77G K
)77K L
;77L M
streamWriter88 
.88 
	WriteLine88 &
(88& '
data88' +
)88+ ,
;88, -
streamWriter99 
.99 
Close99 "
(99" #
)99# $
;99$ %
}:: 
catch;; 
{<< 
}>> 
}?? 	
privateAA 
staticAA 
boolAA 
	IsLogFileAA %
(AA% &
)AA& '
{BB 	
returnCC 
!CC 
stringCC 
.CC 
IsNullOrEmptyCC (
(CC( )
savePathCC) 1
)CC1 2
;CC2 3
}DD 	
}FF 
}GG ó
=D:\Projekty\CS\Newtone\Newtone.Core\Logic\CyrylicToUnicode.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

static 
class 
CyrylicToUnicode (
{ 
private 
const 
string 
cyrylicChars )
=* +
$str	, ±
;
± ²
private 
const 
string !
cyrylicToUnicodeChars 2
=3 4
$str	5 Â
;
Â Ã
public		 
static		 
string		 
Convert		 $
(		$ %
string		% +
cyrylicString		, 9
)		9 :
{

 	
string 
[ 
] 
cyrylicArray !
=" #
cyrylicChars$ 0
.0 1
Split1 6
(6 7
$char7 :
,: ;
StringSplitOptions< N
.N O
NoneO S
)S T
;T U
string 
[ 
] 
unicodeArray !
=" #!
cyrylicToUnicodeChars$ 9
.9 :
Split: ?
(? @
$char@ C
,C D
StringSplitOptionsE W
.W X
NoneX \
)\ ]
;] ^
string 
	newString 
= 
(  
string  &
)& '
cyrylicString' 4
.4 5
Clone5 :
(: ;
); <
;< =
for 
( 
int 
a 
= 
$num 
; 
a 
< 
cyrylicArray +
.+ ,
Length, 2
;2 3
a4 5
++5 7
)7 8
{ 
	newString 
= 
	newString %
.% &
Replace& -
(- .
cyrylicArray. :
[: ;
a; <
]< =
,= >
unicodeArray? K
[K L
aL M
]M N
)N O
;O P
} 
return 
	newString 
; 
} 	
public 
static 
bool 
	IsCyrylic $
($ %
string% +
text, 0
)0 1
{ 	
foreach 
( 
string 
item 
in  "
cyrylicChars# /
./ 0
Split0 5
(5 6
$char6 9
)9 :
): ;
{ 
if 
( 
text 
. 
Contains !
(! "
item" &
)& '
)' (
return 
true 
;  
}   
return!! 
false!! 
;!! 
}"" 	
}## 
}$$ Ø
>D:\Projekty\CS\Newtone\Newtone.Core\Logic\IAsyncEndListener.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

	interface 
IAsyncEndListener &
{ 
event 
EventHandler 

AsyncEnded %
;% &
void		 
AsyncEnd		 
(		 
)		 
;		 
}

 
} ã
9D:\Projekty\CS\Newtone\Newtone.Core\Logic\ICoreMessage.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

	interface 
ICoreMessage !
{ 
public 
void 
ShowSnackbar  
(  !
string! '
message( /
)/ 0
;0 1
public 
void 
ShowMessage 
(  
string  &
message' .
). /
;/ 0
public 
void 
	ShowError 
( 
string $
message% ,
), -
;- .
} 
}		 ú
8D:\Projekty\CS\Newtone\Newtone.Core\Logic\IInvokePage.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
	interface 
IInvokePage 
{ 
public 
void 

PageInvoke 
( 
)  
;  !
} 
} ±
AD:\Projekty\CS\Newtone\Newtone.Core\Logic\INavigationContainer.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

	interface  
INavigationContainer )
{ 
void 
Block 
( 
) 
; 
void 
Unblock 
( 
) 
; 
bool 
	IsBlocked 
( 
) 
; 
} 
}		 §
:D:\Projekty\CS\Newtone\Newtone.Core\Logic\ITimerContent.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

	interface 
ITimerContent "
{ 
void 
Tick 
( 
) 
; 
void 
	Appearing 
( 
) 
; 
void 
Disappearing 
( 
) 
; 
} 
}		 Ú
<D:\Projekty\CS\Newtone\Newtone.Core\Logic\IVisibleContent.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

	interface 
IVisibleContent $
{ 
void 
	Appearing 
( 
) 
; 
void 
Disappearing 
( 
) 
; 
} 
} «
=D:\Projekty\CS\Newtone\Newtone.Core\Logic\MessageGenerator.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

class 
MessageGenerator !
{ 
public 
ICoreMessage 
Core  
{! "
get# &
;& '
private( /
set0 3
;3 4
}5 6
public		 
MessageGenerator		 
(		  
ICoreMessage		  ,
core		- 1
)		1 2
{

 	
Core 
= 
core 
; 
} 	
public 
void 
Show 
( 
EMessageType %
type& *
,* +
string, 2
message3 :
): ;
{ 	
if 
( 
type 
== 
EMessageType $
.$ %
Snackbar% -
)- .
Core 
? 
. 
ShowSnackbar "
(" #
message# *
)* +
;+ ,
else 
if 
( 
type 
== 
EMessageType )
.) *
Message* 1
)1 2
Core 
? 
. 
ShowMessage !
(! "
message" )
)) *
;* +
else 
Core 
? 
. 
	ShowError 
(  
message  '
)' (
;( )
} 	
public 
enum 
EMessageType  
{ 	
Snackbar 
, 
Message 
, 
Error 
} 	
}!! 
}"" ó
=D:\Projekty\CS\Newtone\Newtone.Core\Logic\ObservableBridge.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

class 
ObservableBridge !
<! "
T" #
># $
{ 
private		 
readonly		 
List		 
<		 
T		 
>		  
items		! &
;		& '
public 
Action 
< 
T 
> 
Action 
{  !
get" %
;% &
set' *
;* +
}, -
public 
ObservableBridge 
(  
)  !
{ 	
items 
= 
new 
List 
< 
T 
> 
(  
)  !
;! "
} 	
public 
void 
Add 
( 
T 
item 
) 
{ 	
items 
. 
Add 
( 
item 
) 
; 
Action 
? 
. 
Invoke 
( 
item 
)  
;  !
} 	
public 
List 
< 
T 
> 
GetItems 
(  
)  !
{ 	
return 
items 
; 
}   	
public"" 
void"" 
Clear"" 
("" 
)"" 
{## 	
items$$ 
.$$ 
Clear$$ 
($$ 
)$$ 
;$$ 
}%% 	
}'' 
}(( æ
2D:\Projekty\CS\Newtone\Newtone.Core\Logic\Range.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

static 
class 
Range 
{ 
public 
static 
int 
GetRangeInt %
(% &
int& )
min* -
,- .
int/ 2
max3 6
,6 7
int8 ;
current< C
)C D
{ 	
if 
( 
min 
== 
max 
) 
return		 
min		 
;		 
if 
( 
current 
< 
min 
) 
{ 
int 
newC 
= 
current "
-# $
min% (
+) *
$num+ ,
;, -
return 
max 
- 
newC !
;! "
} 
if 
( 
current 
> 
max 
) 
{ 
int 
newC 
= 
current "
-# $
max% (
-) *
$num+ ,
;, -
return 
min 
+ 
newC !
;! "
} 
return 
current 
; 
} 	
public 
static 
double 
GetRangeDbl (
(( )
double) /
min0 3
,3 4
double5 ;
max< ?
,? @
doubleA G
currentH O
)O P
{ 	
if 
( 
min 
== 
max 
) 
return 
min 
; 
if   
(   
current   
<   
min   
)   
{!! 
double"" 
newC"" 
="" 
current"" %
-""& '
min""( +
+"", -
$num"". /
;""/ 0
return$$ 
max$$ 
-$$ 
newC$$ !
;$$! "
}%% 
if'' 
('' 
current'' 
>'' 
max'' 
)'' 
{(( 
double)) 
newC)) 
=)) 
current)) %
-))& '
max))( +
-)), -
$num)). /
;))/ 0
return** 
min** 
+** 
newC** !
;**! "
}++ 
return-- 
current-- 
;-- 
}.. 	
public00 
static00 
bool00 

InRangeInt00 %
(00% &
int00& )
min00* -
,00- .
int00/ 2
max003 6
,006 7
int008 ;
current00< C
)00C D
{11 	
return22 
current22 
>=22 
min22 !
&&22" $
current22% ,
<=22- /
max220 3
;223 4
}33 	
}55 
}66 	
:D:\Projekty\CS\Newtone\Newtone.Core\Logic\SyncException.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
[ 
Serializable 
] 
public 

class 
SyncException 
:  
	Exception! *
{ 
public		 
SyncException		 
(		 
)		 
:		  
base		! %
(		% &
$str		& 5
)		5 6
{

 	
} 	
public 
SyncException 
( 
string #
message$ +
)+ ,
:- .
base/ 3
(3 4
$str4 E
+E F
messageF M
)M N
{ 	
} 	
	protected 
SyncException 
(  
SerializationInfo  1
info2 6
,6 7
StreamingContext8 H
contextI P
)P Q
:R S
baseT X
(X Y
infoY ]
,] ^
context_ f
)f g
{ 	
} 	
} 
} 
7D:\Projekty\CS\Newtone\Newtone.Core\Logic\TickParser.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

static 
class 

TickParser "
{ 
public 
static 
string 

FormatTick '
(' (
double( .
ticks/ 4
)4 5
{ 	
int 
totalSeconds 
= 
(  
int  #
)# $
ticks$ )
;) *
int		 
minutes		 
=		 
totalSeconds		 &
/		' (
$num		) +
;		+ ,
int

 
seconds

 
=

 
totalSeconds

 &
-

' (
(

) *
minutes

* 1
*

2 3
$num

4 6
)

6 7
;

7 8
string 
format 
= 
$str 
; 
format 
+= 
minutes 
< 
$num  "
?# $
string% +
.+ ,
Concat, 2
(2 3
$num3 4
,4 5
minutes5 <
)< =
:> ?
minutes@ G
.G H
ToStringH P
(P Q
)Q R
;R S
format 
+= 
seconds 
< 
$num  "
?# $
string% +
.+ ,
Concat, 2
(2 3
$num3 4
,4 5
seconds5 <
)< =
:> ?
seconds@ G
.G H
ToStringH P
(P Q
)Q R
;R S
return 
format 
; 
} 	
} 
} ¥
9D:\Projekty\CS\Newtone\Newtone.Core\Logic\TrackCounter.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

class 
TrackCounter 
{ 
public 
MediaSource 
Media  
{! "
get# &
;& '
set( +
;+ ,
}- .
public		 
int		 
Count		 
{		 
get		 
;		 
set		  #
;		# $
}		% &
public 
TrackCounter 
( 
) 
{ 	
Media 
= 
new 
MediaSource #
(# $
)$ %
;% &
Count 
= 
$num 
; 
} 	
public 
TrackCounter 
( 
MediaSource '
media( -
,- .
int/ 2
count3 8
)8 9
{ 	
Media 
= 
media 
; 
Count 
= 
count 
; 
} 	
public 
override 
string 
ToString '
(' (
)( )
{ 	
return 
string 
. 
Concat  
(  !
Media! &
?& '
.' (
FilePath( 0
,0 1

GlobalData1 ;
.; <
	SEPARATOR< E
,E F
CountF K
,K L
$strL O
)O P
;P Q
} 	
public 
static 
TrackCounter "

FromString# -
(- .
string. 4

fromString5 ?
)? @
{   	

fromString!! 
=!! 

fromString!! #
.!!# $
Replace!!$ +
(!!+ ,
$str!!, /
,!!/ 0
$str!!1 3
)!!3 4
;!!4 5
string## 
[## 
]## 
elems## 
=## 

fromString## '
.##' (
Split##( -
(##- .

GlobalData##. 8
.##8 9
	SEPARATOR##9 B
)##B C
;##C D
return$$ 

GlobalData$$ 
.$$ 
Current$$ %
.$$% &
Audios$$& ,
.$$, -
ContainsKey$$- 8
($$8 9
elems$$9 >
[$$> ?
$num$$? @
]$$@ A
)$$A B
?$$C D
new$$E H
TrackCounter$$I U
($$U V

GlobalData$$V `
.$$` a
Current$$a h
.$$h i
Audios$$i o
[$$o p
elems$$p u
[$$u v
$num$$v w
]$$w x
]$$x y
,$$y z
int$${ ~
.$$~ 
Parse	$$ 
(
$$ 
elems
$$ 
[
$$ 
$num
$$ 
]
$$ 
)
$$ 
)
$$ 
:
$$ 
null
$$ 
;
$$ 
}%% 	
}'' 
}(( 
ED:\Projekty\CS\Newtone\Newtone.Core\Logic\YoutubeExplodeExtensions.cs
	namespace 	
Newtone
 
. 
Core 
. 
Logic 
{ 
public 

static 
class $
YoutubeExplodeExtensions 0
{ 
public

 
static

 
string

 !
GetVideoMixPlaylistId

 2
(

2 3
this

3 7
Video

8 =
video

> C
)

C D
{ 	
return 
$str 
+ 
video 
.  
Id  "
;" #
} 	
public 
static 
bool 
ValidateVideoId *
(* +
string+ 1
videoId2 9
)9 :
{ 	
if 
( 
string 
. 
IsNullOrWhiteSpace )
() *
videoId* 1
)1 2
)2 3
return 
false 
; 
if 
( 
videoId 
. 
Length 
!= !
$num" $
)$ %
return 
false 
; 
return 
! 
Regex 
. 
IsMatch !
(! "
videoId" )
,) *
$str+ =
)= >
;> ?
} 	
public!! 
static!! 
bool!! 
TryParseVideoId!! *
(!!* +
string!!+ 1
videoUrl!!2 :
,!!: ;
out!!< ?
string!!@ F
videoId!!G N
)!!N O
{"" 	
videoId## 
=## 
default## 
;## 
if%% 
(%% 
string%% 
.%% 
IsNullOrWhiteSpace%% )
(%%) *
videoUrl%%* 2
)%%2 3
)%%3 4
return&& 
false&& 
;&& 
var)) 
regularMatch)) 
=)) 
Regex)) $
.))$ %
Match))% *
())* +
videoUrl))+ 3
,))3 4
$str))5 ]
)))] ^
.))^ _
Groups))_ e
[))e f
$num))f g
]))g h
.))h i
Value))i n
;))n o
if** 
(** 
!** 
string** 
.** 
IsNullOrWhiteSpace** *
(*** +
regularMatch**+ 7
)**7 8
&&**9 ;
ValidateVideoId**< K
(**K L
regularMatch**L X
)**X Y
)**Y Z
{++ 
videoId,, 
=,, 
regularMatch,, &
;,,& '
return-- 
true-- 
;-- 
}.. 
var11 

shortMatch11 
=11 
Regex11 "
.11" #
Match11# (
(11( )
videoUrl11) 1
,111 2
$str113 Q
)11Q R
.11R S
Groups11S Y
[11Y Z
$num11Z [
]11[ \
.11\ ]
Value11] b
;11b c
if22 
(22 
!22 
string22 
.22 
IsNullOrWhiteSpace22 *
(22* +

shortMatch22+ 5
)225 6
&&227 9
ValidateVideoId22: I
(22I J

shortMatch22J T
)22T U
)22U V
{33 
videoId44 
=44 

shortMatch44 $
;44$ %
return55 
true55 
;55 
}66 
var99 

embedMatch99 
=99 
Regex99 "
.99" #
Match99# (
(99( )
videoUrl99) 1
,991 2
$str993 Z
)99Z [
.99[ \
Groups99\ b
[99b c
$num99c d
]99d e
.99e f
Value99f k
;99k l
if:: 
(:: 
!:: 
string:: 
.:: 
IsNullOrWhiteSpace:: *
(::* +

embedMatch::+ 5
)::5 6
&&::7 9
ValidateVideoId::: I
(::I J

embedMatch::J T
)::T U
)::U V
{;; 
videoId<< 
=<< 

embedMatch<< $
;<<$ %
return== 
true== 
;== 
}>> 
return@@ 
false@@ 
;@@ 
}AA 	
publicFF 
staticFF 
boolFF 
ValidatePlaylistIdFF -
(FF- .
stringFF. 4

playlistIdFF5 ?
)FF? @
{GG 	
ifHH 
(HH 
stringHH 
.HH 
IsNullOrWhiteSpaceHH )
(HH) *

playlistIdHH* 4
)HH4 5
)HH5 6
returnII 
falseII 
;II 
ifLL 
(LL 

playlistIdLL 
==LL 
$strLL "
)LL" #
returnMM 
trueMM 
;MM 
ifPP 
(PP 
!PP 

playlistIdPP 
.PP 

StartsWithPP &
(PP& '
$strPP' +
,PP+ ,
StringComparisonPP- =
.PP= >
OrdinalPP> E
)PPE F
&&PPG I
!QQ 

playlistIdQQ 
.QQ 

StartsWithQQ &
(QQ& '
$strQQ' +
,QQ+ ,
StringComparisonQQ- =
.QQ= >
OrdinalQQ> E
)QQE F
&&QQG I
!RR 

playlistIdRR 
.RR 

StartsWithRR &
(RR& '
$strRR' +
,RR+ ,
StringComparisonRR- =
.RR= >
OrdinalRR> E
)RRE F
&&RRG I
!SS 

playlistIdSS 
.SS 

StartsWithSS &
(SS& '
$strSS' +
,SS+ ,
StringComparisonSS- =
.SS= >
OrdinalSS> E
)SSE F
&&SSG I
!TT 

playlistIdTT 
.TT 

StartsWithTT &
(TT& '
$strTT' +
,TT+ ,
StringComparisonTT- =
.TT= >
OrdinalTT> E
)TTE F
&&TTG I
!UU 

playlistIdUU 
.UU 

StartsWithUU &
(UU& '
$strUU' +
,UU+ ,
StringComparisonUU- =
.UU= >
OrdinalUU> E
)UUE F
&&UUG I
!VV 

playlistIdVV 
.VV 

StartsWithVV &
(VV& '
$strVV' +
,VV+ ,
StringComparisonVV- =
.VV= >
OrdinalVV> E
)VVE F
&&VVG I
!WW 

playlistIdWW 
.WW 

StartsWithWW &
(WW& '
$strWW' +
,WW+ ,
StringComparisonWW- =
.WW= >
OrdinalWW> E
)WWE F
)WWF G
returnXX 
falseXX 
;XX 
if[[ 
([[ 

playlistId[[ 
.[[ 
Length[[ !
<[[" #
$num[[$ &
||[[' )

playlistId[[* 4
.[[4 5
Length[[5 ;
>[[< =
$num[[> @
)[[@ A
return\\ 
false\\ 
;\\ 
return^^ 
!^^ 
Regex^^ 
.^^ 
IsMatch^^ !
(^^! "

playlistId^^" ,
,^^, -
$str^^. @
)^^@ A
;^^A B
}__ 	
publicdd 
staticdd 
booldd 
TryParsePlaylistIddd -
(dd- .
stringdd. 4
playlistUrldd5 @
,dd@ A
outddB E
stringddF L

playlistIdddM W
)ddW X
{ee 	

playlistIdff 
=ff 
defaultff  
;ff  !
ifhh 
(hh 
stringhh 
.hh 
IsNullOrWhiteSpacehh )
(hh) *
playlistUrlhh* 5
)hh5 6
)hh6 7
returnii 
falseii 
;ii 
varll 
regularMatchll 
=ll 
Regexll $
.ll$ %
Matchll% *
(ll* +
playlistUrlll+ 6
,ll6 7
$strll8 f
)llf g
.llg h
Groupsllh n
[lln o
$numllo p
]llp q
.llq r
Valuellr w
;llw x
ifmm 
(mm 
!mm 
stringmm 
.mm 
IsNullOrWhiteSpacemm *
(mm* +
regularMatchmm+ 7
)mm7 8
&&mm9 ;
ValidatePlaylistIdmm< N
(mmN O
regularMatchmmO [
)mm[ \
)mm\ ]
{nn 

playlistIdoo 
=oo 
regularMatchoo )
;oo) *
returnpp 
truepp 
;pp 
}qq 
vartt 
compositeMatchtt 
=tt  
Regextt! &
.tt& '
Matchtt' ,
(tt, -
playlistUrltt- 8
,tt8 9
$strtt: e
)tte f
.ttf g
Groupsttg m
[ttm n
$numttn o
]tto p
.ttp q
Valuettq v
;ttv w
ifuu 
(uu 
!uu 
stringuu 
.uu 
IsNullOrWhiteSpaceuu *
(uu* +
compositeMatchuu+ 9
)uu9 :
&&uu; =
ValidatePlaylistIduu> P
(uuP Q
compositeMatchuuQ _
)uu_ `
)uu` a
{vv 

playlistIdww 
=ww 
compositeMatchww +
;ww+ ,
returnxx 
truexx 
;xx 
}yy 
var|| 
shortCompositeMatch|| #
=||$ %
Regex||& +
.||+ ,
Match||, 1
(||1 2
playlistUrl||2 =
,||= >
$str||? f
)||f g
.||g h
Groups||h n
[||n o
$num||o p
]||p q
.||q r
Value||r w
;||w x
if}} 
(}} 
!}} 
string}} 
.}} 
IsNullOrWhiteSpace}} *
(}}* +
shortCompositeMatch}}+ >
)}}> ?
&&}}@ B
ValidatePlaylistId}}C U
(}}U V
shortCompositeMatch}}V i
)}}i j
)}}j k
{~~ 

playlistId 
= 
shortCompositeMatch 0
;0 1
return
 
true
 
;
 
}
 
var
 !
embedCompositeMatch
 #
=
$ %
Regex
& +
.
+ ,
Match
, 1
(
1 2
playlistUrl
2 =
,
= >
$str
? o
)
o p
.
 
Groups
 
[
 
$num
 
]
 
.
 
Value
  
;
  !
if
 
(
 
!
 
string
 
.
  
IsNullOrWhiteSpace
 *
(
* +!
embedCompositeMatch
+ >
)
> ?
&&
@ B 
ValidatePlaylistId
C U
(
U V!
embedCompositeMatch
V i
)
i j
)
j k
{
 

playlistId
 
=
 !
embedCompositeMatch
 0
;
0 1
return
 
true
 
;
 
}
 
return
 
false
 
;
 
}
 	
public
 
static
 
bool
 
ValidateUsername
 +
(
+ ,
string
, 2
username
3 ;
)
; <
{
 	
if
 
(
 
string
 
.
  
IsNullOrWhiteSpace
 )
(
) *
username
* 2
)
2 3
)
3 4
return
 
false
 
;
 
if
 
(
 
username
 
.
 
Length
 
>
  !
$num
" $
)
$ %
return
 
false
 
;
 
return
 
!
 
Regex
 
.
 
IsMatch
 !
(
! "
username
" *
,
* +
$str
, ;
)
; <
;
< =
}
 	
public
¡¡ 
static
¡¡ 
bool
¡¡ 
TryParseUsername
¡¡ +
(
¡¡+ ,
string
¡¡, 2
userUrl
¡¡3 :
,
¡¡: ;
out
¡¡< ?
string
¡¡@ F
username
¡¡G O
)
¡¡O P
{
¢¢ 	
username
££ 
=
££ 
default
££ 
;
££ 
if
¥¥ 
(
¥¥ 
string
¥¥ 
.
¥¥  
IsNullOrWhiteSpace
¥¥ )
(
¥¥) *
userUrl
¥¥* 1
)
¥¥1 2
)
¥¥2 3
return
¦¦ 
false
¦¦ 
;
¦¦ 
var
©© 
regularMatch
©© 
=
©© 
Regex
©© $
.
©©$ %
Match
©©% *
(
©©* +
userUrl
©©+ 2
,
©©2 3
$str
©©4 Z
)
©©Z [
.
©©[ \
Groups
©©\ b
[
©©b c
$num
©©c d
]
©©d e
.
©©e f
Value
©©f k
;
©©k l
if
ªª 
(
ªª 
!
ªª 
string
ªª 
.
ªª  
IsNullOrWhiteSpace
ªª *
(
ªª* +
regularMatch
ªª+ 7
)
ªª7 8
&&
ªª9 ;
ValidateUsername
ªª< L
(
ªªL M
regularMatch
ªªM Y
)
ªªY Z
)
ªªZ [
{
«« 
username
¬¬ 
=
¬¬ 
regularMatch
¬¬ '
;
¬¬' (
return
­­ 
true
­­ 
;
­­ 
}
®® 
return
°° 
false
°° 
;
°° 
}
±± 	
public
¶¶ 
static
¶¶ 
bool
¶¶ 
ValidateChannelId
¶¶ ,
(
¶¶, -
string
¶¶- 3
	channelId
¶¶4 =
)
¶¶= >
{
·· 	
if
¸¸ 
(
¸¸ 
string
¸¸ 
.
¸¸  
IsNullOrWhiteSpace
¸¸ )
(
¸¸) *
	channelId
¸¸* 3
)
¸¸3 4
)
¸¸4 5
return
¹¹ 
false
¹¹ 
;
¹¹ 
if
¼¼ 
(
¼¼ 
!
¼¼ 
	channelId
¼¼ 
.
¼¼ 

StartsWith
¼¼ %
(
¼¼% &
$str
¼¼& *
,
¼¼* +
StringComparison
¼¼, <
.
¼¼< =
Ordinal
¼¼= D
)
¼¼D E
)
¼¼E F
return
½½ 
false
½½ 
;
½½ 
if
ÀÀ 
(
ÀÀ 
	channelId
ÀÀ 
.
ÀÀ 
Length
ÀÀ  
!=
ÀÀ! #
$num
ÀÀ$ &
)
ÀÀ& '
return
ÁÁ 
false
ÁÁ 
;
ÁÁ 
return
ÃÃ 
!
ÃÃ 
Regex
ÃÃ 
.
ÃÃ 
IsMatch
ÃÃ !
(
ÃÃ! "
	channelId
ÃÃ" +
,
ÃÃ+ ,
$str
ÃÃ- ?
)
ÃÃ? @
;
ÃÃ@ A
}
ÄÄ 	
public
ÉÉ 
static
ÉÉ 
bool
ÉÉ 
TryParseChannelId
ÉÉ ,
(
ÉÉ, -
string
ÉÉ- 3

channelUrl
ÉÉ4 >
,
ÉÉ> ?
out
ÉÉ@ C
string
ÉÉD J
	channelId
ÉÉK T
)
ÉÉT U
{
ÊÊ 	
	channelId
ËË 
=
ËË 
default
ËË 
;
ËË  
if
ÍÍ 
(
ÍÍ 
string
ÍÍ 
.
ÍÍ  
IsNullOrWhiteSpace
ÍÍ )
(
ÍÍ) *

channelUrl
ÍÍ* 4
)
ÍÍ4 5
)
ÍÍ5 6
return
ÎÎ 
false
ÎÎ 
;
ÎÎ 
var
ÑÑ 
regularMatch
ÑÑ 
=
ÑÑ 
Regex
ÑÑ $
.
ÑÑ$ %
Match
ÑÑ% *
(
ÑÑ* +

channelUrl
ÑÑ+ 5
,
ÑÑ5 6
$str
ÑÑ7 `
)
ÑÑ` a
.
ÑÑa b
Groups
ÑÑb h
[
ÑÑh i
$num
ÑÑi j
]
ÑÑj k
.
ÑÑk l
Value
ÑÑl q
;
ÑÑq r
if
ÒÒ 
(
ÒÒ 
!
ÒÒ 
string
ÒÒ 
.
ÒÒ  
IsNullOrWhiteSpace
ÒÒ *
(
ÒÒ* +
regularMatch
ÒÒ+ 7
)
ÒÒ7 8
&&
ÒÒ9 ;
ValidateChannelId
ÒÒ< M
(
ÒÒM N
regularMatch
ÒÒN Z
)
ÒÒZ [
)
ÒÒ[ \
{
ÓÓ 
	channelId
ÔÔ 
=
ÔÔ 
regularMatch
ÔÔ (
;
ÔÔ( )
return
ÕÕ 
true
ÕÕ 
;
ÕÕ 
}
ÖÖ 
return
ØØ 
false
ØØ 
;
ØØ 
}
ÙÙ 	
}
ÛÛ 
}ÜÜ úñ
8D:\Projekty\CS\Newtone\Newtone.Core\Media\CrossPlayer.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{ 
public 

class 
CrossPlayer 
{ 
private 
readonly 
IPlayerController *
webPC+ 0
;0 1
private 
readonly 
IPlayerController *
localPC+ 2
;2 3
private 
readonly 
List 
< 
int !
>! "
randomIndexes# 0
=1 2
new3 6
List7 ;
<; <
int< ?
>? @
(@ A
)A B
;B C
public 
IBasePlayer 

BasePlayer %
{& '
get( +
;+ ,
private- 4
set5 8
;8 9
}: ;
public 
IPlayerController  
PlayerController! 1
{2 3
get4 7
;7 8
private9 @
setA D
;D E
}F G
private 
Random 
Random 
{ 
get  #
;# $
set% (
;( )
}* +
public 
bool 
	IsPlaying 
{ 	
get 
{ 
return 

BasePlayer !
.! "
GetIsPlaying" .
(. /
)/ 0
;0 1
} 
}   	
public"" 
double"" 
Duration"" 
{## 	
get$$ 
{%% 
return&& 

BasePlayer&& !
.&&! "
GetDuration&&" -
(&&- .
)&&. /
;&&/ 0
}'' 
}(( 	
public** 
double** 
CurrentPosition** %
{++ 	
get,, 
{-- 
return.. 

BasePlayer.. !
...! "
GetCurrentPosition.." 4
(..4 5
)..5 6
;..6 7
}// 
}00 	
public22 
bool22 
CanSeek22 
{33 	
get44 
{55 
return66 

BasePlayer66 !
.66! "

GetCanSeek66" ,
(66, -
)66- .
;66. /
}77 
}88 	
public:: 
bool:: 
	IsLoading:: 
{:: 
get::  #
;::# $
set::% (
;::( )
}::* +
=::, -
false::. 3
;::3 4
public<< 
bool<< 
IsLocalFile<< 
{== 	
get>> 
=>>> 
PlayerController>> #
is>>$ &!
LocalPlayerController>>' <
;>>< =
}?? 	
publicAA 
ActionAA 

NativePlayAA  
{AA! "
getAA# &
;AA& '
privateAA( /
setAA0 3
;AA3 4
}AA5 6
publicDD 
CrossPlayerDD 
(DD 
IBasePlayerDD &

basePlayerDD' 1
)DD1 2
{EE 	

BasePlayerFF 
=FF 

basePlayerFF #
;FF# $
webPCGG 
=GG 
newGG 
WebPlayerControllerGG +
(GG+ ,
)GG, -
;GG- .
localPCHH 
=HH 
newHH !
LocalPlayerControllerHH /
(HH/ 0
)HH0 1
;HH1 2
RandomJJ 
=JJ 
newJJ 
RandomJJ 
(JJ  

GlobalDataJJ  *
.JJ* +
	NSEC_HASHJJ+ 4
.JJ4 5
GetHashCodeJJ5 @
(JJ@ A
)JJA B
)JJB C
;JJC D
	IsLoadingKK 
=KK 
falseKK 
;KK 
}LL 	
publicOO 
voidOO 
SetNativeActionsOO $
(OO$ %
ActionOO% +
playOO, 0
=OO1 2
nullOO3 7
)OO7 8
{PP 	

NativePlayQQ 
=QQ 
playQQ 
;QQ 
}RR 	
publicSS 
voidSS 
LoadPlaylistSS  
(SS  !
ListSS! %
<SS% &
stringSS& ,
>SS, -
playlistSS. 6
,SS6 7
intSS8 ;
currentIndexSS< H
,SSH I
boolSSJ N
loadSSO S
,SSS T
boolSSU Y
playSSZ ^
)SS^ _
{TT 	
LoadPlaylistUU 
(UU 
(UU 
)UU 
=>UU 
{VV 
ListWW 
<WW 
MediaSourceWW  
>WW  !
newPlaylistWW" -
=WW. /
newWW0 3
ListWW4 8
<WW8 9
MediaSourceWW9 D
>WWD E
(WWE F
)WWF G
;WWG H
playlistYY 
.YY 
ForEachYY  
(YY  !
trackYY! &
=>YY' )
newPlaylistYY* 5
.YY5 6
AddYY6 9
(YY9 :
trackYY: ?
.YY? @
LengthYY@ F
==YYG I
$numYYJ L
?YYM N

GlobalDataYYO Y
.YYY Z
CurrentYYZ a
.YYa b
SavedTracksYYb m
[YYm n
trackYYn s
]YYs t
:YYu v

GlobalData	YYw 
.
YY 
Current
YY 
.
YY 
Audios
YY 
[
YY 
track
YY 
]
YY 
)
YY 
)
YY 
;
YY 
return[[ 
newPlaylist[[ "
;[[" #
}\\ 
,\\ 
currentIndex\\ 
,\\ 
load\\ !
,\\! "
play\\# '
)\\' (
;\\( )
}]] 	
public__ 
void__ 
LoadPlaylist__  
(__  !
string__! '
playlistUrl__( 3
,__3 4
int__5 8
currentIndex__9 E
,__E F
MediaSource__G R
initial__S Z
,__Z [
bool__\ `
load__a e
,__e f
bool__g k
play__l p
)__p q
{`` 	

GlobalDataaa 
.aa 
Currentaa 
.aa 
CurrentPlaylistaa .
.aa. /
Clearaa/ 4
(aa4 5
)aa5 6
;aa6 7

GlobalDatabb 
.bb 
Currentbb 
.bb 
CurrentPlaylistbb .
.bb. /
Addbb/ 2
(bb2 3
initialbb3 :
)bb: ;
;bb; <

GlobalDatacc 
.cc 
Currentcc 
.cc 
MediaSourcecc *
=cc+ ,
initialcc- 4
;cc4 5

GlobalDatadd 
.dd 
Currentdd 
.dd 
PlaylistPositiondd /
=dd0 1
currentIndexdd2 >
;dd> ?

GlobalDataee 
.ee 
Currentee 
.ee 
QueuePositionee ,
=ee- .
currentIndexee/ ;
;ee; <
newff 
Taskff 
(ff 
(ff 
)ff 
=>ff 
{gg 
ifhh 
(hh 
loadhh 
)hh 
Loadii 
(ii 

GlobalDataii #
.ii# $
Currentii$ +
.ii+ ,
MediaSourcePathii, ;
)ii; <
;ii< =
ifjj 
(jj 
playjj 
)jj 

NativePlaykk 
?kk 
.kk  
Invokekk  &
(kk& '
)kk' (
;kk( )
}ll 
)ll 
.ll 
Startll 
(ll 
)ll 
;ll 
newmm 
Taskmm 
(mm 
asyncmm 
(mm 
)mm 
=>mm  
{nn 
YoutubeClientoo 
youtubeClientoo +
=oo, -
newoo. 1
YoutubeClientoo2 ?
(oo? @
)oo@ A
;ooA B
varpp 
playlistpp 
=pp 
awaitpp $
youtubeClientpp% 2
.pp2 3
	Playlistspp3 <
.pp< =
GetVideosAsyncpp= K
(ppK L
playlistUrlppL W
)ppW X
.ppX Y
BufferAsyncppY d
(ppd e
$numppe g
)ppg h
;pph i
ifrr 
(rr 
playlistrr 
.rr 
Countrr "
>rr# $
$numrr% &
)rr& '
{ss 
usingtt 
	WebClienttt #
clienttt$ *
=tt+ ,
newtt- 0
	WebClienttt1 :
(tt: ;
)tt; <
;tt< =

GlobalDatauu 
.uu 
Currentuu &
.uu& '
CurrentPlaylistuu' 6
.uu6 7
Clearuu7 <
(uu< =
)uu= >
;uu> ?

GlobalDatavv 
.vv 
Currentvv &
.vv& '
PlaylistPositionvv' 7
=vv8 9
$numvv: ;
;vv; <
foreachww 
(ww 
varww  
_itemww! &
inww' )
playlistww* 2
)ww2 3
{xx 
byteyy 
[yy 
]yy 
datayy #
=yy$ %
clientyy& ,
.yy, -
DownloadDatayy- 9
(yy9 :
_itemyy: ?
.yy? @

Thumbnailsyy@ J
.yyJ K
MediumResUrlyyK W
)yyW X
;yyX Y

GlobalDatazz "
.zz" #
Currentzz# *
.zz* +
CurrentPlaylistzz+ :
.zz: ;
Addzz; >
(zz> ?
newzz? B
NewtonezzC J
.zzJ K
CorezzK O
.zzO P
MediazzP U
.zzU V
MediaSourcezzV a
(zza b
)zzb c
{{{ 
Artist|| "
=||# $
_item||% *
.||* +
Author||+ 1
,||1 2
Duration}} $
=}}% &
_item}}' ,
.}}, -
Duration}}- 5
,}}5 6
FilePath~~ $
=~~% &
_item~~' ,
.~~, -
Id~~- /
,~~/ 0
Image !
=" #
data$ (
,( )
Title
 !
=
" #
_item
$ )
.
) *
Title
* /
,
/ 0
Type
  
=
! "
Newtone
# *
.
* +
Core
+ /
.
/ 0
Media
0 5
.
5 6
MediaSource
6 A
.
A B

SourceType
B L
.
L M
Web
M P
}
 
)
 
;
 
}
 
}
 
}
 
)
 
.
 
Start
 
(
 
)
 
;
 
}
 	
public
 
void
 
LoadPlaylist
  
(
  !
Func
! %
<
% &
List
& *
<
* +
MediaSource
+ 6
>
6 7
>
7 8
playlist
9 A
,
A B
int
C F
currentIndex
G S
,
S T
bool
U Y
load
Z ^
,
^ _
bool
` d
play
e i
)
i j
{
 	
randomIndexes
 
.
 
Clear
 
(
  
)
  !
;
! "

GlobalData
 
.
 
Current
 
.
 
CurrentPlaylist
 .
=
/ 0
playlist
1 9
(
9 :
)
: ;
;
; <

GlobalData
 
.
 
Current
 
.
 
PlaylistPosition
 /
=
0 1
currentIndex
2 >
;
> ?

GlobalData
 
.
 
Current
 
.
 
MediaSource
 *
=
+ ,

GlobalData
- 7
.
7 8
Current
8 ?
.
? @
CurrentPlaylist
@ O
[
O P
currentIndex
P \
]
\ ]
;
] ^
if
 
(
 
load
 
)
 
Load
 
(
 

GlobalData
 
.
  
Current
  '
.
' (
MediaSource
( 3
.
3 4
FilePath
4 <
)
< =
;
= >
if
 
(
 
play
 
)
 

NativePlay
 
?
 
.
 
Invoke
 "
(
" #
)
# $
;
$ %
}
 	
public
 
void
 
Load
 
(
 
string
 
filename
  (
)
( )
{
 	
	IsLoading
 
=
 
true
 
;
 

BasePlayer
 
.
 
Reset
 
(
 
)
 
;
 !
SetPlayerController
 
(
  
filename
  (
.
( )
Length
) /
==
0 2
$num
3 5
?
6 7
webPC
8 =
:
> ?
localPC
@ G
)
G H
;
H I
if
 
(
 
filename
 
.
 
Length
 
==
 !
$num
" $
&&
% '

GlobalData
( 2
.
2 3
Current
3 :
.
: ;
DownloadedIds
; H
.
H I
Contains
I Q
(
Q R
filename
R Z
)
Z [
)
[ \
{
 
try
 
{
 
var
 
filepath
  
=
! "

GlobalData
# -
.
- .
Current
. 5
.
5 6
	AudioTags
6 ?
.
? @
Keys
@ D
.
D E
First
E J
(
J K
file
K O
=>
P R
{
 
return
   

GlobalData
   )
.
  ) *
Current
  * 1
.
  1 2
	AudioTags
  2 ;
[
  ; <
file
  < @
]
  @ A
.
  A B
Id
  B D
==
  E G
filename
  H P
;
  P Q
}
¡¡ 
)
¡¡ 
;
¡¡ 
filename
¢¢ 
=
¢¢ 
filepath
¢¢ '
;
¢¢' (!
SetPlayerController
££ '
(
££' (
localPC
££( /
)
££/ 0
;
££0 1
}
¤¤ 
catch
¥¥ 
{
¦¦ 
}
¨¨ 
}
©© 
Debug
«« 
.
«« 
	WriteLine
«« 
(
«« 
$str
«« #
+
««$ %
filename
««& .
+
««/ 0
$str
««1 :
+
««; <
(
««= >
PlayerController
««> N
is
««O Q!
WebPlayerController
««R e
?
««f g
$str
««h }
:
««~ 
$str«« 
)«« 
)«« 
;«« 
PlayerController
¬¬ 
?
¬¬ 
.
¬¬ 
Load
¬¬ "
(
¬¬" #
this
¬¬# '
,
¬¬' (
filename
¬¬) 1
)
¬¬1 2
;
¬¬2 3
Debug
­­ 
.
­­ 
	WriteLine
­­ 
(
­­ 
$str
­­ %
+
­­% &
filename
­­& .
)
­­. /
;
­­/ 0
try
®® 
{
¯¯ 
Debug
°° 
.
°° 
	WriteLine
°° 
(
°°  
$str
°°  *
+
°°* +
filename
°°+ 3
)
°°3 4
;
°°4 5

BasePlayer
±± 
?
±± 
.
±± 
Prepare
±± #
(
±±# $
)
±±$ %
;
±±% &
}
²² 
catch
³³ 
(
³³ 
	Exception
³³ 
e
³³ 
)
³³ 
{
´´ 
Debug
µµ 
.
µµ 
	WriteLine
µµ 
(
µµ  
e
µµ  !
)
µµ! "
;
µµ" #
Debug
¶¶ 
.
¶¶ 
	WriteLine
¶¶ 
(
¶¶  
$str
¶¶  +
+
¶¶, -
(
¶¶. /
PlayerController
¶¶/ ?
is
¶¶@ B!
WebPlayerController
¶¶C V
?
¶¶W X
$str
¶¶Y n
:
¶¶o p
$str¶¶q 
)¶¶ 
)¶¶ 
;¶¶ 
Error
·· 
(
·· 

GlobalData
··  
.
··  !
ERROR_CORRUPTED
··! 0
)
··0 1
;
··1 2
	IsLoading
¸¸ 
=
¸¸ 
false
¸¸ !
;
¸¸! "
}
¹¹ 
}
ºº 	
public
¼¼ 
void
¼¼ 
Play
¼¼ 
(
¼¼ 
)
¼¼ 
{
½½ 	

BasePlayer
¾¾ 
?
¾¾ 
.
¾¾ 
Play
¾¾ 
(
¾¾ 
)
¾¾ 
;
¾¾ 

BasePlayer
¿¿ 
?
¿¿ 
.
¿¿ 
SetNotification
¿¿ '
(
¿¿' (
true
¿¿( ,
)
¿¿, -
;
¿¿- .
}
ÀÀ 	
public
ÂÂ 
void
ÂÂ 
Stop
ÂÂ 
(
ÂÂ 
)
ÂÂ 
{
ÃÃ 	

BasePlayer
ÄÄ 
?
ÄÄ 
.
ÄÄ 
Stop
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 

BasePlayer
ÅÅ 
?
ÅÅ 
.
ÅÅ 
SetNotification
ÅÅ '
(
ÅÅ' (
false
ÅÅ( -
)
ÅÅ- .
;
ÅÅ. /
}
ÆÆ 	
public
ÈÈ 
void
ÈÈ 
Pause
ÈÈ 
(
ÈÈ 
)
ÈÈ 
{
ÉÉ 	

BasePlayer
ÊÊ 
?
ÊÊ 
.
ÊÊ 
Pause
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ  

BasePlayer
ËË 
?
ËË 
.
ËË 
SetNotification
ËË '
(
ËË' (
false
ËË( -
)
ËË- .
;
ËË. /
}
ÌÌ 	
public
ÎÎ 
void
ÎÎ 
Next
ÎÎ 
(
ÎÎ 
)
ÎÎ 
{
ÏÏ 	
if
ÐÐ 
(
ÐÐ 

GlobalData
ÐÐ 
.
ÐÐ 
Current
ÐÐ "
.
ÐÐ" #
CurrentPlaylist
ÐÐ# 2
.
ÐÐ2 3
Count
ÐÐ3 8
>
ÐÐ9 :
$num
ÐÐ; <
)
ÐÐ< =
{
ÑÑ 
MediaSource
ÒÒ 
track
ÒÒ !
;
ÒÒ! "
if
ÓÓ 
(
ÓÓ 

GlobalData
ÓÓ 
.
ÓÓ 
Current
ÓÓ &
.
ÓÓ& '
CurrentPlaylist
ÓÓ' 6
.
ÓÓ6 7
Count
ÓÓ7 <
>
ÓÓ= >
$num
ÓÓ? @
)
ÓÓ@ A
{
ÔÔ 
int
ÕÕ 
addValue
ÕÕ  
=
ÕÕ! "
$num
ÕÕ# $
;
ÕÕ$ %
if
ÖÖ 
(
ÖÖ 

GlobalData
ÖÖ "
.
ÖÖ" #
Current
ÖÖ# *
.
ÖÖ* +

PlayerMode
ÖÖ+ 5
==
ÖÖ6 8

PlayerMode
ÖÖ9 C
.
ÖÖC D
All
ÖÖD G
)
ÖÖG H
addValue
××  
=
××! "
$num
××# $
;
××$ %

GlobalData
ÙÙ 
.
ÙÙ 
Current
ÙÙ &
.
ÙÙ& '
PlaylistPosition
ÙÙ' 7
+=
ÙÙ8 :
addValue
ÙÙ; C
;
ÙÙC D
if
ÛÛ 
(
ÛÛ 

GlobalData
ÛÛ "
.
ÛÛ" #
Current
ÛÛ# *
.
ÛÛ* +

PlayerMode
ÛÛ+ 5
==
ÛÛ6 8

PlayerMode
ÛÛ9 C
.
ÛÛC D
Random
ÛÛD J
)
ÛÛJ K

GlobalData
ÜÜ "
.
ÜÜ" #
Current
ÜÜ# *
.
ÜÜ* +
PlaylistPosition
ÜÜ+ ;
=
ÜÜ< =
	GetRandom
ÜÜ> G
(
ÜÜG H

GlobalData
ÜÜH R
.
ÜÜR S
Current
ÜÜS Z
.
ÜÜZ [
CurrentPlaylist
ÜÜ[ j
.
ÜÜj k
Count
ÜÜk p
)
ÜÜp q
;
ÜÜq r

GlobalData
ÞÞ 
.
ÞÞ 
Current
ÞÞ &
.
ÞÞ& '
PlaylistPosition
ÞÞ' 7
=
ÞÞ8 9
Logic
ÞÞ: ?
.
ÞÞ? @
Range
ÞÞ@ E
.
ÞÞE F
GetRangeInt
ÞÞF Q
(
ÞÞQ R
$num
ÞÞR S
,
ÞÞS T

GlobalData
ÞÞU _
.
ÞÞ_ `
Current
ÞÞ` g
.
ÞÞg h
CurrentPlaylist
ÞÞh w
.
ÞÞw x
Count
ÞÞx }
-
ÞÞ~ 
$numÞÞ 
,ÞÞ 

GlobalDataÞÞ 
.ÞÞ 
CurrentÞÞ 
.ÞÞ  
PlaylistPositionÞÞ ¦
)ÞÞ¦ §
;ÞÞ§ ¨
}
ßß 
track
áá 
=
áá 

GlobalData
áá "
.
áá" #
Current
áá# *
.
áá* +
CurrentPlaylist
áá+ :
[
áá: ;

GlobalData
áá; E
.
ááE F
Current
ááF M
.
ááM N
PlaylistPosition
ááN ^
]
áá^ _
;
áá_ `
if
ãã 
(
ãã 
IsLocalPath
ãã 
(
ãã  
track
ãã  %
.
ãã% &
FilePath
ãã& .
)
ãã. /
&&
ãã0 2
!
ãã3 4
File
ãã4 8
.
ãã8 9
Exists
ãã9 ?
(
ãã? @
track
ãã@ E
.
ããE F
FilePath
ããF N
)
ããN O
)
ããO P
{
ää 
Error
åå 
(
åå 

GlobalData
åå $
.
åå$ %
ERROR_FILE_EXISTS
åå% 6
)
åå6 7
;
åå7 8
}
ææ 
try
èè 
{
éé 
Load
êê 
(
êê 
track
êê 
.
êê 
FilePath
êê '
)
êê' (
;
êê( )
}
ëë 
catch
ìì 
{
íí 
Next
îî 
(
îî 
)
îî 
;
îî 
return
ïï 
;
ïï 
}
ðð 

GlobalData
òò 
.
òò 
Current
òò "
.
òò" #
MediaSource
òò# .
=
òò/ 0
track
òò1 6
;
òò6 7

BasePlayer
óó 
?
óó 
.
óó 
	AfterNext
óó %
(
óó% &
)
óó& '
;
óó' (

BasePlayer
õõ 
?
õõ 
.
õõ 
SetNotification
õõ +
(
õõ+ ,
true
õõ, 0
)
õõ0 1
;
õõ1 2
}
öö 
}
÷÷ 	
public
ùù 
void
ùù 
Prev
ùù 
(
ùù 
)
ùù 
{
úú 	
if
ûû 
(
ûû 

GlobalData
ûû 
.
ûû 
Current
ûû "
.
ûû" #
CurrentPlaylist
ûû# 2
.
ûû2 3
Count
ûû3 8
>
ûû9 :
$num
ûû; <
)
ûû< =
{
üü 
if
ýý 
(
ýý 

GlobalData
ýý 
.
ýý 
Current
ýý &
.
ýý& '
CurrentPlaylist
ýý' 6
.
ýý6 7
Count
ýý7 <
>
ýý= >
$num
ýý? @
)
ýý@ A
{
þþ 
int
ÿÿ 
addValue
ÿÿ  
=
ÿÿ! "
$num
ÿÿ# $
;
ÿÿ$ %
if
 
(
 

GlobalData
 "
.
" #
Current
# *
.
* +

PlayerMode
+ 5
==
6 8

PlayerMode
9 C
.
C D
All
D G
)
G H
addValue
  
=
! "
$num
# $
;
$ %

GlobalData
 
.
 
Current
 &
.
& '
PlaylistPosition
' 7
-=
8 :
addValue
; C
;
C D
if
 
(
 

GlobalData
 "
.
" #
Current
# *
.
* +

PlayerMode
+ 5
==
6 8

PlayerMode
9 C
.
C D
Random
D J
)
J K

GlobalData
 "
.
" #
Current
# *
.
* +
PlaylistPosition
+ ;
=
< =
	GetRandom
> G
(
G H

GlobalData
H R
.
R S
Current
S Z
.
Z [
CurrentPlaylist
[ j
.
j k
Count
k p
)
p q
;
q r

GlobalData
 
.
 
Current
 &
.
& '
PlaylistPosition
' 7
=
8 9
Logic
: ?
.
? @
Range
@ E
.
E F
GetRangeInt
F Q
(
Q R
$num
R S
,
S T

GlobalData
U _
.
_ `
Current
` g
.
g h
CurrentPlaylist
h w
.
w x
Count
x }
-
~ 
$num 
, 

GlobalData 
. 
Current 
.  
PlaylistPosition ¦
)¦ §
;§ ¨
}
 
MediaSource
 
track
 !
=
" #

GlobalData
$ .
.
. /
Current
/ 6
.
6 7
CurrentPlaylist
7 F
[
F G

GlobalData
G Q
.
Q R
Current
R Y
.
Y Z
PlaylistPosition
Z j
]
j k
;
k l
if
 
(
 
IsLocalPath
 
(
  
track
  %
.
% &
FilePath
& .
)
. /
&&
0 2
!
3 4
File
4 8
.
8 9
Exists
9 ?
(
? @
track
@ E
.
E F
FilePath
F N
)
N O
)
O P
{
 
Error
 
(
 

GlobalData
 $
.
$ %
ERROR_FILE_EXISTS
% 6
)
6 7
;
7 8
}
 
Load
 
(
 
track
 
.
 
FilePath
 #
)
# $
;
$ %

GlobalData
 
.
 
Current
 "
.
" #
MediaSource
# .
=
/ 0
track
1 6
;
6 7

BasePlayer
 
?
 
.
 
	AfterPrev
 %
(
% &
)
& '
;
' (

BasePlayer
 
?
 
.
 
SetNotification
 +
(
+ ,
true
, 0
)
0 1
;
1 2
}
 
}
 	
public
 
void
 
Reset
 
(
 
)
 
{
 	
Stop
 
(
 
)
 
;
 
}
 	
public
¡¡ 
void
¡¡ 
Seek
¡¡ 
(
¡¡ 
double
¡¡ 
seek
¡¡  $
)
¡¡$ %
{
¢¢ 	
if
££ 
(
££ 

BasePlayer
££ 
.
££ 

GetCanSeek
££ %
(
££% &
)
££& '
)
££' (

BasePlayer
¤¤ 
?
¤¤ 
.
¤¤ 
Seek
¤¤  
(
¤¤  !
seek
¤¤! %
)
¤¤% &
;
¤¤& '
}
¥¥ 	
public
§§ 
void
§§ 
	SetVolume
§§ 
(
§§ 
float
§§ #
volume
§§$ *
)
§§* +
{
¨¨ 	

BasePlayer
©© 
?
©© 
.
©© 
	SetVolume
©© !
(
©©! "
volume
©©" (
)
©©( )
;
©©) *
}
ªª 	
public
¬¬ 
float
¬¬ 
	GetVolume
¬¬ 
(
¬¬ 
)
¬¬  
{
­­ 	
return
®® 

BasePlayer
®® 
.
®® 
	GetVolume
®® '
(
®®' (
)
®®( )
;
®®) *
}
¯¯ 	
public
±± 
void
±± 
Error
±± 
(
±± 
string
±±  
error
±±! &
)
±±& '
{
²² 	
string
³³ 
	errorText
³³ 
=
³³ 
error
³³ $
;
³³$ %
if
µµ 
(
µµ 
error
µµ 
==
µµ 

GlobalData
µµ #
.
µµ# $
ERROR_FILE_EXISTS
µµ$ 5
)
µµ5 6
	errorText
¶¶ 
=
¶¶ 
Localization
¶¶ (
.
¶¶( )
SnackFileExists
¶¶) 8
;
¶¶8 9
else
·· 
if
·· 
(
·· 
error
·· 
==
·· 

GlobalData
·· (
.
··( )
ERROR_CORRUPTED
··) 8
)
··8 9
	errorText
¸¸ 
=
¸¸ 
Localization
¸¸ (
.
¸¸( )
FileCorrupted
¸¸) 6
;
¸¸6 7

GlobalData
ºº 
.
ºº 
Current
ºº 
.
ºº 
	Messenger
ºº (
.
ºº( )
Show
ºº) -
(
ºº- .
MessageGenerator
ºº. >
.
ºº> ?
EMessageType
ºº? K
.
ººK L
Snackbar
ººL T
,
ººT U
	errorText
ººV _
)
ºº_ `
;
ºº` a
}
»» 	
private
¾¾ 
int
¾¾ 
	GetRandom
¾¾ 
(
¾¾ 
int
¾¾ !
max
¾¾" %
)
¾¾% &
{
¿¿ 	
if
ÀÀ 
(
ÀÀ 
randomIndexes
ÀÀ 
.
ÀÀ 
Count
ÀÀ #
>=
ÀÀ$ &
max
ÀÀ' *
||
ÀÀ+ -
randomIndexes
ÀÀ. ;
.
ÀÀ; <
Count
ÀÀ< A
==
ÀÀB D
$num
ÀÀE F
)
ÀÀF G
{
ÁÁ 
randomIndexes
ÂÂ 
.
ÂÂ 
Clear
ÂÂ #
(
ÂÂ# $
)
ÂÂ$ %
;
ÂÂ% &
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
a
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
a
ÃÃ  
<
ÃÃ! "
max
ÃÃ# &
;
ÃÃ& '
a
ÃÃ( )
++
ÃÃ) +
)
ÃÃ+ ,
{
ÄÄ 
randomIndexes
ÅÅ !
.
ÅÅ! "
Add
ÅÅ" %
(
ÅÅ% &
a
ÅÅ& '
)
ÅÅ' (
;
ÅÅ( )
}
ÆÆ 
}
ÇÇ 
int
ÉÉ 
randomNumber
ÉÉ 
=
ÉÉ 
Random
ÉÉ %
.
ÉÉ% &
Next
ÉÉ& *
(
ÉÉ* +
$num
ÉÉ+ ,
,
ÉÉ, -
max
ÉÉ- 0
)
ÉÉ0 1
;
ÉÉ1 2
if
ËË 
(
ËË 
randomIndexes
ËË 
.
ËË 
Contains
ËË &
(
ËË& '
randomNumber
ËË' 3
)
ËË3 4
)
ËË4 5
{
ÌÌ 
randomIndexes
ÍÍ 
.
ÍÍ 
Remove
ÍÍ $
(
ÍÍ$ %
randomNumber
ÍÍ% 1
)
ÍÍ1 2
;
ÍÍ2 3
return
ÎÎ 
randomNumber
ÎÎ #
;
ÎÎ# $
}
ÏÏ 
else
ÐÐ 
{
ÑÑ 
return
ÒÒ 
	GetRandom
ÒÒ  
(
ÒÒ  !
max
ÒÒ! $
)
ÒÒ$ %
;
ÒÒ% &
}
ÓÓ 
}
ÔÔ 	
private
ÕÕ 
void
ÕÕ !
SetPlayerController
ÕÕ (
(
ÕÕ( )
IPlayerController
ÕÕ) :
playerController
ÕÕ; K
)
ÕÕK L
{
ÖÖ 	
PlayerController
×× 
=
×× 
playerController
×× /
;
××/ 0
}
ØØ 	
private
ÚÚ 
bool
ÚÚ 
IsLocalPath
ÚÚ  
(
ÚÚ  !
string
ÚÚ! '
filepath
ÚÚ( 0
)
ÚÚ0 1
{
ÛÛ 	
return
ÜÜ 
filepath
ÜÜ 
.
ÜÜ 
Length
ÜÜ "
>
ÜÜ# $
$num
ÜÜ% '
;
ÜÜ' (
}
ÝÝ 	
}
ßß 
}àà ¡
8D:\Projekty\CS\Newtone\Newtone.Core\Media\IBasePlayer.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{ 
public 

	interface 
IBasePlayer  
{ 
bool 
GetIsPlaying 
( 
) 
; 
double 
GetDuration 
( 
) 
; 
double 
GetCurrentPosition !
(! "
)" #
;# $
bool 

GetCanSeek 
( 
) 
; 
void		 
Load		 
(		 
string		 
filename		 !
)		! "
;		" #
void

 
Play

 
(

 
)

 
;

 
void 
Stop 
( 
) 
; 
void 
Pause 
( 
) 
; 
void 
Reset 
( 
) 
; 
void 
Seek 
( 
double 
seek 
) 
; 
void 
	SetVolume 
( 
float 
volume #
)# $
;$ %
float 
	GetVolume 
( 
) 
; 
void 
SetNotification 
( 
bool !
	isPlaying" +
)+ ,
;, -
void 
Prepare 
( 
) 
; 
void 
Prepared 
( 
CrossPlayer !
player" (
)( )
;) *
void 
	AfterPrev 
( 
) 
; 
void 
	AfterNext 
( 
) 
; 
} 
} §
>D:\Projekty\CS\Newtone\Newtone.Core\Media\IPlayerController.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{ 
public 

	interface 
IPlayerController &
{ 
public 
void 
Load 
( 
CrossPlayer $
player% +
,+ ,
string- 3
filepath4 <
)< =
;= >
public 
void 
Prepared 
( 
CrossPlayer (
player) /
)/ 0
;0 1
public 
void 
	Completed 
( 
CrossPlayer )
player* 0
)0 1
;1 2
} 
}		 Ô

BD:\Projekty\CS\Newtone\Newtone.Core\Media\LocalPlayerController.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{ 
public 

class !
LocalPlayerController &
:' (
IPlayerController) :
{ 
public 
void 
	Completed 
( 
CrossPlayer )
player* 0
)0 1
{ 	
player 
. 
Next 
( 
) 
; 
}		 	
public 
void 
Load 
( 
CrossPlayer $
player% +
,+ ,
string- 3
filepath4 <
)< =
{ 	
player 
. 

BasePlayer 
. 
Load "
(" #
filepath# +
)+ ,
;, -
} 	
public 
void 
Prepared 
( 
CrossPlayer (
player) /
)/ 0
{ 	
player 
. 
Play 
( 
) 
; 
player 
. 
	IsLoading 
= 
false $
;$ %
} 	
} 
} Ï
8D:\Projekty\CS\Newtone\Newtone.Core\Media\MediaFormat.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{ 
public 

enum 
MediaFormat 
{ 
m4a 
, 
ogg 
} 
} ù
8D:\Projekty\CS\Newtone\Newtone.Core\Media\MediaOutput.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{ 
public 

class 
MediaOutput 
{ 
public 
byte 
[ 
] 
Data 
{ 
get  
;  !
set" %
;% &
}' (
public 
MediaOutputType 

OutputType )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public

 
MediaOutput

 
(

 
byte

 
[

  
]

  !
data

" &
,

& '
MediaOutputType

( 7

outputType

8 B
)

B C
{ 	
Data 
= 
data 
; 

OutputType 
= 

outputType #
;# $
} 	
} 
} ÷
<D:\Projekty\CS\Newtone\Newtone.Core\Media\MediaOutputType.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{ 
public 

enum 
MediaOutputType 
{ 
mp4 
, 
mp3 
, 
m4a 
}		 
} ß,
<D:\Projekty\CS\Newtone\Newtone.Core\Media\MediaProcessing.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{ 
public 

static 
class 
MediaProcessing '
{ 
private

 
const

 
int

 "
MINIMUM_TRACK_DURATION

 0
=

1 2
$num

3 5
;

5 6
public 
static 
MediaSource !
	GetSource" +
(+ ,
string, 2
filePath3 ;
); <
{ 	
MediaSource 
	container !
=" #
new$ '
MediaSource( 3
{ 
FilePath 
= 
filePath #
} 
; 
try 
{ 
ATL 
. 
Track 
	audioFile #
=$ %
new& )
ATL* -
.- .
Track. 3
(3 4
filePath4 <
)< =
;= >
	container 
. 
Title 
=  !
	audioFile" +
.+ ,
Title, 1
==2 4
$str5 7
||8 :
	audioFile; D
.D E
TitleE J
==K M
nullN R
?S T
newU X
FileInfoY a
(a b
filePathb j
)j k
.k l
Namel p
:q r
	audioFiles |
.| }
Title	} 
;
 
	container 
. 
Artist  
=! "
	audioFile# ,
., -
Artist- 3
==4 6
$str7 9
?: ;
Localization< H
.H I
UnknownArtistI V
:W X
	audioFileY b
.b c
Artistc i
;i j
for 
( 
int 
a 
= 
$num 
; 
a  !
<" #
	audioFile$ -
.- .
EmbeddedPictures. >
.> ?
Count? D
;D E
aF G
++G I
)I J
{ 
if 
( 
	audioFile !
.! "
EmbeddedPictures" 2
[2 3
a3 4
]4 5
!=6 8
null9 =
&&> @
	audioFileA J
.J K
EmbeddedPicturesK [
[[ \
a\ ]
]] ^
.^ _
PictureData_ j
.j k
Lengthk q
>r s
$numt u
)u v
{ 
	container !
.! "
Image" '
=( )
	audioFile* 3
.3 4
EmbeddedPictures4 D
[D E
aE F
]F G
.G H
PictureDataH S
;S T
break   
;   
}!! 
}"" 
	container$$ 
.$$ 
Duration$$ "
=$$# $
TimeSpan$$% -
.$$- .
FromSeconds$$. 9
($$9 :
	audioFile$$: C
.$$C D
Duration$$D L
)$$L M
;$$M N
}&& 
catch'' 
{(( 
	container)) 
.)) 
Title)) 
=))  !
new))" %
FileInfo))& .
()). /
filePath))/ 7
)))7 8
.))8 9
Name))9 =
;))= >
	container** 
.** 
Artist**  
=**! "
Localization**# /
.**/ 0
UnknownArtist**0 =
;**= >
}++ 
if-- 
(-- 

GlobalData-- 
.-- 
Current-- "
.--" #
	AudioTags--# ,
.--, -
ContainsKey--- 8
(--8 9
filePath--9 A
)--A B
)--B C
{.. 
MediaSourceTag// 
newTags// &
=//' (

GlobalData//) 3
.//3 4
Current//4 ;
.//; <
	AudioTags//< E
[//E F
filePath//F N
]//N O
;//O P
	container11 
.11 
Artist11  
=11! "
newTags11# *
.11* +
Author11+ 1
;111 2
	container22 
.22 
Title22 
=22  !
newTags22" )
.22) *
Title22* /
;22/ 0
	container33 
.33 
Image33 
??=33  #
newTags33$ +
.33+ ,
Image33, 1
;331 2
if55 
(55 
	container55 
.55 
Duration55 %
.55% &
TotalMilliseconds55& 7
==558 :
$num55; <
)55< =
{66 
	container77 
.77 
Duration77 &
=77' (
newTags77) 0
.770 1
TempDuration771 =
;77= >
}88 
if;; 
(;; 
!;; 
string;; 
.;; 
IsNullOrEmpty;; )
(;;) *
newTags;;* 1
.;;1 2
Id;;2 4
);;4 5
&&;;6 8
!;;9 :

GlobalData;;: D
.;;D E
Current;;E L
.;;L M
DownloadedIds;;M Z
.;;Z [
Contains;;[ c
(;;c d
newTags;;d k
.;;k l
Id;;l n
);;n o
);;o p

GlobalData<< 
.<< 
Current<< &
.<<& '
DownloadedIds<<' 4
.<<4 5
Add<<5 8
(<<8 9
newTags<<9 @
.<<@ A
Id<<A C
)<<C D
;<<D E
}== 
return>> 
	container>> 
;>> 
}?? 	
}AA 
}BB ¶*
8D:\Projekty\CS\Newtone\Newtone.Core\Media\MediaSource.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{ 
public 

class 
MediaSource 
{		 
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
FilePath 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Artist 
{ 
get "
;" #
set$ '
;' (
}) *
public 
TimeSpan 
Duration  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
byte 
[ 
] 
Image 
{ 
get !
;! "
set# &
;& '
}( )
public 

SourceType 
Type 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
enum 

SourceType 
{ 	
Local 
, 
Web 
} 	
public 
MediaSource 
Clone  
(  !
)! "
{ 	
return 
new 
MediaSource "
(" #
)# $
{ 
Title 
= 
this 
. 
Title "
," #
Artist 
= 
this 
. 
Artist $
,$ %
Duration   
=   
this   
.    
Duration    (
,  ( )
FilePath!! 
=!! 
this!! 
.!!  
FilePath!!  (
,!!( )
Image"" 
="" 
this"" 
."" 
Image"" "
,""" #
Type## 
=## 
this## 
.## 
Type##  
}$$ 
;$$ 
}%% 	
public)) 
static)) 
explicit)) 
operator)) '
MediaSource))( 3
())3 4
Video))4 9
video)): ?
)))? @
{** 	
using++ 
	WebClient++ 
client++ "
=++# $
new++% (
	WebClient++) 2
(++2 3
)++3 4
;++4 5
byte,, 
[,, 
],, 
picture,, 
=,, 
client,, #
.,,# $
DownloadData,,$ 0
(,,0 1
video,,1 6
.,,6 7

Thumbnails,,7 A
.,,A B
MediumResUrl,,B N
),,N O
;,,O P
return-- 
new-- 
MediaSource-- "
(--" #
)--# $
{.. 
Artist// 
=// 
video// 
.// 
Author// %
,//% &
Duration00 
=00 
video00  
.00  !
Duration00! )
,00) *
FilePath11 
=11 
video11  
.11  !
Id11! #
,11# $
Title22 
=22 
video22 
.22 
Title22 #
,22# $
Type33 
=33 

SourceType33 !
.33! "
Web33" %
,33% &
Image44 
=44 
picture44 
}55 
;55 
}66 	
public88 
static88 
implicit88 
operator88 '

TrackModel88( 2
(882 3
MediaSource883 >
source88? E
)88E F
{99 	
return:: 
new:: 

TrackModel:: !
(::! "
)::" #
{;; 
Duration<< 
=<< 
source<< !
.<<! "
Duration<<" *
.<<* +
ToString<<+ 3
(<<3 4
$str<<4 =
)<<= >
,<<> ?
FilePath== 
=== 
source== !
.==! "
FilePath==" *
,==* +
Title>> 
=>> 
source>> 
.>> 
Title>> $
,>>$ %
Artist?? 
=?? 
source?? 
.??  
Artist??  &
}@@ 
;@@ 
}AA 	
publicCC 
staticCC 
implicitCC 
operatorCC '
MediaSourceCC( 3
(CC3 4
SearchResultModelCC4 E
modelCCF K
)CCK L
{DD 	
returnEE 
newEE 
MediaSourceEE "
(EE" #
)EE# $
{FF 
ArtistGG 
=GG 
modelGG 
.GG 
AuthorGG %
,GG% &
DurationHH 
=HH 
modelHH  
.HH  !
DurationHH! )
,HH) *
FilePathII 
=II 
modelII  
.II  !
IdII! #
,II# $
ImageJJ 
=JJ 
modelJJ 
.JJ 
ImageJJ #
,JJ# $
TitleKK 
=KK 
modelKK 
.KK 
TitleKK #
,KK# $
TypeLL 
=LL 

SourceTypeLL !
.LL! "
WebLL" %
}MM 
;MM 
}NN 	
}QQ 
}RR Å
;D:\Projekty\CS\Newtone\Newtone.Core\Media\MediaSourceTag.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{ 
public 

class 
MediaSourceTag 
{ 
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public		 
string		 
Title		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
string

 
Author

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
byte 
[ 
] 
Image 
{ 
get !
;! "
set# &
;& '
}( )
public 
TimeSpan 
TempDuration $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} ð
7D:\Projekty\CS\Newtone\Newtone.Core\Media\PlayerMode.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{ 
public 

enum 

PlayerMode 
{ 
One 
, 
Random 
, 
All 
}		 
} 
@D:\Projekty\CS\Newtone\Newtone.Core\Media\RecomendedPlaylists.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{ 
public 

static 
class 
RecomendedPlaylists +
{		 
public

 
static

 

Dictionary

  
<

  !
string

! '
,

' (
string

) /
>

/ 0"
GetRecomendedPlaylists

1 G
(

G H
)

H I
{ 	

Dictionary 
< 
string 
, 
string %
>% &
	playlists' 0
=1 2
new3 6

Dictionary7 A
<A B
stringB H
,H I
stringJ P
>P Q
(Q R
)R S
;S T
byte 
[ 
] 
data 
; 
try 
{ 
using 
	WebClient 
client  &
=' (
new) ,
	WebClient- 6
(6 7
)7 8
;8 9
data 
= 
client 
. 
DownloadData *
(* +
$str+ _
)_ `
;` a
} 
catch 
{ 
return 
	playlists  
;  !
} 
string 
buffer 
= 
Encoding $
.$ %
UTF8% )
.) *
	GetString* 3
(3 4
data4 8
)8 9
;9 :
string 
[ 
] 
lines 
= 
buffer #
.# $
Split$ )
() *
$char* .
,. /
System0 6
.6 7
StringSplitOptions7 I
.I J
RemoveEmptyEntriesJ \
)\ ]
;] ^
foreach 
( 
var 
line 
in 
lines  %
)% &
{ 
string 
[ 
] 
elems 
=  
line! %
.% &
Split& +
(+ ,
$char, /
)/ 0
;0 1
if   
(   $
YoutubeExplodeExtensions   +
.  + ,
TryParsePlaylistId  , >
(  > ?
elems  ? D
[  D E
$num  E F
]  F G
,  G H
out  I L
string  M S

playlistId  T ^
)  ^ _
&&  ` b
!  c d

GlobalData  d n
.  n o
Current  o v
.  v w 
WebToLocalPlaylists	  w 
.
   
ContainsKey
   
(
   

playlistId
   ¡
)
  ¡ ¢
)
  ¢ £
{!! 
	playlists"" 
."" 
Add"" !
(""! "
elems""" '
[""' (
$num""( )
]"") *
,""* +
elems"", 1
[""1 2
$num""2 3
]""3 4
)""4 5
;""5 6
}## 
}$$ 
return&& 
	playlists&& 
;&& 
}'' 	
}(( 
})) ò
@D:\Projekty\CS\Newtone\Newtone.Core\Media\WebPlayerController.cs
	namespace 	
Newtone
 
. 
Core 
. 
Media 
{		 
public

 

class

 
WebPlayerController

 $
:

% &
IPlayerController

' 8
{ 
public 
void 
	Completed 
( 
CrossPlayer )
player* 0
)0 1
{ 	
player 
. 
Next 
( 
) 
; 
} 	
public 
void 
Load 
( 
CrossPlayer $
player% +
,+ ,
string- 3
filepath4 <
)< =
{ 	
player 
. 
Reset 
( 
) 
; 
YoutubeClient 
client  
=! "
new# &
YoutubeClient' 4
(4 5
)5 6
;6 7
StreamManifest 
manifest #
=$ %
null& *
;* +
Task 
. 
Run 
( 
async 
( 
) 
=>  
{ 
manifest 
= 
await  
client! '
.' (
Videos( .
.. /
Streams/ 6
.6 7
GetManifestAsync7 G
(G H
filepathH P
)P Q
;Q R
foreach 
( 
var 
item  
in! #
manifest$ ,
., -
GetAudioOnly- 9
(9 :
): ;
); <
{ 
Debug 
. 
	WriteLine #
(# $
item$ (
.( )
Size) -
+. /
$str0 3
+4 5
item6 :
.: ;
Bitrate; B
+C D
$strE H
+I J
itemK O
.O P

AudioCodecP Z
)Z [
;[ \
} 
player 
. 

BasePlayer !
.! "
Load" &
(& '
manifest' /
./ 0
GetAudioOnly0 <
(< =
)= >
.> ?
Where? D
(D E
infoE I
=>J L
infoM Q
.Q R

AudioCodecR \
.\ ]
Contains] e
(e f

GlobalDataf p
.p q
Currentq x
.x y
MediaFormat	y 
==
 
MediaFormat
 
.
 
m4a
 
?
 
$str
  
:
¡ ¢
$str
£ ©
)
© ª
)
ª «
.
« ¬
OrderByDescending
¬ ½
(
½ ¾
info
¾ Â
=>
Ã Å
info
Æ Ê
.
Ê Ë
Bitrate
Ë Ò
.
Ò Ó
BitsPerSecond
Ó à
)
à á
.
á â
First
â ç
(
ç è
)
è é
.
é ê
Url
ê í
)
í î
;
î ï
} 
) 
. 
Wait 
( 
) 
; 
}!! 	
public## 
void## 
Prepared## 
(## 
CrossPlayer## (
player##) /
)##/ 0
{$$ 	
player%% 
.%% 
Play%% 
(%% 
)%% 
;%% 
player&& 
.&& 
	IsLoading&& 
=&& 
false&& $
;&&$ %
}'' 	
})) 
}** È
9D:\Projekty\CS\Newtone\Newtone.Core\Models\ArtistModel.cs
	namespace 	
Newtone
 
. 
Core 
. 
Models 
{ 
public 

class 
ArtistModel 
: 
PropertyChangedBase 1
{ 
private 
string 
name 
; 
private 
int 

trackCount 
; 
public

 
string

 
Name

 
{ 	
get 
=> 
name 
; 
set 
{ 
name 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
OnPropertyChanged !
(! "
(" #
)# $
=>% '
	TrackElem( 1
)1 2
;2 3
} 
} 	
public 
int 

TrackCount 
{ 	
get 
=> 

trackCount 
; 
set 
{ 

trackCount 
= 
value "
;" #
OnPropertyChanged !
(! "
)" #
;# $
OnPropertyChanged !
(! "
(" #
)# $
=>% '
	TrackElem( 1
)1 2
;2 3
} 
} 	
public 
string 
	TrackElem 
{ 	
get   
{!! 
return"" 
string"" 
."" 
Concat"" $
(""$ %
Name""% )
,"") *
$str""+ /
,""/ 0

TrackCount""1 ;
,""; <
$str""= @
)""@ A
;""A B
}## 
}$$ 	
}&& 
}'' º
;D:\Projekty\CS\Newtone\Newtone.Core\Models\DownloadModel.cs
	namespace 	
Newtone
 
. 
Core 
. 
Models 
{ 
public 

class 
DownloadModel 
: 
PropertyChangedBase 2
{ 
private 
double 
progress 
;  
private		 
string		 
id		 
;		 
private

 
string

 
title

 
;

 
private 
string 
url 
; 
private 
string 
playlistName #
;# $
private 
string 

playlistId !
;! "
public 
string 
Id 
{ 	
get 
=> 
id 
; 
set 
{ 
id 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
public 
string 
Title 
{ 	
get 
=> 
title 
; 
set 
{ 
title 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
}   
}!! 	
public"" 
string"" 
Url"" 
{## 	
get$$ 
=>$$ 
url$$ 
;$$ 
set%% 
{&& 
url'' 
='' 
value'' 
;'' 
OnPropertyChanged(( !
(((! "
)((" #
;((# $
})) 
}** 	
public++ 
double++ 
Progress++ 
{,, 	
get-- 
{.. 
return// 
progress// 
;//  
}00 
set11 
{22 
progress33 
=33 
value33  
;33  !
OnPropertyChanged44 !
(44! "
)44" #
;44# $
OnPropertyChanged55 !
(55! "
(55" #
)55# $
=>55% '
ProgressString55( 6
)556 7
;557 8
}66 
}77 	
public99 
string99 
PlaylistName99 "
{:: 	
get;; 
=>;; 
playlistName;; 
;;;  
set<< 
{== 
playlistName>> 
=>> 
value>> $
;>>$ %
OnPropertyChanged?? !
(??! "
)??" #
;??# $
}@@ 
}AA 	
publicCC 
stringCC 

PlaylistIDCC  
{DD 	
getEE 
=>EE 

playlistIdEE 
;EE 
setFF 
{GG 

playlistIdHH 
=HH 
valueHH "
;HH" #
OnPropertyChangedII !
(II! "
)II" #
;II# $
}JJ 
}KK 	
publicMM 
stringMM 
ProgressStringMM $
{NN 	
getOO 
{PP 
returnQQ 
stringQQ 
.QQ 
FormatQQ $
(QQ$ %
$strQQ% /
,QQ/ 0
ProgressQQ1 9
*QQ: ;
$numQQ< A
)QQA B
+QQC D
$strQQE H
;QQH I
}RR 
}SS 	
publicUU 

DictionaryUU 
<UU 
stringUU  
,UU  !
stringUU" (
>UU( )$
TracksToAddAfterDownloadUU* B
{UUC D
getUUE H
;UUH I
}UUJ K
=UUL M
newUUN Q

DictionaryUUR \
<UU\ ]
stringUU] c
,UUc d
stringUUe k
>UUk l
(UUl m
)UUm n
;UUn o
}WW 
}XX õ
:D:\Projekty\CS\Newtone\Newtone.Core\Models\HistoryModel.cs
	namespace 	
Newtone
 
. 
Core 
. 
Models 
{ 
public 

class 
HistoryModel 
: 
PropertyChangedBase 1
{ 
private 
string 
text 
; 
public		 
string		 
Text		 
{

 	
get 
=> 
text 
; 
set 
{ 
text 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
} 
} ç
AD:\Projekty\CS\Newtone\Newtone.Core\Models\IPropertyChangeBase.cs
	namespace 	
Newtone
 
. 
Core 
. 
Models 
{ 
public 

	interface 
IPropertyChangeBase (
:( )"
INotifyPropertyChanged* @
{		 
void

 
OnPropertyChanged

 
<

 
T

  
>

  !
(

! "

Expression

" ,
<

, -
Func

- 1
<

1 2
T

2 3
>

3 4
>

4 5
property

6 >
)

> ?
;

? @
void 
OnPropertyChanged 
( 
[  
CallerMemberName  0
]0 1
string2 8
propertyName9 E
=F G
nullH L
)L M
;M N
} 
} ö
;D:\Projekty\CS\Newtone\Newtone.Core\Models\PlaylistModel.cs
	namespace 	
Newtone
 
. 
Core 
. 
Models 
{ 
public 

class 
PlaylistModel 
: 
PropertyChangedBase 2
{ 
private 
string 
name 
; 
private 
int 

trackCount 
; 
private 
string 
webUrl 
; 
public 
string 
Name 
{ 	
get 
=> 
name 
; 
set 
{ 
name 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
OnPropertyChanged !
(! "
(" #
)# $
=>% '
	TrackElem( 1
)1 2
;2 3
} 
} 	
public 
int 

TrackCount 
{ 	
get 
=> 

trackCount 
; 
set 
{ 

trackCount 
= 
value "
;" #
OnPropertyChanged !
(! "
)" #
;# $
OnPropertyChanged !
(! "
(" #
)# $
=>% '
	TrackElem( 1
)1 2
;2 3
} 
} 	
public 
string 
	TrackElem 
{   	
get!! 
{"" 
return## 
string## 
.## 
Concat## $
(##$ %
Name##% )
,##) *
$str##+ /
,##/ 0

TrackCount##1 ;
,##; <
$str##= @
)##@ A
;##A B
}$$ 
}%% 	
public&& 
string&& 
WebUrl&& 
{'' 	
get(( 
=>(( 
webUrl(( 
;(( 
set)) 
{** 
webUrl++ 
=++ 
value++ 
;++ 
OnPropertyChanged,, !
(,,! "
),," #
;,,# $
}-- 
}.. 	
}00 
}11 ç
AD:\Projekty\CS\Newtone\Newtone.Core\Models\PropertyChangedBase.cs
	namespace 	
Newtone
 
. 
Core 
. 
Models 
{ 
public 

class 
PropertyChangedBase $
:% &
IPropertyChangeBase' :
{		 
public 
event '
PropertyChangedEventHandler 0
PropertyChanged1 @
;@ A
public 
void 
OnPropertyChanged %
<% &
T& '
>' (
(( )

Expression) 3
<3 4
Func4 8
<8 9
T9 :
>: ;
>; <
property= E
)E F
{ 	
PropertyChanged 
? 
. 
Invoke #
(# $
this$ (
,( )
new* -$
PropertyChangedEventArgs. F
(F G
(G H
propertyH P
.P Q
BodyQ U
asV X
MemberExpressionY i
)i j
.j k
Memberk q
.q r
Namer v
)v w
)w x
;x y
} 	
public 
void 
OnPropertyChanged %
(% &
[& '
CallerMemberName' 7
]7 8
string9 ?
propertyName@ L
=M N
nullO S
)S T
{ 	
PropertyChanged 
? 
. 
Invoke #
(# $
this$ (
,( )
new* -$
PropertyChangedEventArgs. F
(F G
propertyNameG S
)S T
)T U
;U V
} 	
} 
} 2
?D:\Projekty\CS\Newtone\Newtone.Core\Models\SearchResultModel.cs
	namespace 	
Newtone
 
. 
Core 
. 
Models 
{ 
public 

class 
SearchResultModel "
:" #
PropertyChangedBase# 6
{		 
private 
string 
title 
; 
private 
string 
author 
; 
private 
string 
id 
; 
private 
string 
mixId 
; 
private 
byte 
[ 
] 
image 
; 
private 
TimeSpan 
duration !
;! "
private 
string 
thumbUrl 
;  
private 
string 
	videoData  
;  !
public 
string 
Title 
{ 	
get 
=> 
title 
; 
set 
{ 
title 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
public 
string 
Author 
{ 	
get   
=>   
author   
;   
set!! 
{"" 
author## 
=## 
value## 
;## 
OnPropertyChanged$$ !
($$! "
)$$" #
;$$# $
}%% 
}&& 	
public'' 
string'' 
Id'' 
{(( 	
get)) 
=>)) 
id)) 
;)) 
set** 
{++ 
id,, 
=,, 
value,, 
;,, 
OnPropertyChanged-- !
(--! "
)--" #
;--# $
}.. 
}// 	
public00 
string00 
MixId00 
{11 	
get22 
=>22 
mixId22 
;22 
set33 
{44 
mixId55 
=55 
value55 
;55 
OnPropertyChanged66 !
(66! "
)66" #
;66# $
}77 
}88 	
public99 
byte99 
[99 
]99 
Image99 
{:: 	
get;; 
=>;; 
image;; 
;;; 
set<< 
{== 
image>> 
=>> 
value>> 
;>> 
OnPropertyChanged?? !
(??! "
)??" #
;??# $
}@@ 
}AA 	
publicBB 
TimeSpanBB 
DurationBB  
{CC 	
getDD 
=>DD 
durationDD 
;DD 
setEE 
{FF 
durationGG 
=GG 
valueGG  
;GG  !
OnPropertyChangedHH !
(HH! "
)HH" #
;HH# $
OnPropertyChangedII !
(II! "
(II" #
)II# $
=>II% '
DurationStringII( 6
)II6 7
;II7 8
}JJ 
}KK 	
publicLL 
stringLL 
ThumbUrlLL 
{MM 	
getNN 
=>NN 
thumbUrlNN 
;NN 
setOO 
{PP 
thumbUrlQQ 
=QQ 
valueQQ  
;QQ  !
OnPropertyChangedRR !
(RR! "
)RR" #
;RR# $
}SS 
}TT 	
publicUU 
stringUU 
	VideoDataUU 
{VV 	
getWW 
=>WW 
	videoDataWW 
;WW 
setXX 
{YY 
	videoDataZZ 
=ZZ 
valueZZ !
;ZZ! "
OnPropertyChanged[[ !
([[! "
)[[" #
;[[# $
}\\ 
}]] 	
public^^ 
string^^ 
DurationString^^ $
{__ 	
get`` 
{aa 
returnbb 
Durationbb 
.bb  
ToStringbb  (
(bb( )
$strbb) 2
)bb2 3
;bb3 4
}cc 
}dd 	
publicee 
boolee 
	IsOfflineee 
{ff 	
getgg 
{hh 
returnii 
idii 
.ii 
Lengthii  
>ii! "
$numii# %
;ii% &
}jj 
}kk 	
publicoo 
staticoo 
implicitoo 
operatoroo '
SearchResultModeloo( 9
(oo9 :
Videooo: ?
videooo@ E
)ooE F
{pp 	
varqq 
retqq 
=qq 
newqq 
SearchResultModelqq +
(qq+ ,
)qq, -
{rr 
Authorss 
=ss 
videoss 
.ss 
Authorss %
,ss% &
Durationtt 
=tt 
videott  
.tt  !
Durationtt! )
,tt) *
Iduu 
=uu 
videouu 
.uu 
Iduu 
,uu 
MixIdvv 
=vv 
videovv 
.vv !
GetVideoMixPlaylistIdvv 3
(vv3 4
)vv4 5
,vv5 6
ThumbUrlww 
=ww 
videoww  
.ww  !

Thumbnailsww! +
.ww+ ,
MediumResUrlww, 8
,ww8 9
Titlexx 
=xx 
videoxx 
.xx 
Titlexx #
,xx# $
	VideoDatayy 
=yy 
stringyy "
.yy" #
Concatyy# )
(yy) *
videoyy* /
.yy/ 0
Titleyy0 5
,yy5 6

GlobalDatayy6 @
.yy@ A
	SEPARATORyyA J
,yyJ K
videoyyK P
.yyP Q
UrlyyQ T
)yyT U
}zz 
;zz 
using|| 
	WebClient|| 
client|| "
=||# $
new||% (
	WebClient||) 2
(||2 3
)||3 4
;||4 5
ret}} 
.}} 
Image}} 
=}} 
client}} 
.}} 
DownloadData}} +
(}}+ ,
video}}, 1
.}}1 2

Thumbnails}}2 <
.}}< =
MediumResUrl}}= I
)}}I J
;}}J K
return~~ 
ret~~ 
;~~ 
} 	
}
 
} µ	
;D:\Projekty\CS\Newtone\Newtone.Core\Models\SettingsModel.cs
	namespace 	
Newtone
 
. 
Core 
. 
Models 
{ 
public 

class 
SettingsModel 
: 
PropertyChangedBase 2
{ 
private 
string 
name 
; 
private 
string 
description "
;" #
public

 
string

 
Name

 
{ 	
get 
=> 
name 
; 
set 
{ 
name 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
public 
string 
Description !
{ 	
get 
=> 
description 
; 
set 
{ 
description 
= 
value #
;# $
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
} 
} 
8D:\Projekty\CS\Newtone\Newtone.Core\Models\TrackModel.cs
	namespace 	
Newtone
 
. 
Core 
. 
Models 
{ 
public 

class 

TrackModel 
: 
PropertyChangedBase /
{ 
private 
string 
filePath 
;  
private 
string 
title 
; 
private 
string 
duration 
;  
private		 
string		 
artist		 
;		 
public 
string 
FilePath 
{ 	
get 
=> 
filePath 
; 
set 
{ 
filePath 
= 
value  
;  !
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
public 
string 
Title 
{ 	
get 
=> 
title 
; 
set 
{ 
title 
= 
value 
; 
OnPropertyChanged !
(! "
)" #
;# $
} 
} 	
public 
string 
Duration 
{ 	
get   
=>   
duration   
;   
set!! 
{"" 
duration## 
=## 
value##  
;##  !
OnPropertyChanged$$ !
($$! "
)$$" #
;$$# $
}%% 
}&& 	
public(( 
string(( 
Artist(( 
{)) 	
get** 
=>** 
artist** 
;** 
set++ 
{,, 
artist-- 
=-- 
value-- 
;-- 
OnPropertyChanged.. !
(..! "
).." #
;..# $
}// 
}00 	
}22 
}33 ¶¥
DD:\Projekty\CS\Newtone\Newtone.Core\Processing\DownloadProcessing.cs
	namespace 	
Newtone
 
. 
Core 
. 

Processing !
{ 
public 

static 
class 
DownloadProcessing *
{ 
private 
static 
Task 
downloadTask (
;( )
public 
static 

Dictionary  
<  !
string! '
,' (
DownloadModel) 6
>6 7
	Downloads8 A
{B C
getD G
;G H
}I J
=K L
newM P

DictionaryQ [
<[ \
string\ b
,b c
DownloadModeld q
>q r
(r s
)s t
;t u
public 
static 
int 

BadgeCount $
{ 	
get 
{ 
return 
	Downloads  
.  !
Count! &
;& '
}   
}!! 	
public$$ 
static$$ 
IEnumerable$$ !
<$$! "
DownloadModel$$" /
>$$/ 0
	GetModels$$1 :
($$: ;
)$$; <
{%% 	
return&& 
	Downloads&& 
.&& 
Values&& #
;&&# $
}'' 	
public)) 
static)) 

Dictionary))  
<))  !
string))! '
,))' (
DownloadModel))) 6
>))6 7
GetDownloads))8 D
())D E
)))E F
{** 	
return++ 
	Downloads++ 
;++ 
},, 	
public.. 
static.. 
void.. 
AddRange.. #
(..# $
IEnumerable..$ /
<../ 0
Video..0 5
>..5 6
playlist..7 ?
,..? @
string..A G
playlistName..H T
,..T U
string..V \

playlistId..] g
,..g h
bool..i m

withRemove..n x
=..y z
false	..{ 
)
.. 
{// 	
Debug00 
.00 
	WriteLine00 
(00 
$str00 (
+00) *
playlistName00+ 7
+008 9
$str00: =
+00> ?

playlistId00@ J
)00J K
;00K L
string22 
currentItem22 
=22  
null22! %
;22% &
if44 
(44 

playlistId44 
!=44 
$str44  
)44  !
{55 
if66 
(66 
!66 

GlobalData66 
.66  
Current66  '
.66' (
WebToLocalPlaylists66( ;
.66; <
ContainsKey66< G
(66G H

playlistId66H R
)66R S
)66S T
{77 

GlobalData88 
.88 
Current88 &
.88& '
WebToLocalPlaylists88' :
.88: ;
Add88; >
(88> ?

playlistId88? I
,88I J
playlistName88K W
)88W X
;88X Y
}99 
else:: 
{;; 

GlobalData<< 
.<< 
Current<< &
.<<& '
WebToLocalPlaylists<<' :
[<<: ;

playlistId<<; E
]<<E F
=<<G H
playlistName<<I U
;<<U V
}== 
}>> 

GlobalData@@ 
.@@ 
Current@@ 
.@@ 

SaveConfig@@ )
(@@) *
)@@* +
;@@+ ,
foreachAA 
(AA 
varAA 
videoAA 
inAA !
playlistAA" *
)AA* +
{BB 
ifCC 
(CC 
	DownloadsCC 
.CC 
ContainsKeyCC (
(CC( )
videoCC) .
.CC. /
IdCC/ 1
)CC1 2
)CC2 3
{DD 
currentItemEE 
=EE  !
videoEE" '
.EE' (
IdEE( *
;EE* +
}FF 
elseGG 
{HH 
ifII 
(II 

GlobalDataII !
.II! "
CurrentII" )
.II) *
DownloadedIdsII* 7
.II7 8
ContainsII8 @
(II@ A
videoIIA F
.IIF G
IdIIG I
)III J
)IIJ K
{JJ 
stringKK 
filenameKK '
=KK( )
$strKK* ,
;KK, -

GlobalDataMM "
.MM" #
CurrentMM# *
.MM* +
	AudioTagsMM+ 4
.MM4 5
KeysMM5 9
.MM9 :
ForEachMM: A
(MMA B
keyMMB E
=>MMF H
{NN 
varOO 
itemOO  $
=OO% &

GlobalDataOO' 1
.OO1 2
CurrentOO2 9
.OO9 :
	AudioTagsOO: C
[OOC D
keyOOD G
]OOG H
;OOH I
ifPP 
(PP  
itemPP  $
.PP$ %
IdPP% '
==PP( *
videoPP+ 0
.PP0 1
IdPP1 3
)PP3 4
filenameQQ  (
=QQ) *
keyQQ+ .
;QQ. /
}RR 
)RR 
;RR 
ifTT 
(TT 
currentItemTT &
==TT' )
nullTT* .
)TT. /
{UU 
ifVV 
(VV  
!VV  !
stringVV! '
.VV' (
IsNullOrWhiteSpaceVV( :
(VV: ;
playlistNameVV; G
)VVG H
)VVH I
{WW 
ifXX  "
(XX# $
!XX$ %

GlobalDataXX% /
.XX/ 0
CurrentXX0 7
.XX7 8
	PlaylistsXX8 A
.XXA B
ContainsKeyXXB M
(XXM N
playlistNameXXN Z
)XXZ [
)XX[ \

GlobalDataYY$ .
.YY. /
CurrentYY/ 6
.YY6 7
	PlaylistsYY7 @
.YY@ A
AddYYA D
(YYD E
playlistNameYYE Q
,YYQ R
newYYS V
ListYYW [
<YY[ \
stringYY\ b
>YYb c
(YYc d
)YYd e
)YYe f
;YYf g
if[[  "
([[# $
![[$ %

GlobalData[[% /
.[[/ 0
Current[[0 7
.[[7 8
	Playlists[[8 A
[[[A B
playlistName[[B N
][[N O
.[[O P
Contains[[P X
([[X Y
filename[[Y a
)[[a b
&&[[c e
![[f g
string[[g m
.[[m n
IsNullOrWhiteSpace	[[n 
(
[[ 
filename
[[ 
)
[[ 
)
[[ 
{\\  !

GlobalData]]$ .
.]]. /
Current]]/ 6
.]]6 7
	Playlists]]7 @
[]]@ A
playlistName]]A M
]]]M N
.]]N O
Add]]O R
(]]R S
filename]]S [
)]][ \
;]]\ ]

GlobalData^^$ .
.^^. /
Current^^/ 6
.^^6 7

SaveConfig^^7 A
(^^A B
)^^B C
;^^C D
}__  !
}`` 
}aa 
elsebb 
{cc 
ifdd 
(dd 
!dd  
	Downloadsdd  )
[dd) *
currentItemdd* 5
]dd5 6
.dd6 7$
TracksToAddAfterDownloaddd7 O
.ddO P
ContainsKeyddP [
(dd[ \
playlistNamedd\ h
)ddh i
)ddi j
{ee 
	Downloadsff  )
[ff) *
currentItemff* 5
]ff5 6
.ff6 7$
TracksToAddAfterDownloadff7 O
.ffO P
AddffP S
(ffS T
playlistNameffT `
,ff` a
filenameffb j
)ffj k
;ffk l
}gg 
}hh 
}ii 
elsejj 
{kk 
	Downloadsll !
.ll! "
Addll" %
(ll% &
videoll& +
.ll+ ,
Idll, .
,ll. /
newll0 3
DownloadModelll4 A
(llA B
)llB C
{mm 
Idnn 
=nn  
videonn! &
.nn& '
Idnn' )
,nn) *
Urloo 
=oo  !
videooo" '
.oo' (
Urloo( +
,oo+ ,
Titlepp !
=pp" #
videopp$ )
.pp) *
Titlepp* /
,pp/ 0
PlaylistNameqq (
=qq) *
playlistNameqq+ 7
,qq7 8
Progressrr $
=rr% &
$numrr' *
,rr* +

PlaylistIDss &
=ss' (

playlistIdss) 3
}tt 
)tt 
;tt 
currentItemvv #
=vv$ %
videovv& +
.vv+ ,
Idvv, .
;vv. /
ifxx 
(xx 
downloadTaskxx (
==xx) +
nullxx, 0
)xx0 1
{yy 
downloadTaskzz (
=zz) *
newzz+ .
Taskzz/ 3
(zz3 4
asynczz4 9
(zz: ;
)zz; <
=>zz= ?
awaitzz@ E

TaskActionzzF P
(zzP Q
)zzQ R
)zzR S
;zzS T
downloadTask{{ (
.{{( )
Start{{) .
({{. /
){{/ 0
;{{0 1
}|| 
}}} 
}~~ 
} 
if
 
(
 

withRemove
 
&&
 

GlobalData
 '
.
' (
Current
( /
.
/ 0
	Playlists
0 9
.
9 :
ContainsKey
: E
(
E F
playlistName
F R
)
R S
)
S T
{
 
List
 
<
 
string
 
>
 
ids
  
=
! "
playlist
# +
.
+ ,
Select
, 2
(
2 3
item
3 7
=>
8 :
item
; ?
.
? @
Id
@ B
.
B C
ToString
C K
(
K L
)
L M
)
M N
.
N O
ToList
O U
(
U V
)
V W
;
W X
foreach
 
(
 
var
 
path
  
in
! #

GlobalData
$ .
.
. /
Current
/ 6
.
6 7
	Playlists
7 @
[
@ A
playlistName
A M
]
M N
.
N O
ToList
O U
(
U V
)
V W
)
W X
{
 
if
 
(
 

GlobalData
 !
.
! "
Current
" )
.
) *
	AudioTags
* 3
.
3 4
ContainsKey
4 ?
(
? @
path
@ D
)
D E
&&
F H
!
I J
ids
J M
.
M N
Contains
N V
(
V W

GlobalData
W a
.
a b
Current
b i
.
i j
	AudioTags
j s
[
s t
path
t x
]
x y
.
y z
Id
z |
)
| }
)
} ~
{
 

GlobalData
 "
.
" #
Current
# *
.
* +
	Playlists
+ 4
[
4 5
playlistName
5 A
]
A B
.
B C
Remove
C I
(
I J
path
J N
)
N O
;
O P
}
 
}
 

GlobalData
 
.
 
Current
 "
.
" #

SaveConfig
# -
(
- .
)
. /
;
/ 0
}
 
}
 	
public
 
static
 
void
 
Add
 
(
 
string
 %
id
& (
,
( )
string
* 0
title
1 6
,
6 7
string
8 >
url
? B
,
B C
string
D J
playlist
K S
,
S T
string
U [

playlistId
\ f
=
g h
$str
i k
)
k l
{
 	
Debug
 
.
 
	WriteLine
 
(
 
$str
 "
+
# $
id
% '
+
( )
$str
* -
+
. /
title
0 5
)
5 6
;
6 7
if
 
(
 
id
 
==
 
$str
 
)
 &
YoutubeExplodeExtensions
 (
.
( )
TryParseVideoId
) 8
(
8 9
url
9 <
,
< =
out
> A
id
B D
)
D E
;
E F
if
 
(
 
!
 
	Downloads
 
.
 
ContainsKey
 %
(
% &
id
& (
)
( )
)
) *
{
 
if
 
(
 

GlobalData
 
.
 
Current
 %
.
% &
DownloadedIds
& 3
.
3 4
Contains
4 <
(
< =
id
= ?
)
? @
)
@ A
{
 
string
 
filename
 #
=
$ %
$str
& (
;
( )

GlobalData
 
.
 
Current
 &
.
& '
	AudioTags
' 0
.
0 1
Keys
1 5
.
5 6
ForEach
6 =
(
= >
key
> A
=>
B D
{
 
var
 
item
  
=
! "

GlobalData
# -
.
- .
Current
. 5
.
5 6
	AudioTags
6 ?
[
? @
key
@ C
]
C D
;
D E
if
   
(
   
item
    
.
    !
Id
  ! #
==
  $ &
id
  ' )
)
  ) *
filename
¡¡ $
=
¡¡% &
key
¡¡' *
;
¡¡* +
}
¢¢ 
)
¢¢ 
;
¢¢ 
if
¤¤ 
(
¤¤ 
!
¤¤ 
string
¤¤ 
.
¤¤   
IsNullOrWhiteSpace
¤¤  2
(
¤¤2 3
playlist
¤¤3 ;
)
¤¤; <
)
¤¤< =
{
¥¥ 
if
¦¦ 
(
¦¦ 
!
¦¦ 

GlobalData
¦¦ '
.
¦¦' (
Current
¦¦( /
.
¦¦/ 0
	Playlists
¦¦0 9
.
¦¦9 :
ContainsKey
¦¦: E
(
¦¦E F
playlist
¦¦F N
)
¦¦N O
)
¦¦O P

GlobalData
§§ &
.
§§& '
Current
§§' .
.
§§. /
	Playlists
§§/ 8
.
§§8 9
Add
§§9 <
(
§§< =
playlist
§§= E
,
§§E F
new
§§G J
List
§§K O
<
§§O P
string
§§P V
>
§§V W
(
§§W X
)
§§X Y
)
§§Y Z
;
§§Z [
if
©© 
(
©© 
!
©© 

GlobalData
©© '
.
©©' (
Current
©©( /
.
©©/ 0
	Playlists
©©0 9
[
©©9 :
playlist
©©: B
]
©©B C
.
©©C D
Contains
©©D L
(
©©L M
filename
©©M U
)
©©U V
&&
©©W Y
!
©©Z [
string
©©[ a
.
©©a b 
IsNullOrWhiteSpace
©©b t
(
©©t u
filename
©©u }
)
©©} ~
)
©©~ 
{
ªª 

GlobalData
«« &
.
««& '
Current
««' .
.
««. /
	Playlists
««/ 8
[
««8 9
playlist
««9 A
]
««A B
.
««B C
Add
««C F
(
««F G
filename
««G O
)
««O P
;
««P Q

GlobalData
¬¬ &
.
¬¬& '
Current
¬¬' .
.
¬¬. /

SaveConfig
¬¬/ 9
(
¬¬9 :
)
¬¬: ;
;
¬¬; <
}
­­ 
}
®® 
}
¯¯ 
else
°° 
{
±± 
	Downloads
²² 
.
²² 
Add
²² !
(
²²! "
id
²²" $
,
²²$ %
new
²²& )
DownloadModel
²²* 7
(
²²7 8
)
²²8 9
{
³³ 
Id
´´ 
=
´´ 
id
´´ 
,
´´  
Url
µµ 
=
µµ 
url
µµ !
,
µµ! "
Title
¶¶ 
=
¶¶ 
title
¶¶  %
,
¶¶% &
PlaylistName
·· $
=
··% &
playlist
··' /
,
··/ 0
Progress
¸¸  
=
¸¸! "
$num
¸¸# &
,
¸¸& '

PlaylistID
¹¹ "
=
¹¹# $

playlistId
¹¹% /
}
ºº 
)
ºº 
;
ºº 
if
¼¼ 
(
¼¼ 
downloadTask
¼¼ $
==
¼¼% '
null
¼¼( ,
)
¼¼, -
{
½½ 
downloadTask
¾¾ $
=
¾¾% &
new
¾¾' *
Task
¾¾+ /
(
¾¾/ 0
async
¾¾0 5
(
¾¾6 7
)
¾¾7 8
=>
¾¾9 ;
await
¾¾< A

TaskAction
¾¾B L
(
¾¾L M
)
¾¾M N
)
¾¾N O
;
¾¾O P
downloadTask
¿¿ $
.
¿¿$ %
Start
¿¿% *
(
¿¿* +
)
¿¿+ ,
;
¿¿, -
}
ÀÀ 
}
ÁÁ 
}
ÃÃ 
}
ÄÄ 	
private
ÈÈ 
static
ÈÈ 
void
ÈÈ 
SetProgress
ÈÈ '
(
ÈÈ' (
string
ÈÈ( .
id
ÈÈ/ 1
,
ÈÈ1 2
double
ÈÈ3 9
progress
ÈÈ: B
)
ÈÈB C
{
ÉÉ 	
if
ÊÊ 
(
ÊÊ 
	Downloads
ÊÊ 
.
ÊÊ 
ContainsKey
ÊÊ $
(
ÊÊ$ %
id
ÊÊ% '
)
ÊÊ' (
)
ÊÊ( )
{
ËË 
	Downloads
ÌÌ 
[
ÌÌ 
id
ÌÌ 
]
ÌÌ 
.
ÌÌ 
Progress
ÌÌ &
=
ÌÌ' (
progress
ÌÌ) 1
;
ÌÌ1 2
}
ÍÍ 
}
ÎÎ 	
private
ÏÏ 
async
ÏÏ 
static
ÏÏ 
Task
ÏÏ !

TaskAction
ÏÏ" ,
(
ÏÏ, -
)
ÏÏ- .
{
ÐÐ 	
string
ÑÑ 
	currentId
ÑÑ 
=
ÑÑ 
$str
ÑÑ !
;
ÑÑ! "
try
ÒÒ 
{
ÓÓ 
if
ÔÔ 
(
ÔÔ 
	Downloads
ÔÔ 
.
ÔÔ 
Keys
ÔÔ "
.
ÔÔ" #
Count
ÔÔ# (
>
ÔÔ) *
$num
ÔÔ+ ,
)
ÔÔ, -
{
ÕÕ 
string
ÖÖ 
id
ÖÖ 
=
ÖÖ 
	Downloads
ÖÖ  )
.
ÖÖ) *
Keys
ÖÖ* .
.
ÖÖ. /
First
ÖÖ/ 4
(
ÖÖ4 5
)
ÖÖ5 6
;
ÖÖ6 7
	currentId
×× 
=
×× 
id
××  "
;
××" #
DownloadModel
ØØ !
model
ØØ" '
=
ØØ( )
	Downloads
ØØ* 3
[
ØØ3 4
id
ØØ4 6
]
ØØ6 7
;
ØØ7 8
string
ÙÙ 
filename
ÙÙ #
=
ÙÙ$ %
await
ÙÙ& +
Download
ÙÙ, 4
(
ÙÙ4 5
id
ÙÙ5 7
)
ÙÙ7 8
;
ÙÙ8 9
GlobalLoader
ÛÛ  
.
ÛÛ  !
ReplaceSavedTrack
ÛÛ! 2
(
ÛÛ2 3
id
ÛÛ3 5
,
ÛÛ5 6
filename
ÛÛ7 ?
)
ÛÛ? @
;
ÛÛ@ A
if
ÝÝ 
(
ÝÝ 
!
ÝÝ 
string
ÝÝ 
.
ÝÝ   
IsNullOrWhiteSpace
ÝÝ  2
(
ÝÝ2 3
model
ÝÝ3 8
.
ÝÝ8 9
PlaylistName
ÝÝ9 E
)
ÝÝE F
)
ÝÝF G
{
ÞÞ 
if
ßß 
(
ßß 
!
ßß 

GlobalData
ßß '
.
ßß' (
Current
ßß( /
.
ßß/ 0
	Playlists
ßß0 9
.
ßß9 :
ContainsKey
ßß: E
(
ßßE F
model
ßßF K
.
ßßK L
PlaylistName
ßßL X
)
ßßX Y
)
ßßY Z

GlobalData
àà &
.
àà& '
Current
àà' .
.
àà. /
	Playlists
àà/ 8
.
àà8 9
Add
àà9 <
(
àà< =
model
àà= B
.
ààB C
PlaylistName
ààC O
,
ààO P
new
ààQ T
List
ààU Y
<
ààY Z
string
ààZ `
>
àà` a
(
ààa b
)
ààb c
)
ààc d
;
ààd e
if
ââ 
(
ââ 
!
ââ 

GlobalData
ââ '
.
ââ' (
Current
ââ( /
.
ââ/ 0
	Playlists
ââ0 9
[
ââ9 :
model
ââ: ?
.
ââ? @
PlaylistName
ââ@ L
]
ââL M
.
ââM N
Contains
ââN V
(
ââV W
filename
ââW _
)
ââ_ `
)
ââ` a
{
ãã 

GlobalData
ää &
.
ää& '
Current
ää' .
.
ää. /
	Playlists
ää/ 8
[
ää8 9
model
ää9 >
.
ää> ?
PlaylistName
ää? K
]
ääK L
.
ääL M
Add
ääM P
(
ääP Q
filename
ääQ Y
)
ääY Z
;
ääZ [
foreach
ææ #
(
ææ$ %
var
ææ% (
key
ææ) ,
in
ææ- /
model
ææ0 5
.
ææ5 6&
TracksToAddAfterDownload
ææ6 N
.
ææN O
Keys
ææO S
)
ææS T
{
çç 

GlobalData
èè  *
.
èè* +
Current
èè+ 2
.
èè2 3
	Playlists
èè3 <
[
èè< =
key
èè= @
]
èè@ A
.
èèA B
Add
èèB E
(
èèE F
model
èèF K
.
èèK L&
TracksToAddAfterDownload
èèL d
[
èèd e
key
èèe h
]
èèh i
)
èèi j
;
èèj k
}
éé 
}
êê 
if
ìì 
(
ìì 
model
ìì !
.
ìì! "

PlaylistID
ìì" ,
!=
ìì- /
$str
ìì0 2
)
ìì2 3
{
íí 
if
îî 
(
îî  
!
îî  !

GlobalData
îî! +
.
îî+ ,
Current
îî, 3
.
îî3 4!
WebToLocalPlaylists
îî4 G
.
îîG H
ContainsKey
îîH S
(
îîS T
model
îîT Y
.
îîY Z

PlaylistID
îîZ d
)
îîd e
)
îîe f
{
ïï 

GlobalData
ðð  *
.
ðð* +
Current
ðð+ 2
.
ðð2 3!
WebToLocalPlaylists
ðð3 F
.
ððF G
Add
ððG J
(
ððJ K
model
ððK P
.
ððP Q

PlaylistID
ððQ [
,
ðð[ \
model
ðð] b
.
ððb c
PlaylistName
ððc o
)
ððo p
;
ððp q
}
ññ 
else
òò  
{
óó 

GlobalData
ôô  *
.
ôô* +
Current
ôô+ 2
.
ôô2 3!
WebToLocalPlaylists
ôô3 F
[
ôôF G
model
ôôG L
.
ôôL M

PlaylistID
ôôM W
]
ôôW X
=
ôôY Z
model
ôô[ `
.
ôô` a
PlaylistName
ôôa m
;
ôôm n
}
õõ 
}
öö 

GlobalData
øø "
.
øø" #
Current
øø# *
.
øø* +

SaveConfig
øø+ 5
(
øø5 6
)
øø6 7
;
øø7 8

GlobalData
ùù "
.
ùù" #
Current
ùù# *
.
ùù* +"
PlaylistsNeedRefresh
ùù+ ?
=
ùù@ A
true
ùùB F
;
ùùF G
}
úú 
	Downloads
ûû 
.
ûû 
Remove
ûû $
(
ûû$ %
id
ûû% '
)
ûû' (
;
ûû( )
}
üü 
}
ýý 
catch
þþ 
(
þþ 
	Exception
þþ 
)
þþ 
{
ÿÿ 

GlobalData
 
.
 
Current
 "
.
" #
	Messenger
# ,
.
, -
Show
- 1
(
1 2
MessageGenerator
2 B
.
B C
EMessageType
C O
.
O P
Error
P U
,
U V
Localization
W c
.
c d
YoutubeError
d p
)
p q
;
q r
	Downloads
 
.
 
Remove
  
(
  !
	currentId
! *
)
* +
;
+ ,
}
 
if
 
(
 
	Downloads
 
.
 
Count
 
>
  !
$num
" #
)
# $
await
 

TaskAction
  
(
  !
)
! "
;
" #
else
 
downloadTask
 
=
 
null
 #
;
# $
}
 	
private
 
static
 
async
 
Task
 !
<
! "
string
" (
>
( )
Download
* 2
(
2 3
string
3 9
id
: <
)
< =
{
 	
YoutubeClient
 
client
  
=
! "
new
# &
YoutubeClient
' 4
(
4 5
)
5 6
;
6 7
Video
 
video
 
=
 
await
 
client
  &
.
& '
Videos
' -
.
- .
GetAsync
. 6
(
6 7
id
7 9
)
9 :
;
: ;
if
 
(
 
	Downloads
 
[
 
id
 
]
 
.
 
Title
 #
==
$ &
$str
' )
)
) *
	Downloads
 
[
 
id
 
]
 
.
 
Title
 #
=
$ %
video
& +
.
+ ,
Title
, 1
;
1 2
StreamManifest
 
manifest
 #
=
$ %
await
& +
client
, 2
.
2 3
Videos
3 9
.
9 :
Streams
: A
.
A B
GetManifestAsync
B R
(
R S
id
S U
)
U V
;
V W
Progress
 
<
 
double
 
>
 
progress
 %
=
& '
new
( +
Progress
, 4
<
4 5
double
5 ;
>
; <
(
< =
value
= B
=>
C E
{
 
SetProgress
 
(
 
id
 
,
 
value
  %
)
% &
;
& '
}
 
)
 
;
 
string
 
fileName
 
=
 
video
 #
.
# $
Title
$ )
.
 
Replace
 
(
 
$char
 
,
 
$char
 !
)
! "
.
" #
Replace
 
(
 
$char
 
,
 
$char
 !
)
! "
.
" #
Replace
 
(
 
$char
 
,
 
$char
  
)
  !
.
! "
Replace
 
(
 
$char
 
,
 
$char
  
)
  !
.
! "
Replace
 
(
 
$char
 
,
 
$char
  
)
  !
.
! "
Replace
 
(
 
$char
 
,
 
$char
  
)
  !
.
! "
Replace
 
(
 
$char
 
,
 
$char
  
)
  !
.
! "
Replace
   
(
   
$char
   
,
   
$char
    
)
    !
;
  ! "
FileInfo
¡¡ 
fileInfo
¡¡ 
=
¡¡ 
new
¡¡  #
FileInfo
¡¡$ ,
(
¡¡, -
Path
¡¡- 1
.
¡¡1 2
Combine
¡¡2 9
(
¡¡9 :

GlobalData
¡¡: D
.
¡¡D E
Current
¡¡E L
.
¡¡L M
	MusicPath
¡¡M V
,
¡¡V W
fileName
¡¡X `
+
¡¡a b
(
¡¡c d

GlobalData
¡¡d n
.
¡¡n o
Current
¡¡o v
.
¡¡v w
MediaFormat¡¡w 
==¡¡ 
MediaFormat¡¡ 
.¡¡ 
m4a¡¡ 
?¡¡ 
$str¡¡ 
:¡¡  
$str¡¡¡ ¨
)¡¡¨ ©
)¡¡© ª
)¡¡ª «
;¡¡« ¬
if
££ 
(
££ 

GlobalData
££ 
.
££ 
Current
££ "
.
££" #
DownloadedIds
££# 0
.
££0 1
Contains
££1 9
(
££9 :
id
££: <
)
££< =
)
££= >
return
¤¤ 
fileInfo
¤¤ 
.
¤¤  
FullName
¤¤  (
;
¤¤( )
IStreamInfo
¦¦ 

streamInfo
¦¦ "
=
¦¦# $
null
¦¦% )
;
¦¦) *
manifest
¨¨ 
.
¨¨ 
GetAudio
¨¨ 
(
¨¨ 
)
¨¨ 
.
¨¨  
ForEach
¨¨  '
(
¨¨' (
item
¨¨( ,
=>
¨¨- /
{
©© 
if
ªª 
(
ªª 
item
ªª 
.
ªª 

AudioCodec
ªª #
.
ªª# $
Contains
ªª$ ,
(
ªª, -

GlobalData
ªª- 7
.
ªª7 8
Current
ªª8 ?
.
ªª? @
MediaFormat
ªª@ K
==
ªªL N
MediaFormat
ªªO Z
.
ªªZ [
m4a
ªª[ ^
?
ªª_ `
$str
ªªa g
:
ªªh i
$str
ªªj p
)
ªªp q
)
ªªq r
{
«« 
if
¬¬ 
(
¬¬ 

streamInfo
¬¬ "
==
¬¬# %
null
¬¬& *
)
¬¬* +

streamInfo
­­ "
=
­­# $
item
­­% )
;
­­) *
if
¯¯ 
(
¯¯ 

streamInfo
¯¯ "
.
¯¯" #
Bitrate
¯¯# *
.
¯¯* +
BitsPerSecond
¯¯+ 8
>
¯¯9 :
item
¯¯; ?
.
¯¯? @
Bitrate
¯¯@ G
.
¯¯G H
BitsPerSecond
¯¯H U
)
¯¯U V

streamInfo
°° "
=
°°# $
item
°°% )
;
°°) *
}
±± 
}
²² 
)
²² 
;
²² 
await
³³ 
client
³³ 
.
³³ 
Videos
³³ 
.
³³  
Streams
³³  '
.
³³' (
DownloadAsync
³³( 5
(
³³5 6

streamInfo
³³6 @
,
³³@ A
Path
³³B F
.
³³F G
Combine
³³G N
(
³³N O

GlobalData
³³O Y
.
³³Y Z
Current
³³Z a
.
³³a b
	MusicPath
³³b k
,
³³k l
fileName
³³m u
+
³³v w
(
³³x y

GlobalData³³y 
.³³ 
Current³³ 
.³³ 
MediaFormat³³ 
==³³ 
MediaFormat³³ ¦
.³³¦ §
m4a³³§ ª
?³³« ¬
$str³³­ ³
:³³´ µ
$str³³¶ ½
)³³½ ¾
)³³¾ ¿
,³³¿ À
progress³³Á É
)³³É Ê
;³³Ê Ë
string
´´ 
[
´´ 
]
´´ 
splitted
´´ 
=
´´ 
video
´´  %
.
´´% &
Title
´´& +
.
´´+ ,
Split
´´, 1
(
´´1 2
new
´´2 5
string
´´6 <
[
´´< =
]
´´= >
{
´´? @
$str
´´A F
,
´´F G
$str
´´H M
,
´´M N
$str
´´O S
,
´´S T
$str
´´U Y
}
´´Z [
,
´´[ \ 
StringSplitOptions
´´] o
.
´´o p!
RemoveEmptyEntries´´p 
)´´ 
;´´ 
string
µµ 
artist
µµ 
=
µµ 
splitted
µµ $
.
µµ$ %
Length
µµ% +
==
µµ, .
$num
µµ/ 0
?
µµ1 2
video
µµ3 8
.
µµ8 9
Author
µµ9 ?
:
µµ@ A
splitted
µµB J
[
µµJ K
$num
µµK L
]
µµL M
;
µµM N
string
¶¶ 
title
¶¶ 
=
¶¶ 
splitted
¶¶ #
[
¶¶# $
splitted
¶¶$ ,
.
¶¶, -
Length
¶¶- 3
==
¶¶4 6
$num
¶¶7 8
?
¶¶9 :
$num
¶¶; <
:
¶¶= >
$num
¶¶? @
]
¶¶@ A
;
¶¶A B
byte
¸¸ 
[
¸¸ 
]
¸¸ 
picture
¸¸ 
=
¸¸ 
null
¸¸ !
;
¸¸! "
try
¹¹ 
{
ºº 
using
»» 
	WebClient
»» 
wc
»»  "
=
»»# $
new
»»% (
	WebClient
»») 2
(
»»2 3
)
»»3 4
;
»»4 5
picture
¼¼ 
=
¼¼ 
wc
¼¼ 
.
¼¼ 
DownloadData
¼¼ )
(
¼¼) *
video
¼¼* /
.
¼¼/ 0

Thumbnails
¼¼0 :
.
¼¼: ;
MediumResUrl
¼¼; G
)
¼¼G H
;
¼¼H I
}
½½ 
catch
¾¾ 
{
¿¿ 
}
ÁÁ 
if
ÃÃ 
(
ÃÃ 

GlobalData
ÃÃ 
.
ÃÃ 
Current
ÃÃ "
.
ÃÃ" #
	AudioTags
ÃÃ# ,
.
ÃÃ, -
ContainsKey
ÃÃ- 8
(
ÃÃ8 9
fileInfo
ÃÃ9 A
.
ÃÃA B
FullName
ÃÃB J
)
ÃÃJ K
)
ÃÃK L
{
ÄÄ 
string
ÅÅ 
f
ÅÅ 
=
ÅÅ 
fileInfo
ÅÅ #
.
ÅÅ# $
FullName
ÅÅ$ ,
;
ÅÅ, -

GlobalData
ÆÆ 
.
ÆÆ 
Current
ÆÆ "
.
ÆÆ" #
	AudioTags
ÆÆ# ,
[
ÆÆ, -
f
ÆÆ- .
]
ÆÆ. /
.
ÆÆ/ 0
Author
ÆÆ0 6
=
ÆÆ7 8
artist
ÆÆ9 ?
;
ÆÆ? @

GlobalData
ÇÇ 
.
ÇÇ 
Current
ÇÇ "
.
ÇÇ" #
	AudioTags
ÇÇ# ,
[
ÇÇ, -
f
ÇÇ- .
]
ÇÇ. /
.
ÇÇ/ 0
Title
ÇÇ0 5
=
ÇÇ6 7
title
ÇÇ8 =
;
ÇÇ= >

GlobalData
ÈÈ 
.
ÈÈ 
Current
ÈÈ "
.
ÈÈ" #
	AudioTags
ÈÈ# ,
[
ÈÈ, -
f
ÈÈ- .
]
ÈÈ. /
.
ÈÈ/ 0
Image
ÈÈ0 5
=
ÈÈ6 7
picture
ÈÈ8 ?
;
ÈÈ? @

GlobalData
ÉÉ 
.
ÉÉ 
Current
ÉÉ "
.
ÉÉ" #
	AudioTags
ÉÉ# ,
[
ÉÉ, -
f
ÉÉ- .
]
ÉÉ. /
.
ÉÉ/ 0
Id
ÉÉ0 2
=
ÉÉ3 4
video
ÉÉ5 :
.
ÉÉ: ;
Id
ÉÉ; =
;
ÉÉ= >

GlobalData
ËË 
.
ËË 
Current
ËË "
.
ËË" #
	AudioTags
ËË# ,
[
ËË, -
f
ËË- .
]
ËË. /
.
ËË/ 0
TempDuration
ËË0 <
=
ËË= >

GlobalData
ËË? I
.
ËËI J
Current
ËËJ Q
.
ËËQ R
MediaFormat
ËËR ]
==
ËË^ `
MediaFormat
ËËa l
.
ËËl m
m4a
ËËm p
?
ËËq r
TimeSpan
ËËs {
.
ËË{ |
FromMillisecondsËË| 
(ËË 
$numËË 
)ËË 
:ËË 
videoËË 
.ËË 
DurationËË  
;ËË  ¡
}
ÌÌ 
else
ÍÍ 
{
ÎÎ 

GlobalData
ÏÏ 
.
ÏÏ 
Current
ÏÏ "
.
ÏÏ" #
	AudioTags
ÏÏ# ,
.
ÏÏ, -
Add
ÏÏ- 0
(
ÏÏ0 1
fileInfo
ÏÏ1 9
.
ÏÏ9 :
FullName
ÏÏ: B
,
ÏÏB C
new
ÏÏD G
MediaSourceTag
ÏÏH V
(
ÏÏV W
)
ÏÏW X
{
ÏÏY Z
Author
ÏÏ[ a
=
ÏÏb c
artist
ÏÏd j
,
ÏÏj k
Title
ÏÏl q
=
ÏÏr s
title
ÏÏt y
,
ÏÏy z
ImageÏÏ{ 
=ÏÏ 
pictureÏÏ 
,ÏÏ 
IdÏÏ 
=ÏÏ 
videoÏÏ 
.ÏÏ 
IdÏÏ 
,ÏÏ 
TempDurationÏÏ §
=ÏÏ¨ ©

GlobalDataÏÏª ´
.ÏÏ´ µ
CurrentÏÏµ ¼
.ÏÏ¼ ½
MediaFormatÏÏ½ È
==ÏÏÉ Ë
MediaFormatÏÏÌ ×
.ÏÏ× Ø
oggÏÏØ Û
?ÏÏÜ Ý
videoÏÏÞ ã
.ÏÏã ä
DurationÏÏä ì
:ÏÏí î
TimeSpanÏÏï ÷
.ÏÏ÷ ø 
FromMillisecondsÏÏø 
(ÏÏ 
$numÏÏ 
)ÏÏ 
}ÏÏ 
)ÏÏ 
;ÏÏ 
}
ÐÐ 
MediaSource
ÒÒ 
	container
ÒÒ !
=
ÒÒ" #
MediaProcessing
ÒÒ$ 3
.
ÒÒ3 4
	GetSource
ÒÒ4 =
(
ÒÒ= >
fileInfo
ÒÒ> F
.
ÒÒF G
FullName
ÒÒG O
)
ÒÒO P
;
ÒÒP Q
GlobalLoader
ÓÓ 
.
ÓÓ 
AddTrack
ÓÓ !
(
ÓÓ! "
	container
ÓÓ" +
)
ÓÓ+ ,
;
ÓÓ, -
CacheLoader
ÔÔ 
.
ÔÔ 
	SaveCache
ÔÔ !
(
ÔÔ! "
)
ÔÔ" #
;
ÔÔ# $

GlobalData
ÕÕ 
.
ÕÕ 
Current
ÕÕ 
.
ÕÕ 

SaveConfig
ÕÕ )
(
ÕÕ) *
)
ÕÕ* +
;
ÕÕ+ ,

GlobalData
ÖÖ 
.
ÖÖ 
Current
ÖÖ 
.
ÖÖ 
SaveTags
ÖÖ '
(
ÖÖ' (
)
ÖÖ( )
;
ÖÖ) *

GlobalData
×× 
.
×× 
Current
×× 
.
×× 
	Messenger
×× (
.
××( )
Show
××) -
(
××- .
MessageGenerator
××. >
.
××> ?
EMessageType
××? K
.
××K L
Snackbar
××L T
,
××T U
Localization
××V b
.
××b c
FileDownloaded
××c q
+
××r s
$str
××t w
+
××x y
artist××z 
+×× 
$str×× 
+×× 
title×× 
)×× 
;×× 
return
ÙÙ 
fileInfo
ÙÙ 
.
ÙÙ 
FullName
ÙÙ $
;
ÙÙ$ %
}
ÚÚ 	
}
ÜÜ 
}ÝÝ ß 
@D:\Projekty\CS\Newtone\Newtone.Core\Processing\FileProcessing.cs
	namespace 	
Newtone
 
. 
Core 
. 

Processing !
{ 
public		 

static		 
class		 
FileProcessing		 &
{

 
public 
static 
async 
Task  
<  !
MediaSource! ,
[, -
]- .
>. /
Scan0 4
(4 5
string5 ;
	directory< E
)E F
{ 	
return 
await 
Task 
. 
Run !
(! "
(" #
)# $
=>% '
{( )
List 
< 
MediaSource  
>  !

containers" ,
=- .
new/ 2
List3 7
<7 8
MediaSource8 C
>C D
(D E
)E F
;F G
string 
[ 
] 
mp3Files !
=" #
null$ (
;( )
string 
[ 
] 
m4aFiles !
=" #
null$ (
;( )
string 
[ 
] 
oggFiles !
=" #
null$ (
;( )
string 
[ 
] 
	opusFiles "
=# $
null% )
;) *
try 
{ 
mp3Files 
= 
	Directory (
.( )
GetFiles) 1
(1 2
	directory2 ;
,; <
$str= D
)D E
;E F
m4aFiles 
= 
	Directory (
.( )
GetFiles) 1
(1 2
	directory2 ;
,; <
$str= D
)D E
;E F
oggFiles 
= 
	Directory (
.( )
GetFiles) 1
(1 2
	directory2 ;
,; <
$str= D
)D E
;E F
	opusFiles 
= 
	Directory  )
.) *
GetFiles* 2
(2 3
	directory3 <
,< =
$str> F
)F G
;G H
} 
catch 
{ 
} 
List!! 
<!! 
string!! 
>!! 
files!! "
=!!# $
new!!% (
List!!) -
<!!- .
string!!. 4
>!!4 5
(!!5 6
)!!6 7
;!!7 8
files"" 
."" 
AddRange"" 
("" 
mp3Files"" '
)""' (
;""( )
files## 
.## 
AddRange## 
(## 
m4aFiles## '
)##' (
;##( )
files$$ 
.$$ 
AddRange$$ 
($$ 
oggFiles$$ '
)$$' (
;$$( )
files%% 
.%% 
AddRange%% 
(%% 
	opusFiles%% (
)%%( )
;%%) *
files'' 
.'' 
ForEach'' 
('' 
filepath'' &
=>''' )
{(( 
MediaSource)) 
source))  &
=))' (
MediaProcessing))) 8
.))8 9
	GetSource))9 B
())B C
filepath))C K
)))K L
;))L M
Debug++ 
.++ 
Write++ 
(++  
$str++  '
+++( )
filepath++* 2
)++2 3
;++3 4
if,, 
(,, 
source,, 
!=,, !
null,," &
&&,,' )
!,,* +

containers,,+ 5
.,,5 6
Contains,,6 >
(,,> ?
source,,? E
),,E F
),,F G
{-- 

containers.. "
..." #
Add..# &
(..& '
source..' -
)..- .
;... /
}// 
}00 
)00 
;00 
return22 

containers22 !
.22! "
ToArray22" )
(22) *
)22* +
;22+ ,
}33 
)33 
;33 
}44 	
}66 
}77 ò
BD:\Projekty\CS\Newtone\Newtone.Core\Processing\SearchProcessing.cs
	namespace

 	
Newtone


 
.

 
Core

 
.

 

Processing

 !
{ 
public 

class 
SearchProcessing !
{ 
public 
static 
void 
SearchOffline (
(( )
string) /
text0 4
,4 5
ObservableBridge6 F
<F G
SearchResultModelG X
>X Y
modelZ _
)_ `
{ 	

GlobalData 
. 
Current 
. 
Audios %
.% &
Values& ,
., -
ForEach- 4
(4 5
item5 9
=>: <
{ 
string 
artist 
= 
item  $
.$ %
Artist% +
;+ ,
string 
title 
= 
item #
.# $
Title$ )
;) *
if 
( 
CyrylicToUnicode $
.$ %
	IsCyrylic% .
(. /
artist/ 5
)5 6
)6 7
artist 
= 
CyrylicToUnicode -
.- .
Convert. 5
(5 6
artist6 <
)< =
;= >
if 
( 
CyrylicToUnicode $
.$ %
	IsCyrylic% .
(. /
title/ 4
)4 5
)5 6
title 
= 
CyrylicToUnicode ,
., -
Convert- 4
(4 5
title5 :
): ;
;; <
double 
artistSimiliarity (
=) *
CalculateSimilarity+ >
(> ?
text? C
.C D
ToLowerInvariantD T
(T U
)U V
,V W
artistX ^
.^ _
ToLowerInvariant_ o
(o p
)p q
)q r
;r s
double 
titleSimiliarity '
=( )
CalculateSimilarity* =
(= >
text> B
.B C
ToLowerInvariantC S
(S T
)T U
,U V
titleW \
.\ ]
ToLowerInvariant] m
(m n
)n o
)o p
;p q
string 
	trackName  
=! "
artist# )
+* +
$str, /
+0 1
title2 7
;7 8
int!! 
similiarCounter!! #
=!!$ %
Similiar!!& .
(!!. /
	trackName!!/ 8
,!!8 9
text!!: >
)!!> ?
;!!? @
if## 
(## 
artistSimiliarity## $
>=##% '
$num##( +
||##, .
titleSimiliarity##/ ?
>=##@ B
$num##C F
||##G I
similiarCounter##J Y
>##Z [
$num##\ ]
)##] ^
{$$ 
model%% 
.%% 
Add%% 
(%% 
new%% !
SearchResultModel%%" 3
(%%3 4
)%%4 5
{&& 
Author'' 
=''  
item''! %
.''% &
Artist''& ,
,'', -
Duration((  
=((! "
item((# '
.((' (
Duration((( 0
,((0 1
Id)) 
=)) 
item)) !
.))! "
FilePath))" *
,))* +
Image** 
=** 
item**  $
.**$ %
Image**% *
,*** +
Title++ 
=++ 
item++  $
.++$ %
Title++% *
,++* +
},, 
),, 
;,, 
}-- 
}.. 
).. 
;.. 
}// 	
public00 
async00 
static00 
Task00  
<00  !
int00! $
>00$ %
Search00& ,
(00, -
string00- 3
text004 8
,008 9
ObservableBridge00: J
<00J K
SearchResultModel00K \
>00\ ]
model00^ c
,00c d
int00e h
fromPage00i q
=00r s
$num00t u
)00u v
{11 	
int22 
maxItems22 
=22 
-22 
$num22 
;22 
if33 
(33 

GlobalData33 
.33 
Current33 "
.33" #
History33# *
.33* +
	FindIndex33+ 4
(334 5
model335 :
=>33; =
model33> C
.33C D
Text33D H
==33I K
text33L P
)33P Q
==33R T
-33U V
$num33V W
)33W X
{44 

GlobalData55 
.55 
Current55 "
.55" #
History55# *
.55* +
Add55+ .
(55. /
new55/ 2
HistoryModel553 ?
(55? @
)55@ A
{55B C
Text55D H
=55I J
text55K O
}55P Q
)55Q R
;55R S

GlobalData66 
.66 
Current66 "
.66" #
HistoryNeedRefresh66# 5
=666 7
true668 <
;66< =
}77 

GlobalData99 
.99 
Current99 
.99 

SaveConfig99 )
(99) *
)99* +
;99+ ,
YoutubeClient:: 
client::  
=::! "
new::# &
YoutubeClient::' 4
(::4 5
)::5 6
;::6 7
var;; 

validators;; 
=;; 
	CheckLink;; &
(;;& '
text;;' +
);;+ ,
;;;, -
if<< 
(<< 

validators<< 
.<< 
ContainsKey<< %
(<<% &
Query<<& +
.<<+ ,
Video<<, 1
)<<1 2
)<<2 3
{== 
var>> 
video>> 
=>> 
await>> !
client>>" (
.>>( )
Videos>>) /
.>>/ 0
GetAsync>>0 8
(>>8 9

validators>>9 C
[>>C D
Query>>D I
.>>I J
Video>>J O
]>>O P
)>>P Q
;>>Q R
model@@ 
.@@ 
Add@@ 
(@@ 
new@@ 
SearchResultModel@@ /
(@@/ 0
)@@0 1
{AA 
AuthorBB 
=BB 
videoBB "
.BB" #
AuthorBB# )
,BB) *
DurationCC 
=CC 
videoCC $
.CC$ %
DurationCC% -
,CC- .
TitleDD 
=DD 
videoDD !
.DD! "
TitleDD" '
,DD' (
ThumbUrlEE 
=EE 
videoEE $
.EE$ %

ThumbnailsEE% /
.EE/ 0
MediumResUrlEE0 <
,EE< =
IdFF 
=FF 
videoFF 
.FF 
IdFF !
,FF! "
MixIdGG 
=GG 
videoGG !
.GG! "!
GetVideoMixPlaylistIdGG" 7
(GG7 8
)GG8 9
,GG9 :
	VideoDataHH 
=HH 
stringHH  &
.HH& '
ConcatHH' -
(HH- .
videoHH. 3
.HH3 4
TitleHH4 9
,HH9 :

GlobalDataHH: D
.HHD E
	SEPARATORHHE N
,HHN O
videoHHO T
.HHT U
UrlHHU X
)HHX Y
}II 
)II 
;II 
maxItemsKK 
=KK 
$numKK 
;KK 
}LL 
elseMM 
ifMM 
(MM 

validatorsMM 
.MM 
ContainsKeyMM *
(MM* +
QueryMM+ 0
.MM0 1
SearchMM1 7
)MM7 8
||MM9 ;

validatorsMM< F
.MMF G
ContainsKeyMMG R
(MMR S
QueryMMS X
.MMX Y
NoneMMY ]
)MM] ^
)MM^ _
{NN 
varOO 
videosOO 
=OO 
awaitOO "
clientOO# )
.OO) *
SearchOO* 0
.OO0 1
GetVideosAsyncOO1 ?
(OO? @

validatorsOO@ J
[OOJ K

validatorsOOK U
.OOU V
ContainsKeyOOV a
(OOa b
QueryOOb g
.OOg h
NoneOOh l
)OOl m
?OOn o
QueryOOp u
.OOu v
NoneOOv z
:OO{ |
Query	OO} 
.
OO 
Search
OO 
]
OO 
,
OO 
fromPage
OO 
,
OO 
$num
OO 
)
OO 
.
OO 
BufferAsync
OO ¤
(
OO¤ ¥
)
OO¥ ¦
;
OO¦ §
DebugPP 
.PP 
	WriteLinePP 
(PP  
$strPP  +
+PP, -
videosPP. 4
.PP4 5
CountPP5 :
)PP: ;
;PP; <
foreachQQ 
(QQ 
varQQ 
videoQQ !
inQQ" $
videosQQ% +
)QQ+ ,
{RR 
modelSS 
.SS 
AddSS 
(SS 
newSS !
SearchResultModelSS" 3
(SS3 4
)SS4 5
{TT 
AuthorUU 
=UU  
videoUU! &
.UU& '
AuthorUU' -
,UU- .
DurationVV  
=VV! "
videoVV# (
.VV( )
DurationVV) 1
,VV1 2
IdWW 
=WW 
videoWW "
.WW" #
IdWW# %
,WW% &
MixIdXX 
=XX 
videoXX  %
.XX% &!
GetVideoMixPlaylistIdXX& ;
(XX; <
)XX< =
,XX= >
ThumbUrlYY  
=YY! "
videoYY# (
.YY( )

ThumbnailsYY) 3
.YY3 4
MediumResUrlYY4 @
,YY@ A
TitleZZ 
=ZZ 
videoZZ  %
.ZZ% &
TitleZZ& +
,ZZ+ ,
	VideoData[[ !
=[[" #
string[[$ *
.[[* +
Concat[[+ 1
([[1 2
video[[2 7
.[[7 8
Title[[8 =
,[[= >

GlobalData[[? I
.[[I J
	SEPARATOR[[J S
,[[S T
video[[U Z
.[[Z [
Url[[[ ^
)[[^ _
}\\ 
)\\ 
;\\ 
}]] 
}^^ 
else__ 
if__ 
(__ 

validators__ 
.__  
ContainsKey__  +
(__+ ,
Query__, 1
.__1 2
Playlist__2 :
)__: ;
)__; <
{`` 
varaa 
playlistaa 
=aa 
awaitaa $
clientaa% +
.aa+ ,
	Playlistsaa, 5
.aa5 6
GetVideosAsyncaa6 D
(aaD E

validatorsaaE O
[aaO P
QueryaaP U
.aaU V
PlaylistaaV ^
]aa^ _
)aa_ `
.aa` a
BufferAsyncaaa l
(aal m
$numaam p
)aap q
;aaq r
foreachbb 
(bb 
varbb 
videobb "
inbb# %
playlistbb& .
)bb. /
{cc 
modeldd 
.dd 
Adddd 
(dd 
newdd !
SearchResultModeldd" 3
(dd3 4
)dd4 5
{dd6 7
Authordd8 >
=dd? @
videoddA F
.ddF G
AuthorddG M
,ddM N
DurationddO W
=ddX Y
videoddZ _
.dd_ `
Durationdd` h
,ddh i
Titleddj o
=ddp q
videoddr w
.ddw x
Titleddx }
,dd} ~
ThumbUrl	dd 
=
dd 
video
dd 
.
dd 

Thumbnails
dd 
.
dd 
MediumResUrl
dd §
,
dd§ ¨
Id
dd© «
=
dd¬ ­
video
dd® ³
.
dd³ ´
Id
dd´ ¶
,
dd¶ ·
	VideoData
dd¸ Á
=
ddÂ Ã
string
ddÄ Ê
.
ddÊ Ë
Concat
ddË Ñ
(
ddÑ Ò
video
ddÒ ×
.
dd× Ø
Title
ddØ Ý
,
ddÝ Þ

GlobalData
ddÞ è
.
ddè é
	SEPARATOR
ddé ò
,
ddò ó
video
ddó ø
.
ddø ù
Url
ddù ü
,
ddü ý
$str
ddý 
,
dd 

validators
dd 
[
dd 
Query
dd 
.
dd 
Playlist
dd 
]
dd  
)
dd¡ ¢
}
dd¢ £
)
dd£ ¤
;
dd¤ ¥
}ee 
maxItemsff 
=ff 
playlistff #
.ff# $
Countff$ )
;ff) *
}gg 
returnii 
maxItemsii 
;ii 
}jj 	
publicll 
staticll 

Dictionaryll  
<ll  !
Queryll! &
,ll& '
stringll( .
>ll. /
	CheckLinkll0 9
(ll9 :
stringll: @
linkllA E
)llE F
{mm 	

Dictionarynn 
<nn 
Querynn 
,nn 
stringnn $
>nn$ %

returnDictnn& 0
=nn1 2
newnn3 6

Dictionarynn7 A
<nnA B
QuerynnB G
,nnG H
stringnnI O
>nnO P
(nnP Q
)nnQ R
;nnR S
ifpp 
(pp 
linkpp 
!=pp 
nullpp 
)pp 
{qq 
stringrr 
searchValuerr "
=rr# $
$strrr% '
;rr' (
booltt 

videoValidtt 
=tt  !$
YoutubeExplodeExtensionstt" :
.tt: ;
TryParseVideoIdtt; J
(ttJ K
linkttK O
,ttO P
outttQ T
stringttU [
videoIdtt\ c
)ttc d
;ttd e
booluu 
channelValiduu !
=uu" #$
YoutubeExplodeExtensionsuu$ <
.uu< =
TryParseChannelIduu= N
(uuN O
linkuuO S
,uuS T
outuuU X
stringuuY _
	channelIduu` i
)uui j
;uuj k
boolvv 
playlistValidvv "
=vv# $$
YoutubeExplodeExtensionsvv% =
.vv= >
TryParsePlaylistIdvv> P
(vvP Q
linkvvQ U
,vvU V
outvvW Z
stringvv[ a

playlistIdvvb l
)vvl m
;vvm n
boolxx 
searchValidxx  
=xx! "
linkxx# '
.xx' (
IndexOfxx( /
(xx/ 0
$strxx0 ?
)xx? @
>=xxA C
$numxxD E
;xxE F
ifzz 
(zz 
searchValidzz 
)zz 
searchValue{{ 
={{  !
HttpUtility{{" -
.{{- .
	UrlDecode{{. 7
({{7 8
link{{8 <
.{{< =
	Substring{{= F
({{F G
link{{G K
.{{K L
IndexOf{{L S
({{S T
$str{{T c
){{c d
+{{e f
$num{{g i
){{i j
){{j k
;{{k l
if}} 
(}} 

videoValid}} 
)}} 

returnDict~~ 
.~~ 
Add~~ "
(~~" #
Query~~# (
.~~( )
Video~~) .
,~~. /
videoId~~0 7
)~~7 8
;~~8 9
if 
( 
channelValid  
)  !

returnDict
 
.
 
Add
 "
(
" #
Query
# (
.
( )
Channel
) 0
,
0 1
	channelId
2 ;
)
; <
;
< =
if
 
(
 
playlistValid
 !
)
! "

returnDict
 
.
 
Add
 "
(
" #
Query
# (
.
( )
Playlist
) 1
,
1 2

playlistId
3 =
)
= >
;
> ?
if
 
(
 
searchValid
 
)
  

returnDict
 
.
 
Add
 "
(
" #
Query
# (
.
( )
Search
) /
,
/ 0
searchValue
1 <
)
< =
;
= >
}
 
if
 
(
 

returnDict
 
.
 
Count
  
==
! #
$num
$ %
)
% &

returnDict
 
.
 
Add
 
(
 
Query
 $
.
$ %
None
% )
,
) *
link
+ /
)
/ 0
;
0 1
return
 

returnDict
 
;
 
}
 	
public
 
static
 
double
 !
CalculateSimilarity
 0
(
0 1
string
1 7
source
8 >
,
> ?
string
@ F
target
G M
)
M N
{
 	
if
 
(
 
(
 
source
 
==
 
null
 
)
  
||
! #
(
$ %
target
% +
==
, .
null
/ 3
)
3 4
)
4 5
return
6 <
$num
= @
;
@ A
if
 
(
 
(
 
source
 
.
 
Length
 
==
 !
$num
" #
)
# $
||
% '
(
( )
target
) /
.
/ 0
Length
0 6
==
7 9
$num
: ;
)
; <
)
< =
return
> D
$num
E H
;
H I
if
 
(
 
source
 
==
 
target
  
)
  !
return
" (
$num
) ,
;
, -
int
 
stepsToSame
 
=
 (
ComputeLevenshteinDistance
 8
(
8 9
source
9 ?
,
? @
target
A G
)
G H
;
H I
return
 
(
 
$num
 
-
 
(
 
(
 
double
 "
)
" #
stepsToSame
# .
/
/ 0
(
1 2
double
2 8
)
8 9
Math
9 =
.
= >
Max
> A
(
A B
source
B H
.
H I
Length
I O
,
O P
target
Q W
.
W X
Length
X ^
)
^ _
)
_ `
)
` a
;
a b
}
 	
public
 
static
 
List
 
<
 
string
 !
>
! "'
GenerateSearchSuggestions
# <
(
< =
)
= >
{
 	
List
 
<
 
string
 
>
 

returnData
 #
=
$ %
new
& )
List
* .
<
. /
string
/ 5
>
5 6
(
6 7
)
7 8
;
8 9
foreach
 
(
 
var
 
item
 
in
 

GlobalData
  *
.
* +
Current
+ 2
.
2 3
Audios
3 9
.
9 :
Values
: @
)
@ A
{
 
if
 
(
 

returnData
 
.
 
Count
 #
>
$ %
$num
& '
)
' (
{
 
if
 
(
 

returnData
 "
.
" #
	FindIndex
# ,
(
, -
find
- 1
=>
2 4
find
5 9
.
9 :
ToLowerInvariant
: J
(
J K
)
K L
.
L M
Contains
M U
(
U V
item
V Z
.
Z [
Artist
[ a
.
a b
ToLowerInvariant
b r
(
r s
)
s t
)
t u
||
v x
item
y }
.
} ~
Artist~ 
.  
ToLowerInvariant 
( 
) 
. 
Contains  
(  ¡
find¡ ¥
.¥ ¦ 
ToLowerInvariant¦ ¶
(¶ ·
)· ¸
)¸ ¹
)¹ º
==» ½
-¾ ¿
$num¿ À
)À Á

returnData
 "
.
" #
Add
# &
(
& '
item
' +
.
+ ,
Artist
, 2
)
2 3
;
3 4
if
   
(
   

returnData
   "
.
  " #
	FindIndex
  # ,
(
  , -
find
  - 1
=>
  2 4
find
  5 9
.
  9 :
ToLowerInvariant
  : J
(
  J K
)
  K L
.
  L M
Contains
  M U
(
  U V
item
  V Z
.
  Z [
Title
  [ `
.
  ` a
ToLowerInvariant
  a q
(
  q r
)
  r s
)
  s t
||
  u w
item
  x |
.
  | }
Title  } 
.    
ToLowerInvariant   
(   
)   
.   
Contains   
(   
find   £
.  £ ¤ 
ToLowerInvariant  ¤ ´
(  ´ µ
)  µ ¶
)  ¶ ·
)  · ¸
==  ¹ »
-  ¼ ½
$num  ½ ¾
)  ¾ ¿

returnData
¡¡ "
.
¡¡" #
Add
¡¡# &
(
¡¡& '
item
¡¡' +
.
¡¡+ ,
Title
¡¡, 1
)
¡¡1 2
;
¡¡2 3
}
¢¢ 
}
££ 
foreach
¥¥ 
(
¥¥ 
var
¥¥ 
item
¥¥ 
in
¥¥ 

GlobalData
¥¥  *
.
¥¥* +
Current
¥¥+ 2
.
¥¥2 3
History
¥¥3 :
)
¥¥: ;
{
¦¦ 
if
§§ 
(
§§ 

returnData
§§ 
.
§§ 
	FindIndex
§§ (
(
§§( )
find
§§) -
=>
§§. 0
find
§§1 5
.
§§5 6
ToLowerInvariant
§§6 F
(
§§F G
)
§§G H
.
§§H I
Contains
§§I Q
(
§§Q R
item
§§R V
.
§§V W
Text
§§W [
.
§§[ \
ToLowerInvariant
§§\ l
(
§§l m
)
§§m n
)
§§n o
||
§§p r
item
§§s w
.
§§w x
Text
§§x |
.
§§| }
ToLowerInvariant§§} 
(§§ 
)§§ 
.§§ 
Contains§§ 
(§§ 
find§§ 
.§§  
ToLowerInvariant§§ ®
(§§® ¯
)§§¯ °
)§§° ±
)§§± ²
==§§³ µ
-§§¶ ·
$num§§· ¸
)§§¸ ¹

returnData
¨¨ 
.
¨¨ 
Add
¨¨ "
(
¨¨" #
item
¨¨# '
.
¨¨' (
Text
¨¨( ,
)
¨¨, -
;
¨¨- .
}
©© 

returnData
«« 
.
«« 
Sort
«« 
(
«« 
)
«« 
;
«« 
return
¬¬ 

returnData
¬¬ 
;
¬¬ 
}
­­ 	
public
¯¯ 
static
¯¯ 
int
¯¯ 
Similiar
¯¯ "
(
¯¯" #
string
¯¯# )
text1
¯¯* /
,
¯¯/ 0
string
¯¯1 7
text2
¯¯8 =
)
¯¯= >
{
°° 	
int
±± 
similiarCounter
±± 
=
±±  !
$num
±±" #
;
±±# $
List
²² 
<
²² 
string
²² 
>
²² 

text1Elems
²² #
=
²²$ %
new
²²& )
List
²²* .
<
²². /
string
²²/ 5
>
²²5 6
(
²²6 7
text1
²²7 <
.
²²< =
ToLowerInvariant
²²= M
(
²²M N
)
²²N O
.
²²O P
Split
²²P U
(
²²U V
$char
²²V Y
,
²²Y Z 
StringSplitOptions
²²[ m
.
²²m n!
RemoveEmptyEntries²²n 
)²² 
)²² 
;²² 
List
³³ 
<
³³ 
string
³³ 
>
³³ 

text2Elems
³³ #
=
³³$ %
new
³³& )
List
³³* .
<
³³. /
string
³³/ 5
>
³³5 6
(
³³6 7
text2
³³7 <
.
³³< =
ToLowerInvariant
³³= M
(
³³M N
)
³³N O
.
³³O P
Split
³³P U
(
³³U V
$char
³³V Y
,
³³Y Z 
StringSplitOptions
³³[ m
.
³³m n!
RemoveEmptyEntries³³n 
)³³ 
)³³ 
;³³ 
foreach
´´ 
(
´´ 
string
´´ 
elem
´´  
in
´´! #

text2Elems
´´$ .
)
´´. /
{
µµ 
if
¶¶ 
(
¶¶ 

text1Elems
¶¶ 
.
¶¶ 
Contains
¶¶ '
(
¶¶' (
elem
¶¶( ,
)
¶¶, -
&&
¶¶. 0
elem
¶¶1 5
.
¶¶5 6
Length
¶¶6 <
>
¶¶= >
$num
¶¶? @
)
¶¶@ A
similiarCounter
·· #
++
··# %
;
··% &
}
¸¸ 
return
¹¹ 
similiarCounter
¹¹ "
;
¹¹" #
}
ºº 	
private
½½ 
static
½½ 
int
½½ (
ComputeLevenshteinDistance
½½ 5
(
½½5 6
string
½½6 <
source
½½= C
,
½½C D
string
½½E K
target
½½L R
)
½½R S
{
¾¾ 	
if
¿¿ 
(
¿¿ 
(
¿¿ 
source
¿¿ 
==
¿¿ 
null
¿¿ 
)
¿¿  
||
¿¿! #
(
¿¿$ %
target
¿¿% +
==
¿¿, .
null
¿¿/ 3
)
¿¿3 4
)
¿¿4 5
return
¿¿6 <
$num
¿¿= >
;
¿¿> ?
if
ÀÀ 
(
ÀÀ 
(
ÀÀ 
source
ÀÀ 
.
ÀÀ 
Length
ÀÀ 
==
ÀÀ !
$num
ÀÀ" #
)
ÀÀ# $
||
ÀÀ% '
(
ÀÀ( )
target
ÀÀ) /
.
ÀÀ/ 0
Length
ÀÀ0 6
==
ÀÀ7 9
$num
ÀÀ: ;
)
ÀÀ; <
)
ÀÀ< =
return
ÀÀ> D
$num
ÀÀE F
;
ÀÀF G
if
ÁÁ 
(
ÁÁ 
source
ÁÁ 
==
ÁÁ 
target
ÁÁ  
)
ÁÁ  !
return
ÁÁ" (
source
ÁÁ) /
.
ÁÁ/ 0
Length
ÁÁ0 6
;
ÁÁ6 7
int
ÃÃ 
sourceWordCount
ÃÃ 
=
ÃÃ  !
source
ÃÃ" (
.
ÃÃ( )
Length
ÃÃ) /
;
ÃÃ/ 0
int
ÄÄ 
targetWordCount
ÄÄ 
=
ÄÄ  !
target
ÄÄ" (
.
ÄÄ( )
Length
ÄÄ) /
;
ÄÄ/ 0
if
ÇÇ 
(
ÇÇ 
sourceWordCount
ÇÇ 
==
ÇÇ  "
$num
ÇÇ# $
)
ÇÇ$ %
return
ÈÈ 
targetWordCount
ÈÈ &
;
ÈÈ& '
if
ÊÊ 
(
ÊÊ 
targetWordCount
ÊÊ 
==
ÊÊ  "
$num
ÊÊ# $
)
ÊÊ$ %
return
ËË 
sourceWordCount
ËË &
;
ËË& '
int
ÍÍ 
[
ÍÍ 
,
ÍÍ 
]
ÍÍ 
distance
ÍÍ 
=
ÍÍ 
new
ÍÍ !
int
ÍÍ" %
[
ÍÍ% &
sourceWordCount
ÍÍ& 5
+
ÍÍ6 7
$num
ÍÍ8 9
,
ÍÍ9 :
targetWordCount
ÍÍ; J
+
ÍÍK L
$num
ÍÍM N
]
ÍÍN O
;
ÍÍO P
for
ÐÐ 
(
ÐÐ 
int
ÐÐ 
i
ÐÐ 
=
ÐÐ 
$num
ÐÐ 
;
ÐÐ 
i
ÐÐ 
<=
ÐÐ  
sourceWordCount
ÐÐ! 0
;
ÐÐ0 1
distance
ÐÐ2 :
[
ÐÐ: ;
i
ÐÐ; <
,
ÐÐ< =
$num
ÐÐ> ?
]
ÐÐ? @
=
ÐÐA B
i
ÐÐC D
++
ÐÐD F
)
ÐÐF G
{
ÑÑ 
distance
ÒÒ 
[
ÒÒ 
i
ÒÒ 
,
ÒÒ 
$num
ÒÒ 
]
ÒÒ 
=
ÒÒ  
i
ÒÒ! "
;
ÒÒ" #
}
ÓÓ 
for
ÕÕ 
(
ÕÕ 
int
ÕÕ 
j
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
j
ÕÕ 
<=
ÕÕ  
targetWordCount
ÕÕ! 0
;
ÕÕ0 1
distance
ÕÕ2 :
[
ÕÕ: ;
$num
ÕÕ; <
,
ÕÕ< =
j
ÕÕ> ?
]
ÕÕ? @
=
ÕÕA B
j
ÕÕC D
++
ÕÕD F
)
ÕÕF G
{
ÖÖ 
distance
×× 
[
×× 
$num
×× 
,
×× 
j
×× 
]
×× 
=
××  
j
××! "
;
××" #
}
ØØ 
for
ÚÚ 
(
ÚÚ 
int
ÚÚ 
i
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
;
ÚÚ 
i
ÚÚ 
<=
ÚÚ  
sourceWordCount
ÚÚ! 0
;
ÚÚ0 1
i
ÚÚ2 3
++
ÚÚ3 5
)
ÚÚ5 6
{
ÛÛ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
j
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
j
ÜÜ  !
<=
ÜÜ" $
targetWordCount
ÜÜ% 4
;
ÜÜ4 5
j
ÜÜ6 7
++
ÜÜ7 9
)
ÜÜ9 :
{
ÝÝ 
int
ßß 
cost
ßß 
=
ßß 
(
ßß  
target
ßß  &
[
ßß& '
j
ßß' (
-
ßß) *
$num
ßß+ ,
]
ßß, -
==
ßß. 0
source
ßß1 7
[
ßß7 8
i
ßß8 9
-
ßß: ;
$num
ßß< =
]
ßß= >
)
ßß> ?
?
ßß@ A
$num
ßßB C
:
ßßD E
$num
ßßF G
;
ßßG H
distance
ââ 
[
ââ 
i
ââ 
,
ââ 
j
ââ  !
]
ââ! "
=
ââ# $
Math
ââ% )
.
ââ) *
Min
ââ* -
(
ââ- .
Math
ââ. 2
.
ââ2 3
Min
ââ3 6
(
ââ6 7
distance
ââ7 ?
[
ââ? @
i
ââ@ A
-
ââB C
$num
ââD E
,
ââE F
j
ââG H
]
ââH I
+
ââJ K
$num
ââL M
,
ââM N
distance
ââO W
[
ââW X
i
ââX Y
,
ââY Z
j
ââ[ \
-
ââ] ^
$num
ââ_ `
]
ââ` a
+
ââb c
$num
ââd e
)
ââe f
,
ââf g
distance
ââh p
[
ââp q
i
ââq r
-
ââs t
$num
ââu v
,
ââv w
j
ââx y
-
ââz {
$num
ââ| }
]
ââ} ~
+ââ 
costââ 
)ââ 
;ââ 
}
ãã 
}
ää 
return
ææ 
distance
ææ 
[
ææ 
sourceWordCount
ææ +
,
ææ+ ,
targetWordCount
ææ- <
]
ææ< =
;
ææ= >
}
çç 	
public
êê 
enum
êê 
Query
êê 
{
ëë 	
None
ìì 
,
ìì 
Video
íí 
,
íí 
Channel
îî 
,
îî 
Playlist
ïï 
,
ïï 
Search
ðð 
}
ññ 	
}
óó 
}ôô 