<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutAuthor" xml:space="preserve">
    <value>Author: Mateusz Nejman</value>
  </data>
  <data name="AboutDesc" xml:space="preserve">
    <value>The player allows you to listen to music from youtube, and locally. The author is not responsible for how the user uses the media from the websites.</value>
  </data>
  <data name="AboutWWW" xml:space="preserve">
    <value>Author page</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddTags" xml:space="preserve">
    <value>Add tags?</value>
  </data>
  <data name="Artist" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="Artists" xml:space="preserve">
    <value>Artists</value>
  </data>
  <data name="BackPressed" xml:space="preserve">
    <value>Press again to exit</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangeName" xml:space="preserve">
    <value>Change name</value>
  </data>
  <data name="ChoosePlaylist" xml:space="preserve">
    <value>Select playlist</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="Cover" xml:space="preserve">
    <value>Cover</value>
  </data>
  <data name="CoverLoad" xml:space="preserve">
    <value>Load cover</value>
  </data>
  <data name="CoverSave" xml:space="preserve">
    <value>Save cover</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="FileCorrupted" xml:space="preserve">
    <value>File is corrupted</value>
  </data>
  <data name="Instruction" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="LastViews" xml:space="preserve">
    <value>Last played</value>
  </data>
  <data name="Library" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="MainPage" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="MostViews" xml:space="preserve">
    <value>Most played</value>
  </data>
  <data name="NewPlaylist" xml:space="preserve">
    <value>New playlist</value>
  </data>
  <data name="NewPlaylistHint" xml:space="preserve">
    <value>Enter playlist name</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoConnection" xml:space="preserve">
    <value>No internet connection</value>
  </data>
  <data name="NoDownloads" xml:space="preserve">
    <value>No downloads in background</value>
  </data>
  <data name="PermissionGrant" xml:space="preserve">
    <value>Grant permissions</value>
  </data>
  <data name="PermissionInfo" xml:space="preserve">
    <value>The player requires permission to save data in order to download music and save settings</value>
  </data>
  <data name="Playlist" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="PlaylistDownload" xml:space="preserve">
    <value>Create playlist from downloaded tracks?</value>
  </data>
  <data name="PlaylistOrTrack" xml:space="preserve">
    <value>Download playlist or track?</value>
  </data>
  <data name="PlaylistPlay" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="Playlists" xml:space="preserve">
    <value>Playlists</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="QuestionDelete" xml:space="preserve">
    <value>Delete file</value>
  </data>
  <data name="QuestionDeleteFromPlaylist" xml:space="preserve">
    <value>from playlist</value>
  </data>
  <data name="QuestionDeletePlaylist" xml:space="preserve">
    <value>Delete playlist</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="Receive" xml:space="preserve">
    <value>Receive</value>
  </data>
  <data name="ReceiverCode" xml:space="preserve">
    <value>Receiver code</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Zapisz</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchHistory" xml:space="preserve">
    <value>Search history</value>
  </data>
  <data name="Searching" xml:space="preserve">
    <value>Searching...</value>
  </data>
  <data name="SearchTip" xml:space="preserve">
    <value>In search you can paste track or playlist link, or type title name.</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Settings0" xml:space="preserve">
    <value>Generate tags for local files</value>
  </data>
  <data name="Settings1" xml:space="preserve">
    <value>Auto tags</value>
  </data>
  <data name="Settings2" xml:space="preserve">
    <value>Clear data</value>
  </data>
  <data name="Settings3" xml:space="preserve">
    <value>Choose a theme</value>
  </data>
  <data name="Settings4" xml:space="preserve">
    <value>Add folder to scanned paths</value>
  </data>
  <data name="Settings5" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="SettingsChanges" xml:space="preserve">
    <value>The changes will be visible after restarting the application</value>
  </data>
  <data name="SnackDelete" xml:space="preserve">
    <value>Deleted successfully</value>
  </data>
  <data name="SnackFileExists" xml:space="preserve">
    <value>File dont exists</value>
  </data>
  <data name="SnackPlaylist" xml:space="preserve">
    <value>Added to playlist</value>
  </data>
  <data name="SnackQueue" xml:space="preserve">
    <value>Added to queue</value>
  </data>
  <data name="SyncAdd" xml:space="preserve">
    <value>Add to sync</value>
  </data>
  <data name="SyncAddPlaylist" xml:space="preserve">
    <value>Add to sync (playlist)</value>
  </data>
  <data name="SyncHelp1" xml:space="preserve">
    <value>1. Connect devices to the same network</value>
  </data>
  <data name="SyncHelp2" xml:space="preserve">
    <value>2. Enter code or wait for connecting</value>
  </data>
  <data name="SyncHelp2Desktop" xml:space="preserve">
    <value>2. Enter code</value>
  </data>
  <data name="SyncHelp3" xml:space="preserve">
    <value>3. Choose correct option</value>
  </data>
  <data name="SyncReceiving" xml:space="preserve">
    <value>Receiving files</value>
  </data>
  <data name="SyncSending" xml:space="preserve">
    <value>Sending files</value>
  </data>
  <data name="SyncShowFiles" xml:space="preserve">
    <value>Show files to send</value>
  </data>
  <data name="ThemeDark" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="ThemeDefault" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="ThemeLight" xml:space="preserve">
    <value>Pink</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TitleDownloads" xml:space="preserve">
    <value>Downloading</value>
  </data>
  <data name="Track" xml:space="preserve">
    <value>Track</value>
  </data>
  <data name="TrackCount" xml:space="preserve">
    <value>Saved tracks</value>
  </data>
  <data name="TrackCountPlaylist" xml:space="preserve">
    <value>Tracks</value>
  </data>
  <data name="TrackMenuDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="TrackMenuEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="TrackMenuPlaylist" xml:space="preserve">
    <value>Add to playlist</value>
  </data>
  <data name="TrackMenuQueue" xml:space="preserve">
    <value>Add to queue</value>
  </data>
  <data name="Tracks" xml:space="preserve">
    <value>Tracks</value>
  </data>
  <data name="UnknownArtist" xml:space="preserve">
    <value>Unknown artist</value>
  </data>
  <data name="Unpacked" xml:space="preserve">
    <value>Unpacked</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="YourCode" xml:space="preserve">
    <value>Your code</value>
  </data>
</root>